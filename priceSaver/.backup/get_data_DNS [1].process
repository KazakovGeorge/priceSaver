<?xml version="1.0" encoding="utf-8"?>
<Root>
  <DesignerItems>
    <DesignerItem>
      <Left>985</Left>
      <Top>355</Top>
      <Width>70</Width>
      <Height>70</Height>
      <ID>ed79fd7e-efb4-4e2b-8580-e5c107620046</ID>
      <zIndex>0</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Старт" InternalName="Start" FriendlyName="С блока Старт начинается работа диаграммы. В диаграмме может быть только один такой блок." Width="70" Height="70" PathToImage="ExternalToolboxes\Image\ico_Process Start.png" PathToToolboxImage="ExternalToolboxes\Image\icotb_Process Start.png" ImageType="OnlyImage" NoDelete="False" Invisible="False" Proportional="True" Version="10" Code="&amp;#xA;function Start{{{block_id}}}&amp;#xA;{                  &amp;#xA;    try&amp;#xA;    {&amp;#xA;    $currentblockid = &amp;quot;{{{block_native_id}}}&amp;quot;;   &amp;#xA;    &amp;#xA;        $Value        = {{{Value}}};&amp;#xA;        $SendOrkest   = ${{{SendOrkest}}};&amp;#xA;        $IsScreenshot = ${{{IsScreenshot}}};&amp;#xA;        &amp;#xA;        $ValueStr = VarToString($Value); &amp;#xA;             &amp;#xA;        $val = _shield $ValueStr;&amp;#xA;        if($SendOrkest -or $IsScreenshot)&amp;#xA;        {                      &amp;#xA;            if($val.Length -eq 0)&amp;#xA;            {&amp;#xA;                $val = &amp;quot;Screenshot &amp;quot;+[DateTime]::Now.ToString();&amp;#xA;            }&amp;#xA;            Write-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;SendLogOrkest&amp;lt;/InternalName&amp;gt;&amp;lt;UITextValue&amp;gt;$val&amp;lt;/UITextValue&amp;gt;&amp;lt;UITextType&amp;gt;Info&amp;lt;/UITextType&amp;gt;&amp;lt;IsScreenshot&amp;gt;{{{IsScreenshot}}}&amp;lt;/IsScreenshot&amp;gt;&amp;lt;/block&amp;gt;&amp;quot;); &amp;#xA;        }&amp;#xA;        if($val.Length -gt 0)&amp;#xA;        {&amp;#xA;            $xmlvar = &amp;quot;&amp;quot;;&amp;#xA;            try&amp;#xA;            {&amp;#xA;                $xmlvar = $script:__BinFormatter.vartoxmlraw($Value);&amp;#xA;            }&amp;#xA;            catch{} &amp;#xA;            Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;Log&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$val&amp;lt;/InternalValue&amp;gt;$xmlvar&amp;lt;/info&amp;gt;&amp;quot;);&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;    }&amp;#xA;    &amp;#xA;    try&amp;#xA;    {&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable1}}} = {{{Expression1}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable1: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable2}}} = {{{Expression2}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable2: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable3}}} = {{{Expression3}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable3: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable4}}} = {{{Expression4}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable4: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable5}}} = {{{Expression5}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable5: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression6}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression6: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression7}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression7: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression8}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression8: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression9}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression9: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression10}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression10: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        &amp;#xA;    }&amp;#xA;    catch {}&amp;#xA;    &amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    &amp;#xA;    $script:__NextBlockID = &amp;quot;{{{connector-Next}}}&amp;quot;;&amp;#xA;}                   &amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="Value" Tooltip="[Любой тип данных] Числовая, текстовая константа (в кавычках), имя переменной (начинающееся с $) или любое выражение, значение которого будет выведено в лог в процессе работы сценария робота. Значение может в том числе иметь сложный тип данных, например Список, Таблица или Словарь." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Записать в лог" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable1" Tooltip="[Переменная] Имя первой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Переменная 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression1" Tooltip="[Любой тип данных] Новое значение первой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Значение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable2" Tooltip="[Переменная] Имя второй переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Переменная 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression2" Tooltip="[Любой тип данных] Новое значение второй переменной. Свойство игнорируется, если не задано имя второй переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Значение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable3" Tooltip="[Переменная] Имя третьей переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Переменная 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression3" Tooltip="[Любой тип данных] Новое значение третьей переменной. Свойство игнорируется, если не задано имя третьей переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Значение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable4" Tooltip="[Переменная] Имя четвертой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Переменная 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression4" Tooltip="[Любой тип данных] Новое значение четвертой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Значение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable5" Tooltip="[Переменная] Имя пятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Переменная 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression5" Tooltip="[Любой тип данных] Новое значение пятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Значение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression6" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Выражение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression7" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Выражение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression8" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Выражение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression9" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Выражение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression10" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="{x:Null}" Caption="Выражение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SendOrkest" Tooltip="Если выбрано, то текст будет также логироваться в оркестратор, если подключение к нему активно" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="{x:Null}" EnumVariants="" Caption="Логировать в оркестратор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="IsScreenshot" Tooltip="Если выбрано, то будет создан скриншот экрана и отправлен в оркестратор, если подключение к нему активно" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="{x:Null}" EnumVariants="" Caption="Скриншот в оркестратор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то, если это главная диаграмма, будет использоваться значение &amp;quot;Handle&amp;quot;, иначе будет использоваться значение блока &amp;quot;Старт&amp;quot; главной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorDirection" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Right&amp;quot; - направо; &amp;quot;Bottom&amp;quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &amp;quot;Если ошибка&amp;quot; (например блок &amp;quot;Условие&amp;quot;). Если выбрано значение &amp;quot;Default&amp;quot;, то, если это главная диаграмма, будет использоваться значение &amp;quot;Bottom&amp;quot;, иначе будет использоваться значение блока &amp;quot;Старт&amp;quot; главной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="Default;Right;Bottom" Caption="Направление выхода" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то, если это главная диаграмма, будет использоваться значение &amp;quot;Debug&amp;quot;, иначе будет использоваться значение блока &amp;quot;Старт&amp;quot; главной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="{x:Null}" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="{x:Null}" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>385</Left>
      <Top>860</Top>
      <Width>100</Width>
      <Height>100</Height>
      <ID>84f26c8d-ba23-42db-a3c3-4c1791c6bf7c</ID>
      <zIndex>32</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="E10" InternalName="IfCondition" FriendlyName="Блок проверяет указанное условие на истинность и, в зависимости от результата, выполнение сценария продолжается в сторону выхода &amp;quot;Да&amp;quot; (условие выполнилось) или &amp;quot;Нет&amp;quot; (условие не выполнилось). Например, условие $a == &amp;quot;Привет&amp;quot; проверяет, равно ли значение переменной $a значению &amp;quot;Привет&amp;quot;, а условие $Result &amp;gt; 5 проверяет, превышает ли значение переменной $Result значение 5. Условие может содержать математические и логические операции, константы, функции, другие переменные и т.д. Примеры выражений, которые можно использовать в условиях, доступны по нажатию на кнопку ... рядом со свойством Условие." Width="100" Height="100" PathToImage="" PathToToolboxImage="ExternalToolboxes\Image\icotb_If condition.png" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="True" Version="46" Code="&amp;#xA;function IfCondition{{{block_id}}}&amp;#xA;{&amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;); &amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;   &amp;#xA;        if ({{{Condition}}}) &amp;#xA;        {&amp;#xA;            $__Error.Jump(&amp;quot;{{{connector-Yes}}}&amp;quot;);&amp;#xA;            return;&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {   &amp;#xA;            $__Error.Jump(&amp;quot;{{{connector-No}}}&amp;quot;);&amp;#xA;            return;&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_); &amp;#xA;        return;&amp;#xA;    } &amp;#xA;    $__Error.Quit();&amp;#xA;}&amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="8"&gt;&lt;Property Name="Condition" Tooltip="[Любое выражение] В зависимости от значения этого выражения выполнение сценария продолжится по выходу &amp;quot;Да&amp;quot; или &amp;quot;Нет&amp;quot;. Значение выражения, эквивалентное 0 (нулю) или $False приравнивается к &amp;quot;Нет&amp;quot;, все остальные значения - приравниваются к &amp;quot;Да&amp;quot;. Например, если в переменную $a было ранее записано значение 5, то условие $a&amp;gt;2 является истинным, а условие $a == 6 является ложным." CatalogName="Main properties" Type="Expression" Value="$E10 == $True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Any Expression" EnumVariants="{x:Null}" Caption="Условие" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorDirection" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Right&amp;quot; - направо; &amp;quot;Bottom&amp;quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &amp;quot;Если ошибка&amp;quot; (например блок &amp;quot;Условие&amp;quot;). Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Right;Bottom" Caption="Направление выхода" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Нет" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF008000" Caption="Да" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>980</Left>
      <Top>860</Top>
      <Width>100</Width>
      <Height>100</Height>
      <ID>6cd76787-1d6a-4d2a-bb34-6874a036d351</ID>
      <zIndex>37</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="S10" InternalName="IfCondition" FriendlyName="Блок проверяет указанное условие на истинность и, в зависимости от результата, выполнение сценария продолжается в сторону выхода &amp;quot;Да&amp;quot; (условие выполнилось) или &amp;quot;Нет&amp;quot; (условие не выполнилось). Например, условие $a == &amp;quot;Привет&amp;quot; проверяет, равно ли значение переменной $a значению &amp;quot;Привет&amp;quot;, а условие $Result &amp;gt; 5 проверяет, превышает ли значение переменной $Result значение 5. Условие может содержать математические и логические операции, константы, функции, другие переменные и т.д. Примеры выражений, которые можно использовать в условиях, доступны по нажатию на кнопку ... рядом со свойством Условие." Width="100" Height="100" PathToImage="" PathToToolboxImage="ExternalToolboxes\Image\icotb_If condition.png" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="True" Version="46" Code="&amp;#xA;function IfCondition{{{block_id}}}&amp;#xA;{&amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;); &amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;   &amp;#xA;        if ({{{Condition}}}) &amp;#xA;        {&amp;#xA;            $__Error.Jump(&amp;quot;{{{connector-Yes}}}&amp;quot;);&amp;#xA;            return;&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {   &amp;#xA;            $__Error.Jump(&amp;quot;{{{connector-No}}}&amp;quot;);&amp;#xA;            return;&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_); &amp;#xA;        return;&amp;#xA;    } &amp;#xA;    $__Error.Quit();&amp;#xA;}&amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="8"&gt;&lt;Property Name="Condition" Tooltip="[Любое выражение] В зависимости от значения этого выражения выполнение сценария продолжится по выходу &amp;quot;Да&amp;quot; или &amp;quot;Нет&amp;quot;. Значение выражения, эквивалентное 0 (нулю) или $False приравнивается к &amp;quot;Нет&amp;quot;, все остальные значения - приравниваются к &amp;quot;Да&amp;quot;. Например, если в переменную $a было ранее записано значение 5, то условие $a&amp;gt;2 является истинным, а условие $a == 6 является ложным." CatalogName="Main properties" Type="Expression" Value="$S10 == $True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Any Expression" EnumVariants="{x:Null}" Caption="Условие" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorDirection" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Right&amp;quot; - направо; &amp;quot;Bottom&amp;quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &amp;quot;Если ошибка&amp;quot; (например блок &amp;quot;Условие&amp;quot;). Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Right;Bottom" Caption="Направление выхода" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Нет" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF008000" Caption="Да" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1730</Left>
      <Top>860</Top>
      <Width>100</Width>
      <Height>100</Height>
      <ID>fee617fd-117a-43aa-bedc-0aa88a7e23f9</ID>
      <zIndex>41</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="S20" InternalName="IfCondition" FriendlyName="Блок проверяет указанное условие на истинность и, в зависимости от результата, выполнение сценария продолжается в сторону выхода &amp;quot;Да&amp;quot; (условие выполнилось) или &amp;quot;Нет&amp;quot; (условие не выполнилось). Например, условие $a == &amp;quot;Привет&amp;quot; проверяет, равно ли значение переменной $a значению &amp;quot;Привет&amp;quot;, а условие $Result &amp;gt; 5 проверяет, превышает ли значение переменной $Result значение 5. Условие может содержать математические и логические операции, константы, функции, другие переменные и т.д. Примеры выражений, которые можно использовать в условиях, доступны по нажатию на кнопку ... рядом со свойством Условие." Width="100" Height="100" PathToImage="" PathToToolboxImage="ExternalToolboxes\Image\icotb_If condition.png" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="True" Version="46" Code="&amp;#xA;function IfCondition{{{block_id}}}&amp;#xA;{&amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;); &amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;   &amp;#xA;        if ({{{Condition}}}) &amp;#xA;        {&amp;#xA;            $__Error.Jump(&amp;quot;{{{connector-Yes}}}&amp;quot;);&amp;#xA;            return;&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {   &amp;#xA;            $__Error.Jump(&amp;quot;{{{connector-No}}}&amp;quot;);&amp;#xA;            return;&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_); &amp;#xA;        return;&amp;#xA;    } &amp;#xA;    $__Error.Quit();&amp;#xA;}&amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="8"&gt;&lt;Property Name="Condition" Tooltip="[Любое выражение] В зависимости от значения этого выражения выполнение сценария продолжится по выходу &amp;quot;Да&amp;quot; или &amp;quot;Нет&amp;quot;. Значение выражения, эквивалентное 0 (нулю) или $False приравнивается к &amp;quot;Нет&amp;quot;, все остальные значения - приравниваются к &amp;quot;Да&amp;quot;. Например, если в переменную $a было ранее записано значение 5, то условие $a&amp;gt;2 является истинным, а условие $a == 6 является ложным." CatalogName="Main properties" Type="Expression" Value="$S20 == $True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Any Expression" EnumVariants="{x:Null}" Caption="Условие" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorDirection" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Right&amp;quot; - направо; &amp;quot;Bottom&amp;quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &amp;quot;Если ошибка&amp;quot; (например блок &amp;quot;Условие&amp;quot;). Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Right;Bottom" Caption="Направление выхода" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Нет" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF008000" Caption="Да" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>2730</Left>
      <Top>860</Top>
      <Width>100</Width>
      <Height>100</Height>
      <ID>9fc4e7c7-59db-41e3-8d2c-90aca2f43aa0</ID>
      <zIndex>43</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="S30" InternalName="IfCondition" FriendlyName="Блок проверяет указанное условие на истинность и, в зависимости от результата, выполнение сценария продолжается в сторону выхода &amp;quot;Да&amp;quot; (условие выполнилось) или &amp;quot;Нет&amp;quot; (условие не выполнилось). Например, условие $a == &amp;quot;Привет&amp;quot; проверяет, равно ли значение переменной $a значению &amp;quot;Привет&amp;quot;, а условие $Result &amp;gt; 5 проверяет, превышает ли значение переменной $Result значение 5. Условие может содержать математические и логические операции, константы, функции, другие переменные и т.д. Примеры выражений, которые можно использовать в условиях, доступны по нажатию на кнопку ... рядом со свойством Условие." Width="100" Height="100" PathToImage="" PathToToolboxImage="ExternalToolboxes\Image\icotb_If condition.png" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="True" Version="46" Code="&amp;#xA;function IfCondition{{{block_id}}}&amp;#xA;{&amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;); &amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;   &amp;#xA;        if ({{{Condition}}}) &amp;#xA;        {&amp;#xA;            $__Error.Jump(&amp;quot;{{{connector-Yes}}}&amp;quot;);&amp;#xA;            return;&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {   &amp;#xA;            $__Error.Jump(&amp;quot;{{{connector-No}}}&amp;quot;);&amp;#xA;            return;&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_); &amp;#xA;        return;&amp;#xA;    } &amp;#xA;    $__Error.Quit();&amp;#xA;}&amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="8"&gt;&lt;Property Name="Condition" Tooltip="[Любое выражение] В зависимости от значения этого выражения выполнение сценария продолжится по выходу &amp;quot;Да&amp;quot; или &amp;quot;Нет&amp;quot;. Значение выражения, эквивалентное 0 (нулю) или $False приравнивается к &amp;quot;Нет&amp;quot;, все остальные значения - приравниваются к &amp;quot;Да&amp;quot;. Например, если в переменную $a было ранее записано значение 5, то условие $a&amp;gt;2 является истинным, а условие $a == 6 является ложным." CatalogName="Main properties" Type="Expression" Value="$S30 == $True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Any Expression" EnumVariants="{x:Null}" Caption="Условие" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorDirection" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Right&amp;quot; - направо; &amp;quot;Bottom&amp;quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &amp;quot;Если ошибка&amp;quot; (например блок &amp;quot;Условие&amp;quot;). Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Right;Bottom" Caption="Направление выхода" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Нет" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF008000" Caption="Да" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>385</Left>
      <Top>2460</Top>
      <Width>100</Width>
      <Height>100</Height>
      <ID>cf70f599-db28-4a13-a5c5-0220a03b625a</ID>
      <zIndex>17</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="GOTO END" InternalName="Assign" FriendlyName="Блок устанавливает новые значения для одной или нескольких переменных. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки. Переменная может быть выбрана из числа объявленных в панели Переменные, также может быть вручную введено имя новой переменной или ранее использовавшейся в других блоках переменной, даже если эта переменная не была объявлена в панели Переменные. Примеры выражений, которые можно использовать в свойствах Значение, доступны по нажатию на кнопки ... рядом с соответствующими свойствами." Width="100" Height="100" PathToImage="ExternalToolboxes\Image\ico_Assign Variable.png" PathToToolboxImage="{x:Null}" ImageType="TopImage" NoDelete="False" Invisible="False" Proportional="True" Version="166" Code="&amp;#xA;function Assign{{{block_id}}}&amp;#xA;{        &amp;#xA;    try&amp;#xA;    {&amp;#xA;        $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;); &amp;#xA;        $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;          &amp;#xA;&amp;#xA;            try&amp;#xA;            {&amp;#xA;                {{{Variable1}}} = {{{Expression1}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable2}}} = {{{Expression2}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable3}}} = {{{Expression3}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable4}}} = {{{Expression4}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable5}}} = {{{Expression5}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable6}}} = {{{Expression6}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable7}}} = {{{Expression7}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable8}}} = {{{Expression8}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable9}}} = {{{Expression9}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable10}}} = {{{Expression10}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;    }&amp;#xA;    catch&amp;#xA;    {&amp;#xA;        $__Error.ExceptionCatch($_); &amp;#xA;        return;&amp;#xA;    }&amp;#xA;      &amp;#xA;    $__Error.Quit();&amp;#xA;}                                                  &amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="Variable1" Tooltip="[Переменная] Имя первой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="$E10" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression1" Tooltip="[Любой тип данных] Новое значение первой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="$False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable2" Tooltip="[Переменная] Имя второй переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="$S10" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression2" Tooltip="[Любой тип данных] Новое значение второй переменной. Свойство игнорируется, если не задано имя второй переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="$False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable3" Tooltip="[Переменная] Имя третьей переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="$S20" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression3" Tooltip="[Любой тип данных] Новое значение третьей переменной. Свойство игнорируется, если не задано имя третьей переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="$False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable4" Tooltip="[Переменная] Имя четвертой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="$S30" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression4" Tooltip="[Любой тип данных] Новое значение четвертой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="$False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable5" Tooltip="[Переменная] Имя пятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="$S40" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression5" Tooltip="[Любой тип данных] Новое значение пятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="$False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable6" Tooltip="[Переменная] Имя шестой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 6" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression6" Tooltip="[Любой тип данных] Новое значение шестой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 6" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable7" Tooltip="[Переменная] Имя седьмой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 7" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression7" Tooltip="[Любой тип данных] Новое значение седьмой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 7" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable8" Tooltip="[Переменная] Имя восьмой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 8" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression8" Tooltip="[Любой тип данных] Новое значение восьмой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 8" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable9" Tooltip="[Переменная] Имя девятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 9" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression9" Tooltip="[Любой тип данных] Новое значение девятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 9" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable10" Tooltip="[Переменная] Имя десятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 10" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression10" Tooltip="[Любой тип данных] Новое значение десятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 10" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>980</Left>
      <Top>2455</Top>
      <Width>100</Width>
      <Height>100</Height>
      <ID>d2c7eade-9d40-422d-9946-dbb6946edf48</ID>
      <zIndex>65</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="GOTO S20" InternalName="Assign" FriendlyName="Блок устанавливает новые значения для одной или нескольких переменных. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки. Переменная может быть выбрана из числа объявленных в панели Переменные, также может быть вручную введено имя новой переменной или ранее использовавшейся в других блоках переменной, даже если эта переменная не была объявлена в панели Переменные. Примеры выражений, которые можно использовать в свойствах Значение, доступны по нажатию на кнопки ... рядом с соответствующими свойствами." Width="100" Height="100" PathToImage="ExternalToolboxes\Image\ico_Assign Variable.png" PathToToolboxImage="{x:Null}" ImageType="TopImage" NoDelete="False" Invisible="False" Proportional="True" Version="166" Code="&amp;#xA;function Assign{{{block_id}}}&amp;#xA;{        &amp;#xA;    try&amp;#xA;    {&amp;#xA;        $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;); &amp;#xA;        $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;          &amp;#xA;&amp;#xA;            try&amp;#xA;            {&amp;#xA;                {{{Variable1}}} = {{{Expression1}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable2}}} = {{{Expression2}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable3}}} = {{{Expression3}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable4}}} = {{{Expression4}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable5}}} = {{{Expression5}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable6}}} = {{{Expression6}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable7}}} = {{{Expression7}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable8}}} = {{{Expression8}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable9}}} = {{{Expression9}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable10}}} = {{{Expression10}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;    }&amp;#xA;    catch&amp;#xA;    {&amp;#xA;        $__Error.ExceptionCatch($_); &amp;#xA;        return;&amp;#xA;    }&amp;#xA;      &amp;#xA;    $__Error.Quit();&amp;#xA;}                                                  &amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="True" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="Variable1" Tooltip="[Переменная] Имя первой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="$E10" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression1" Tooltip="[Любой тип данных] Новое значение первой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="$False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable2" Tooltip="[Переменная] Имя второй переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="$S10" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression2" Tooltip="[Любой тип данных] Новое значение второй переменной. Свойство игнорируется, если не задано имя второй переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="$False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable3" Tooltip="[Переменная] Имя третьей переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="$S20" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression3" Tooltip="[Любой тип данных] Новое значение третьей переменной. Свойство игнорируется, если не задано имя третьей переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="$True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable4" Tooltip="[Переменная] Имя четвертой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="$S30" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression4" Tooltip="[Любой тип данных] Новое значение четвертой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="$False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable5" Tooltip="[Переменная] Имя пятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="$S40" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression5" Tooltip="[Любой тип данных] Новое значение пятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="$False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable6" Tooltip="[Переменная] Имя шестой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 6" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression6" Tooltip="[Любой тип данных] Новое значение шестой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 6" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable7" Tooltip="[Переменная] Имя седьмой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 7" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression7" Tooltip="[Любой тип данных] Новое значение седьмой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 7" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable8" Tooltip="[Переменная] Имя восьмой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 8" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression8" Tooltip="[Любой тип данных] Новое значение восьмой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 8" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable9" Tooltip="[Переменная] Имя девятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 9" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression9" Tooltip="[Любой тип данных] Новое значение девятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 9" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable10" Tooltip="[Переменная] Имя десятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 10" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression10" Tooltip="[Любой тип данных] Новое значение десятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 10" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1730</Left>
      <Top>2460</Top>
      <Width>100</Width>
      <Height>100</Height>
      <ID>f4783d77-abe7-49fb-b5d4-f2afcc6b5693</ID>
      <zIndex>60</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="GOTO S30" InternalName="Assign" FriendlyName="Блок устанавливает новые значения для одной или нескольких переменных. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки. Переменная может быть выбрана из числа объявленных в панели Переменные, также может быть вручную введено имя новой переменной или ранее использовавшейся в других блоках переменной, даже если эта переменная не была объявлена в панели Переменные. Примеры выражений, которые можно использовать в свойствах Значение, доступны по нажатию на кнопки ... рядом с соответствующими свойствами." Width="100" Height="100" PathToImage="ExternalToolboxes\Image\ico_Assign Variable.png" PathToToolboxImage="{x:Null}" ImageType="TopImage" NoDelete="False" Invisible="False" Proportional="True" Version="166" Code="&amp;#xA;function Assign{{{block_id}}}&amp;#xA;{        &amp;#xA;    try&amp;#xA;    {&amp;#xA;        $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;); &amp;#xA;        $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;          &amp;#xA;&amp;#xA;            try&amp;#xA;            {&amp;#xA;                {{{Variable1}}} = {{{Expression1}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable2}}} = {{{Expression2}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable3}}} = {{{Expression3}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable4}}} = {{{Expression4}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable5}}} = {{{Expression5}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable6}}} = {{{Expression6}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable7}}} = {{{Expression7}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable8}}} = {{{Expression8}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable9}}} = {{{Expression9}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable10}}} = {{{Expression10}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;    }&amp;#xA;    catch&amp;#xA;    {&amp;#xA;        $__Error.ExceptionCatch($_); &amp;#xA;        return;&amp;#xA;    }&amp;#xA;      &amp;#xA;    $__Error.Quit();&amp;#xA;}                                                  &amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="Variable1" Tooltip="[Переменная] Имя первой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="$E10" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression1" Tooltip="[Любой тип данных] Новое значение первой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="$False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable2" Tooltip="[Переменная] Имя второй переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="$S10" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression2" Tooltip="[Любой тип данных] Новое значение второй переменной. Свойство игнорируется, если не задано имя второй переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="$False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable3" Tooltip="[Переменная] Имя третьей переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="$S20" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression3" Tooltip="[Любой тип данных] Новое значение третьей переменной. Свойство игнорируется, если не задано имя третьей переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="$False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable4" Tooltip="[Переменная] Имя четвертой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="$S30" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression4" Tooltip="[Любой тип данных] Новое значение четвертой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="$True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable5" Tooltip="[Переменная] Имя пятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="$S40" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression5" Tooltip="[Любой тип данных] Новое значение пятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="$False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable6" Tooltip="[Переменная] Имя шестой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 6" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression6" Tooltip="[Любой тип данных] Новое значение шестой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 6" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable7" Tooltip="[Переменная] Имя седьмой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 7" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression7" Tooltip="[Любой тип данных] Новое значение седьмой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 7" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable8" Tooltip="[Переменная] Имя восьмой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 8" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression8" Tooltip="[Любой тип данных] Новое значение восьмой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 8" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable9" Tooltip="[Переменная] Имя девятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 9" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression9" Tooltip="[Любой тип данных] Новое значение девятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 9" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable10" Tooltip="[Переменная] Имя десятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 10" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression10" Tooltip="[Любой тип данных] Новое значение десятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 10" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>2640</Left>
      <Top>2380</Top>
      <Width>100</Width>
      <Height>100</Height>
      <ID>6c7d9ad7-d70e-478f-8001-99d675925e14</ID>
      <zIndex>25</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="GOTO END" InternalName="Assign" FriendlyName="Блок устанавливает новые значения для одной или нескольких переменных. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки. Переменная может быть выбрана из числа объявленных в панели Переменные, также может быть вручную введено имя новой переменной или ранее использовавшейся в других блоках переменной, даже если эта переменная не была объявлена в панели Переменные. Примеры выражений, которые можно использовать в свойствах Значение, доступны по нажатию на кнопки ... рядом с соответствующими свойствами." Width="100" Height="100" PathToImage="ExternalToolboxes\Image\ico_Assign Variable.png" PathToToolboxImage="{x:Null}" ImageType="TopImage" NoDelete="False" Invisible="False" Proportional="True" Version="166" Code="&amp;#xA;function Assign{{{block_id}}}&amp;#xA;{        &amp;#xA;    try&amp;#xA;    {&amp;#xA;        $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;); &amp;#xA;        $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;          &amp;#xA;&amp;#xA;            try&amp;#xA;            {&amp;#xA;                {{{Variable1}}} = {{{Expression1}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable2}}} = {{{Expression2}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable3}}} = {{{Expression3}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable4}}} = {{{Expression4}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable5}}} = {{{Expression5}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable6}}} = {{{Expression6}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable7}}} = {{{Expression7}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable8}}} = {{{Expression8}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable9}}} = {{{Expression9}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable10}}} = {{{Expression10}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;    }&amp;#xA;    catch&amp;#xA;    {&amp;#xA;        $__Error.ExceptionCatch($_); &amp;#xA;        return;&amp;#xA;    }&amp;#xA;      &amp;#xA;    $__Error.Quit();&amp;#xA;}                                                  &amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="Variable1" Tooltip="[Переменная] Имя первой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="$E10" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression1" Tooltip="[Любой тип данных] Новое значение первой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="$False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable2" Tooltip="[Переменная] Имя второй переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="$S10" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression2" Tooltip="[Любой тип данных] Новое значение второй переменной. Свойство игнорируется, если не задано имя второй переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="$False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable3" Tooltip="[Переменная] Имя третьей переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="$S20" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression3" Tooltip="[Любой тип данных] Новое значение третьей переменной. Свойство игнорируется, если не задано имя третьей переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="$False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable4" Tooltip="[Переменная] Имя четвертой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="$S30" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression4" Tooltip="[Любой тип данных] Новое значение четвертой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="$False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable5" Tooltip="[Переменная] Имя пятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="$S40" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression5" Tooltip="[Любой тип данных] Новое значение пятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="$False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable6" Tooltip="[Переменная] Имя шестой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 6" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression6" Tooltip="[Любой тип данных] Новое значение шестой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 6" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable7" Tooltip="[Переменная] Имя седьмой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 7" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression7" Tooltip="[Любой тип данных] Новое значение седьмой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 7" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable8" Tooltip="[Переменная] Имя восьмой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 8" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression8" Tooltip="[Любой тип данных] Новое значение восьмой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 8" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable9" Tooltip="[Переменная] Имя девятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 9" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression9" Tooltip="[Любой тип данных] Новое значение девятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 9" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable10" Tooltip="[Переменная] Имя десятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 10" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression10" Tooltip="[Любой тип данных] Новое значение десятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 10" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>930</Left>
      <Top>1360</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>d4e0b0f9-1840-4f0b-9153-a84a40ecd072</ID>
      <zIndex>83</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Запустить браузер" InternalName="LaunchBrowser" FriendlyName="Запуск выбранного браузера" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser chrome W.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="54" Code="&amp;#xA;function LaunchBrowser{{{block_id}}}&amp;#xA;{&amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);   &amp;#xA;                                &amp;#xA;    $AppPath          = {{{AppPath}}};&amp;#xA;    $URL              = _shield({{{URL}}});&amp;#xA;    $AppWaitStartTime = {{{AppWaitStartTime}}};&amp;#xA;    $ProfileName      = {{{ProfileName}}}; &amp;#xA;        &amp;#xA;        {{{ProcessID}}} = &amp;quot;&amp;quot;; &amp;#xA;            &amp;#xA;        $AppPath = ExpandConstFilePath $AppPath $true&amp;#xA;      &amp;#xA;        $psresultstr = Read-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;LaunchBrowser&amp;lt;/InternalName&amp;gt;&amp;lt;InternalType&amp;gt;{{{BrowserType}}}&amp;lt;/InternalType&amp;gt;&amp;lt;AppPath&amp;gt;$AppPath&amp;lt;/AppPath&amp;gt;&amp;lt;URL&amp;gt;$URL&amp;lt;/URL&amp;gt;&amp;lt;AppWaitStart&amp;gt;True&amp;lt;/AppWaitStart&amp;gt;&amp;lt;AppWaitStartTime&amp;gt;$AppWaitStartTime&amp;lt;/AppWaitStartTime&amp;gt;&amp;lt;UseCurrentTab&amp;gt;{{{UseCurrentTab}}}&amp;lt;/UseCurrentTab&amp;gt;&amp;lt;ProfileName&amp;gt;$ProfileName&amp;lt;/ProfileName&amp;gt;&amp;lt;IsIncognito&amp;gt;{{{IsIncognito}}}&amp;lt;/IsIncognito&amp;gt;&amp;lt;FullScreen&amp;gt;{{{FullScreen}}}&amp;lt;/FullScreen&amp;gt;&amp;lt;/block&amp;gt;&amp;quot;);                     &amp;#xA;        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);&amp;#xA;        if($__Error.CheckResult($psResult)) { return; }&amp;#xA;        &amp;#xA;        {{{ProcessID}}} = $psResult.Result;&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                            &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FFFFFFFF" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="16"&gt;&lt;Property Name="BrowserType" Tooltip="Выбор типа браузера" CatalogName="Main properties" Type="Enum" Value="Chrome" Visible="True" DefaultValue="" ValueType="" EnumVariants="IE;Chrome;Opera;Yandex;Edge;Firefox" Caption="Тип браузера" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="URL" Tooltip="[Текст] Адрес открываемой при запуске страницы" CatalogName="Main properties" Type="Expression" Value="$settings.website + &amp;quot;/search/?q=&amp;quot; + $settings.request.Replace(&amp;quot; &amp;quot;,&amp;quot;+&amp;quot;)" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="{x:Null}" Caption="URL" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="UseCurrentTab" Tooltip="Если выбрано, то страница откроется в текущей выбранной вкладке браузера, в противном случае будет открыта новая вкладка" CatalogName="Main properties" Type="Bool" Value="false" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Текущая вкладка" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="IsIncognito" Tooltip="Если включено, то браузер будет запускаться в режиме инкогнито (если браузер поддерживает этот режим)" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Режим инкогнито" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="FullScreen" Tooltip="При запуске браузер будет развернут на весь экран" CatalogName="Main properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="На весь экран" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ProfileName" Tooltip="[Текст] Имя профиля, с которым необходимо запустить браузер. Например: \&amp;quot;Profile 1\&amp;quot;. Если значение пустое, то браузер запускается с профилем по умолчанию. Если указанного профиля не существует, то он будет создан автоматически. Внимание! После создания профиля необходимо включить плагин Sherpa RPA" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="" Caption="Имя профиля" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AppPath" Tooltip="[Текст] Путь к приложению браузера. Если значение не задано, то производится поиск по нескольким стандартным расположениям браузера" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="{x:Null}" Caption="Путь к браузеру" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AppWaitStartTime" Tooltip="Время ожидания запуска приложения и загрузки вкладки в секундах. Внимание! Могут возникать проблемы с сайтами, использующими много запросов AJAX (где происходит подгрузка контента после загрузки страницы). Для таких сайтов рекомендуется устанавливать время ожидания 0, а затем ожидать появления какого либо элемента на странице, обозначающего окончание загрузки контента" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="1" ValueType="" EnumVariants="{x:Null}" Caption="Время ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ProcessID" Tooltip="[Ссылка] Переменная, в которую будет записан идентификатор запущенного процесса браузера, а также открытой вкладки браузера. Используйте данную переменную в свойствах \&amp;quot;ID процесса\&amp;quot; других блоков, которые должны работать с этим же браузером и этой же вкладкой." CatalogName="Output" Type="Variable" Value="$ProcessID" Visible="True" DefaultValue="" ValueType="ProcessID" EnumVariants="" Caption="ID процесса" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1115</Left>
      <Top>620</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>fec257f7-d817-4983-8c4a-b8bd16cb1069</ID>
      <zIndex>29</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Преобразовать JSON в объект" InternalName="FromJson" FriendlyName="Преобразует строку в формате JSON в пользовательский объект" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Texts.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="10" Code="&amp;#xA;function FromJson{{{block_id}}}&amp;#xA;{&amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;        &amp;#xA;    $InString        = {{{InString}}}; &amp;#xA;    $AlternateMethod = ${{{AlternateMethod}}};  &amp;#xA;    $AsDictionary    = ${{{AsDictionary}}};&amp;#xA;    &amp;#xA;        if($AlternateMethod)&amp;#xA;        {&amp;#xA;            {{{Result}}} = [Newtonsoft.Json.JsonConvert]::DeserializeObject($InString);&amp;#xA;        }    &amp;#xA;        elseif($AsDictionary)&amp;#xA;        {          &amp;#xA;            $hashtable = @{};&amp;#xA;            (ConvertFrom-Json $InString).psobject.properties | Foreach { $hashtable[$_.Name] = $_.Value }&amp;#xA;            {{{Result}}} = $hashtable;&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {&amp;#xA;            {{{Result}}} = ConvertFrom-Json $InString&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    {&amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }&amp;#xA;    $__Error.Quit();&amp;#xA;}&amp;#xA;" TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFF9B24&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFF9B24&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="8"&gt;&lt;Property Name="InString" Tooltip="[Текст] Строка в формате JSON" CatalogName="Required" Type="Expression" Value="$settingsJson" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="" Caption="Строка JSON" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="AlternateMethod" Tooltip="Если включено, то строка будет преобразована в объект альтернативным методом (Newtonsoft.Json). При этом все свойства доступны через обращение строкой индексации. Например: $Result[&amp;quot;Tasks&amp;quot;]. В противном случае данной свойство будет доступно так: $Result.Tasks" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Альтернативный метод" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AsDictionary" Tooltip="Если включено, то строка будет преобразована в словарь" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Как словарь" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Result" Tooltip="[Объект] Пользовательский объект представляющий заданную строку JSON. Обращаться к данным можно через точечную нотацию, а к массивам через стандартную индексацию. Например: дана строка JSON: { &amp;quot;Текст&amp;quot;: { &amp;quot;Значение 1&amp;quot;: 2, &amp;quot;Item2&amp;quot;: 0, &amp;quot;47&amp;quot;: -1, &amp;quot;48&amp;quot;: -3 } }. После работы блока к данным можно обращаться следующим способом: $Result.Текст.'Значение 1'; $Result.Текст.Item2; $Result.Текст.47; $Result.Текст.48" CatalogName="Output" Type="Variable" Value="$settings" Visible="True" DefaultValue="" ValueType="Object" EnumVariants="" Caption="Результат" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1115</Left>
      <Top>485</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>c593cd47-d84d-43c8-8f7a-bf074181591d</ID>
      <zIndex>27</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Считать файл настроек" InternalName="FileRead" FriendlyName="Считать содержимое текстового файла в переменную" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Files_Folders.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="70" Code="&amp;#xA;function FileRead{{{block_id}}}&amp;#xA;{       &amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);   &amp;#xA;    &amp;#xA;    $FileName    = {{{FileName}}}; &amp;#xA;    $EncodingObj = &amp;quot;{{{Encoding}}}&amp;quot;;&amp;#xA;          &amp;#xA;        $FileName = ExpandConstFilePath $FileName&amp;#xA;             &amp;#xA;        if(-not [System.IO.File]::Exists($FileName))&amp;#xA;        {&amp;#xA;            $__Error.Exception(&amp;quot;ERRORCONST_PATHNOTFOUND: $FileName&amp;quot;);&amp;#xA;            return;&amp;#xA;        }&amp;#xA;        &amp;#xA;        $fileMode   = [System.IO.FileMode]::Open;&amp;#xA;        $fileAccess = [System.IO.FileAccess]::Read;&amp;#xA;        $fileShare  = [System.IO.FileShare]::Read;    &amp;#xA;        $encoding = [System.Text.Encoding]::Default; &amp;#xA;        if($EncodingObj -eq &amp;quot;UTF8&amp;quot;)&amp;#xA;        {&amp;#xA;            $encoding   = [System.Text.Encoding]::UTF8; &amp;#xA;        } &amp;#xA;        elseif($EncodingObj -eq &amp;quot;ASCII&amp;quot;)&amp;#xA;        {&amp;#xA;            $encoding   = [System.Text.Encoding]::ASCII; &amp;#xA;        }&amp;#xA;        elseif($EncodingObj -eq &amp;quot;MS-DOS&amp;quot;)&amp;#xA;        {&amp;#xA;            $encoding   = [System.Text.Encoding]::GetEncoding(866); &amp;#xA;        }&amp;#xA;        &amp;#xA;        $fileStream = New-Object -TypeName System.IO.FileStream $FileName, $fileMode, $fileAccess, $fileShare&amp;#xA;&amp;#xA;        $reader = New-Object System.IO.StreamReader $fileStream, $encoding&amp;#xA;                      &amp;#xA;        if($null -ne {{{Result}}})&amp;#xA;        {&amp;#xA;            $vartype = {{{Result}}}.GetType().Name;&amp;#xA;            if($vartype.Contains(&amp;quot;List&amp;quot;))&amp;#xA;            {     &amp;#xA;                {{{Result}}}.Clear();&amp;#xA;                while($reader.Peek() -ge 0)&amp;#xA;                {&amp;#xA;                    {{{Result}}}.Add($reader.ReadLine());&amp;#xA;                }            &amp;#xA;            }&amp;#xA;            else&amp;#xA;            {&amp;#xA;                {{{Result}}} = $reader.ReadToEnd();&amp;#xA;            }&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {&amp;#xA;            {{{Result}}} = $reader.ReadToEnd();&amp;#xA;        }        &amp;#xA;       &amp;#xA;        $reader.Dispose();&amp;#xA;        $fileStream.Dispose();                                                     &amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }&amp;#xA;&amp;#xA;    $__Error.Quit();&amp;#xA;}&amp;#xA;" TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFF6C105&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFF6C105&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="8"&gt;&lt;Property Name="FileName" Tooltip="[Текст] Имя текстового файла, чье содержимое требуется считать" CatalogName="Required" Type="Expression" Value="&amp;quot;config.json&amp;quot;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="" Caption="Имя файла" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Encoding" Tooltip="Кодировка файла" CatalogName="Main properties" Type="Enum" Value="UTF8" Visible="True" DefaultValue="" ValueType="" EnumVariants="ANSI;UTF8;ASCII;MS-DOS" Caption="Кодировка" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Result" Tooltip="[Текст/Список] Возвращает содержимое файла. Если тип указанной переменной Список, то содержимое файла будет считано построчно и записано в эту переменную" CatalogName="Output" Type="Variable" Value="$settingsJson" Visible="True" DefaultValue="" ValueType="Text/List" EnumVariants="" Caption="Результат" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1680</Left>
      <Top>1350</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>1e1e395e-b0c9-44ab-99b8-7f2fcdf45cef</ID>
      <zIndex>68</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors>&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement ColumnName="Колонка1" ColumnAttribute="InnerText" CSS="A.catalog-product__name.ui-link.ui-link_black"&gt;&lt;AlternateSelectors&gt;&lt;string&gt;DIV[id='search-results'] &amp;gt; DIV:nth-child(2) &amp;gt; DIV &amp;gt; DIV:nth-child(2) &amp;gt; DIV &amp;gt; A:nth-child(2)&lt;/string&gt;&lt;string&gt;DIV[id='search-results'] &amp;gt; DIV.products-list. &amp;gt; DIV.products-list__content &amp;gt; DIV.catalog-products.view-simple &amp;gt; DIV.catalog-product.ui-button-widget. &amp;gt; A.catalog-product__name.ui-link.ui-link_black&lt;/string&gt;&lt;string&gt;DIV[id='search-results'] &amp;gt; DIV.products-list &amp;gt; DIV.products-list__content &amp;gt; DIV.catalog-products &amp;gt; DIV.catalog-product &amp;gt; A.catalog-product__name&lt;/string&gt;&lt;/AlternateSelectors&gt;&lt;/CSSElement&gt;&lt;CSSElement ColumnName="Колонка2" ColumnAttribute="InnerText" ParentIndent="1" CSS=":scope &amp;gt; DIV:nth-child(5) &amp;gt; DIV &amp;gt; DIV" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;2ef7f337-3ca9-4cb0-88d3-030c85ddbc91&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10FAAAACQIAAAAHAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAQAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAAFBAfn////8////BggAAAALc291cmNlSW5kZXgGCQAAAAM3NjMB9v////z///8GCwAAAAVjbGFzcwYMAAAAK2NhdGFsb2ctcHJvZHVjdF9fbmFtZSB1aS1saW5rIHVpLWxpbmtfYmxhY2sB8/////z///8GDgAAAARocmVmBg8AAABcL3Byb2R1Y3QvODQ5MmY0YTJhNjZhMmZmMS92aWRlb2thcnRhLXBhbGl0LWdlZm9yY2UtcnR4LTMwODAtdGktZ2FtaW5ncHJvLW5lZDMwOHQwMTlrYi0xMzJhYS8L&lt;/Snapshot&gt;&lt;Created&gt;07.08.2023 19:00:38&lt;/Created&gt;&lt;/StorageSelector&gt;&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement CSS="A.pagination-widget__page-link.pagination-widget__page-link_next" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;c36a21b5-3fbe-4375-b030-38839babd7b7&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10FAAAACQIAAAAHAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAQAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAAFBAfn////8////BggAAAALc291cmNlSW5kZXgGCQAAAAQxNDQ5Afb////8////BgsAAAAEaHJlZgYMAAAAC2phdmFzY3JpcHQ6AfP////8////Bg4AAAAFY2xhc3MGDwAAAD9wYWdpbmF0aW9uLXdpZGdldF9fcGFnZS1saW5rIHBhZ2luYXRpb24td2lkZ2V0X19wYWdlLWxpbmtfbmV4dCAL&lt;/Snapshot&gt;&lt;Created&gt;07.08.2023 19:01:03&lt;/Created&gt;&lt;/StorageSelector&gt;</StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Извлечь данные" InternalName="CollectDataInternet" FriendlyName="Блок позволяет извлечь однотипные структурированные данные из веб-страниц (результаты поиска, элементы меню, списки, таблицы и т.д.) и поместить их в переменную в виде Таблицы Данных. Для указания необходимого источника данных и настроек извлечения воспользуйтесь кнопкой Извлечь данные на панели инструментов Дизайнера или кнопкой Запись в окне редактирования Селектора данного блока." Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Extract Data.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="67" Code="&amp;#xA;function CollectDataInternet{{{block_id}}}&amp;#xA;{    &amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;   &amp;#xA;    $ProcessID   = {{{ProcessID}}};&amp;#xA;    $DelayAfter  = {{{DelayAfter}}};  &amp;#xA;    $DelayBefore = {{{DelayBefore}}};&amp;#xA;    $WaitTime    = {{{WaitTime}}}; &amp;#xA;    $RowsCount   = {{{RowsCount}}};   &amp;#xA;    $PageCount   = {{{PageCount}}}; &amp;#xA;    $OffsetX2    = {{{OffsetX2}}};&amp;#xA;    $OffsetY2    = {{{OffsetY2}}};&amp;#xA;    $DelayPage   = {{{DelayPage}}};&amp;#xA;    &amp;#xA;        Start-Sleep -Seconds $DelayBefore; &amp;#xA;        &amp;#xA;        $psresultstr = Read-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;CollectDataInternet&amp;lt;/InternalName&amp;gt;&amp;lt;ProcessID&amp;gt;$ProcessID&amp;lt;/ProcessID&amp;gt;&amp;lt;RowsCount&amp;gt;$RowsCount&amp;lt;/RowsCount&amp;gt;&amp;lt;InternalType&amp;gt;Internet&amp;lt;/InternalType&amp;gt;{{{Selector}}}&amp;lt;WaitTime&amp;gt;$WaitTime&amp;lt;/WaitTime&amp;gt;&amp;lt;PageCount&amp;gt;$PageCount&amp;lt;/PageCount&amp;gt;&amp;lt;OffsetX2&amp;gt;$OffsetX2&amp;lt;/OffsetX2&amp;gt;&amp;lt;OffsetY2&amp;gt;$OffsetY2&amp;lt;/OffsetY2&amp;gt;&amp;lt;DelayPage&amp;gt;$DelayPage&amp;lt;/DelayPage&amp;gt;{{{Selector2}}}&amp;lt;/block&amp;gt;&amp;quot;);                       &amp;#xA;        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);&amp;#xA;        if($__Error.CheckResult($psResult)) { return; }               &amp;#xA;                    &amp;#xA;        {{{Result}}} = $__BinFormatter.frombin($psResult.Result); &amp;#xA;                                     &amp;#xA;        Start-Sleep -Seconds $DelayAfter;&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                            &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FFFFFFFF" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="16"&gt;&lt;Property Name="Selector" Tooltip="[Селектор] Идентификатор окна браузера и элемента веб-страницы, либо набора однотипных элементов (заголовков, ссылок, блоков текста и т.д.), которые необходимо извлечь" CatalogName="Main properties" Type="Selector" Value="&amp;lt;Selector&amp;gt;&amp;lt;Process Name=&amp;quot;chrome&amp;quot; /&amp;gt;&amp;lt;CSSElement ColumnName=&amp;quot;Колонка1&amp;quot; ColumnAttribute=&amp;quot;InnerText&amp;quot; CSS=&amp;quot;A.catalog-product__name.ui-link.ui-link_black&amp;quot;&amp;gt;&amp;lt;AlternateSelectors&amp;gt;&amp;lt;string&amp;gt;DIV[id='search-results'] &amp;amp;gt; DIV:nth-child(2) &amp;amp;gt; DIV &amp;amp;gt; DIV:nth-child(2) &amp;amp;gt; DIV &amp;amp;gt; A:nth-child(2)&amp;lt;/string&amp;gt;&amp;lt;string&amp;gt;DIV[id='search-results'] &amp;amp;gt; DIV.products-list. &amp;amp;gt; DIV.products-list__content &amp;amp;gt; DIV.catalog-products.view-simple &amp;amp;gt; DIV.catalog-product.ui-button-widget. &amp;amp;gt; A.catalog-product__name.ui-link.ui-link_black&amp;lt;/string&amp;gt;&amp;lt;string&amp;gt;DIV[id='search-results'] &amp;amp;gt; DIV.products-list &amp;amp;gt; DIV.products-list__content &amp;amp;gt; DIV.catalog-products &amp;amp;gt; DIV.catalog-product &amp;amp;gt; A.catalog-product__name&amp;lt;/string&amp;gt;&amp;lt;/AlternateSelectors&amp;gt;&amp;lt;/CSSElement&amp;gt;&amp;lt;CSSElement ColumnName=&amp;quot;Колонка2&amp;quot; ColumnAttribute=&amp;quot;InnerText&amp;quot; ParentIndent=&amp;quot;1&amp;quot; CSS=&amp;quot;:scope &amp;amp;gt; DIV:nth-child(5) &amp;amp;gt; DIV &amp;amp;gt; DIV&amp;quot; /&amp;gt;&amp;lt;/Selector&amp;gt;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Selector2" Tooltip="[Селектор] Селектор для перехода на следующую страницу. Если он задан, то будет произведен автоматический сбор данных со всех страниц" CatalogName="Main properties" Type="Selector" Value="&amp;lt;Selector&amp;gt;&amp;lt;Process Name=&amp;quot;chrome&amp;quot; /&amp;gt;&amp;lt;CSSElement Enabled=&amp;quot;True&amp;quot; PoorScore=&amp;quot;2&amp;quot; CSS=&amp;quot;DIV[id='products-list-pagination'] &amp;amp;gt; UL:nth-child(2) &amp;amp;gt; LI:nth-child(8)&amp;quot;&amp;gt;&amp;lt;/CSSElement&amp;gt;&amp;lt;/Selector&amp;gt;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="" Caption="Следующая страница" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetX2" Tooltip="[Число] Относительное смещение по координате X от левого верхнего угла целевого элемента следующей страницы" CatalogName="Main properties" Type="Expression" Value="36" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по X" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetY2" Tooltip="[Число] Относительное смещение по координате Y от левого верхнего угла целевого элемента следующей страницы" CatalogName="Main properties" Type="Expression" Value="28" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по Y" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayPage" Tooltip="[Число] Время паузы после нажатия на элемент следующей страницы в секундах. Может использоваться если данные на странице обновляются через AJAX" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Пауза следующей страницы" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="PageCount" Tooltip="[Число] Количество обрабатываемых страниц. Если значение не задано или равно нулю, то обрабатываются все возможные страницы пока доступен элемент следующая страница" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Количество страниц" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="RowsCount" Tooltip="[Число] Максимальное количество извлекаемых строк" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Количество строк" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ProcessID" Tooltip="[Ссылка] Переменная, в которой хранится идентификатор процесса и вкладки браузера, используемые данным блоком. Если свойство оставить пустым, либо если переменная &amp;quot;ID процесса&amp;quot; не была ранее присвоена в момент открытия браузера, приложение и вкладка браузера будут определены из содержимого соответствующей строки селектора. ID процесса может быть получен, например, с помощью блоков Запустить IE, Запустить Chrome или Присоединиться к браузеру." CatalogName="Main properties" Type="Variable" Value="$ProcessID" Visible="True" DefaultValue="" ValueType="ProcessID" EnumVariants="" Caption="ID процесса" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBefore" Tooltip="[Число] Задержка в секундах перед выполнением блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка перед" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayAfter" Tooltip="[Число] Задержка в секундах после выполения блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка после" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTime" Tooltip="[Число] Предельное время ожидания появления элемента в секундах" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Result" Tooltip="[Таблица Данных] Таблица, содержащая извлеченные данные" CatalogName="Output" Type="Variable" Value="$data" Visible="True" DefaultValue="" ValueType="Text" EnumVariants="{x:Null}" Caption="Результат" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1730</Left>
      <Top>1495</Top>
      <Width>100</Width>
      <Height>100</Height>
      <ID>a8805cae-ffc5-425d-a311-520f0bf313be</ID>
      <zIndex>79</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Лог" InternalName="Log" FriendlyName="Позволяет выводить в лог произвольные сообщения и/или значения переменных в процессе работы сценария робота. Сообщения будут доступны для просмотра в панели Лог программы-дизайнера, а также в текстовых файлах логов программы-робота." Width="100" Height="100" PathToImage="ExternalToolboxes\Image\ico_Log.png" PathToToolboxImage="{x:Null}" ImageType="TopImage" NoDelete="False" Invisible="False" Proportional="True" Version="163" Code="&amp;#xA;function Log{{{block_id}}}&amp;#xA;{   &amp;#xA;    try&amp;#xA;    {&amp;#xA;        $Value          = {{{Value}}};&amp;#xA;        $ShowStatus     = ${{{ShowStatus}}};&amp;#xA;        $SendOrkest     = ${{{SendOrkest}}};&amp;#xA;        $IsScreenshot   = ${{{IsScreenshot}}};&amp;#xA;        $MakeScreenshot = ${{{MakeScreenshot}}};&amp;#xA;    &amp;#xA;        $ValueStr = VarToString($Value); &amp;#xA;         &amp;#xA;        $val = _shield $ValueStr;&amp;#xA;        if($ShowStatus)&amp;#xA;        {       &amp;#xA;            Write-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ShowStatus&amp;lt;/InternalName&amp;gt;&amp;lt;UITextValue&amp;gt;$val&amp;lt;/UITextValue&amp;gt;&amp;lt;/block&amp;gt;&amp;quot;); &amp;#xA;        }&amp;#xA;        &amp;#xA;        if($SendOrkest -or $IsScreenshot)&amp;#xA;        {                      &amp;#xA;            if($val.Length -eq 0)&amp;#xA;            {&amp;#xA;                $val = &amp;quot;Screenshot &amp;quot;+[DateTime]::Now.ToString();&amp;#xA;            }&amp;#xA;            Write-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;SendLogOrkest&amp;lt;/InternalName&amp;gt;&amp;lt;UITextValue&amp;gt;$val&amp;lt;/UITextValue&amp;gt;&amp;lt;UITextType&amp;gt;{{{Level}}}&amp;lt;/UITextType&amp;gt;&amp;lt;IsScreenshot&amp;gt;{{{IsScreenshot}}}&amp;lt;/IsScreenshot&amp;gt;&amp;lt;/block&amp;gt;&amp;quot;); &amp;#xA;        }&amp;#xA;        &amp;#xA;        $xmlvar = &amp;quot;&amp;quot;;&amp;#xA;        try&amp;#xA;        {&amp;#xA;            $xmlvar = $script:__BinFormatter.vartoxmlraw($Value);&amp;#xA;        }&amp;#xA;        catch{} &amp;#xA;        Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;Log&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$val&amp;lt;/InternalValue&amp;gt;$xmlvar&amp;lt;/info&amp;gt;&amp;quot;);&amp;#xA;        if($MakeScreenshot)&amp;#xA;        {&amp;#xA;            $psresultstr = Read-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;MakeScreenshot&amp;lt;/InternalName&amp;gt;&amp;lt;ProcessID&amp;gt;&amp;lt;/ProcessID&amp;gt;&amp;lt;ScreenshotToLog&amp;gt;True&amp;lt;/ScreenshotToLog&amp;gt;&amp;lt;/block&amp;gt;&amp;quot;); &amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;    }  &amp;#xA;    $script:__LastBlockID = &amp;quot;{{{block_native_id}}}&amp;quot;;&amp;#xA;    $script:__NextBlockID = &amp;quot;{{{connector-Next}}}&amp;quot;;&amp;#xA;}                   &amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="8"&gt;&lt;Property Name="Value" Tooltip="[Любой тип данных] Числовая, текстовая константа (в кавычках), имя переменной (начинающееся с $) или любое выражение, значение которого будет выведено в лог в процессе работы сценария робота. Значение может в том числе иметь сложный тип данных, например Список, Таблица или Словарь." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="MakeScreenshot" Tooltip="Создает скриншот и сохраняет его в папке с логами" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Сделать скриншот" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SendOrkest" Tooltip="Если выбрано, то текст будет также логироваться в оркестратор, если подключение к нему активно" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Оркестратор. Логировать" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="IsScreenshot" Tooltip="Если выбрано, то будет создан скриншот экрана и отправлен в оркестратор, если подключение к нему активно" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Оркестратор. Скриншот" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Level" Tooltip="Уровень сообщения при отправке лога в оркестратор" CatalogName="Main properties" Type="Enum" Value="Info" Visible="True" DefaultValue="" ValueType="" EnumVariants="Info;Critical;Error;Warning;Debug" Caption="Оркестратор. Уровень" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ShowStatus" Tooltip="Если выбрано, то текст будет также выводиться в статусе, в верхней части экрана" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Отображать в статусе" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>2200</Left>
      <Top>1375</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>19c432d8-d042-42af-b28c-c68514d5fe9d</ID>
      <zIndex>52</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors>&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement CSS="A.pagination-widget__page-link.pagination-widget__page-link_next.pagination-widget__page-link_disabled" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;9bdbf0b7-a735-42e4-998d-c0d3a9e51b70&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10FAAAACQIAAAAHAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAQAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAAFBAfn////8////BggAAAALc291cmNlSW5kZXgGCQAAAAM5OTQB9v////z///8GCwAAAARocmVmBgwAAAALamF2YXNjcmlwdDoB8/////z///8GDgAAAAVjbGFzcwYPAAAAZHBhZ2luYXRpb24td2lkZ2V0X19wYWdlLWxpbmsgcGFnaW5hdGlvbi13aWRnZXRfX3BhZ2UtbGlua19uZXh0IHBhZ2luYXRpb24td2lkZ2V0X19wYWdlLWxpbmtfZGlzYWJsZWQL&lt;/Snapshot&gt;&lt;Created&gt;07.08.2023 19:09:05&lt;/Created&gt;&lt;/StorageSelector&gt;&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement CSS="A.pagination-widget__page-link.pagination-widget__page-link_next" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;2c3caced-cbc3-4748-8869-aff3fe1366bb&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10FAAAACQIAAAAHAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAQAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAAFBAfn////8////BggAAAALc291cmNlSW5kZXgGCQAAAAQxMzA2Afb////8////BgsAAAAEaHJlZgYMAAAAC2phdmFzY3JpcHQ6AfP////8////Bg4AAAAFY2xhc3MGDwAAAD9wYWdpbmF0aW9uLXdpZGdldF9fcGFnZS1saW5rIHBhZ2luYXRpb24td2lkZ2V0X19wYWdlLWxpbmtfbmV4dCAL&lt;/Snapshot&gt;&lt;Created&gt;07.08.2023 19:17:31&lt;/Created&gt;&lt;/StorageSelector&gt;&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement Text="Видеокарта GIGABYTE GeForce RTX 3080 Ti VISION OC [GV-N308TVISION OC-12GD] [PCI-E 4.0 12 ГБ GDDR6X, 384 бит, DisplayPort x3, HDMI x2, GPU 1365 МГц]" CSS="A.catalog-product__name.ui-link.ui-link_black" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;323218dd-2b4c-4ea6-a33a-7851728ef8b1&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10FAAAACQIAAAAHAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAQAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAAFBAfn////8////BggAAAALc291cmNlSW5kZXgGCQAAAAM3OTUB9v////z///8GCwAAAAVjbGFzcwYMAAAAK2NhdGFsb2ctcHJvZHVjdF9fbmFtZSB1aS1saW5rIHVpLWxpbmtfYmxhY2sB8/////z///8GDgAAAARocmVmBg8AAABjL3Byb2R1Y3QvODFkMmVkNjhhNjNjMmZmMS92aWRlb2thcnRhLWdpZ2FieXRlLWdlZm9yY2UtcnR4LTMwODAtdGktdmlzaW9uLW9jLWd2LW4zMDh0dmlzaW9uLW9jLTEyZ2QvCw==&lt;/Snapshot&gt;&lt;Created&gt;08.08.2023 12:55:16&lt;/Created&gt;&lt;/StorageSelector&gt;&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement Text="Видеокарта ZOTAC GAMING GeForce RTX 3080 Trinity [ZT-A30800D-10P] [PCI-E 4.0, 10 ГБ GDDR6X, 320 бит, 1440 МГц - 1710 МГц, HDMI, DisplayPort x3]" CSS="A.catalog-product__name.ui-link.ui-link_black" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;b52d30a1-88db-45a1-b5f1-55d6225d37d3&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10FAAAACQIAAAAHAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAQAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAAFBAfn////8////BggAAAALc291cmNlSW5kZXgGCQAAAAM4OTcB9v////z///8GCwAAAAVjbGFzcwYMAAAAK2NhdGFsb2ctcHJvZHVjdF9fbmFtZSB1aS1saW5rIHVpLWxpbmtfYmxhY2sB8/////z///8GDgAAAARocmVmBg8AAABaL3Byb2R1Y3QvOTcwZjc5ZTlmNzE1MzMzMi92aWRlb2thcnRhLXpvdGFjLWdhbWluZy1nZWZvcmNlLXJ0eC0zMDgwLXRyaW5pdHktenQtYTMwODAwZC0xMHAvCw==&lt;/Snapshot&gt;&lt;Created&gt;08.08.2023 12:59:41&lt;/Created&gt;&lt;/StorageSelector&gt;&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement Text="69 299 ₽" CSS="DIV.product-buy__price" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;2bb9959c-d2bd-46dd-8530-f81b5c1ff107&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10EAAAACQIAAAADAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAMAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAANESVYB+f////z///8GCAAAAAtzb3VyY2VJbmRleAYJAAAABDEwNzUB9v////z///8GCwAAAAVjbGFzcwYMAAAAEnByb2R1Y3QtYnV5X19wcmljZQs=&lt;/Snapshot&gt;&lt;Created&gt;08.08.2023 13:13:11&lt;/Created&gt;&lt;/StorageSelector&gt;</StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Клик мышкой" InternalName="MouseClickInternet" FriendlyName="Клик мышкой по элементу веб-страницы (ссылке, кнопке, полю редактирования, переключателю, галочке, картинке и т.д.). Клик может быть произведен даже в том случае, если элемент находится за пределами экрана (требуется прокрутка страницы). Если после клика была открыта новая вкладка браузера или новое окно браузера, вы можете продолжить работу как со старой, так и с новой вкладками." Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Mouse Click.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="130" Code="&amp;#xA;function MouseClickInternet{{{block_id}}}&amp;#xA;{          &amp;#xA;    try&amp;#xA;    {&amp;#xA;        $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;        $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;        &amp;#xA;        $ProcessID            = {{{ProcessID}}};  &amp;#xA;        $DelayAfter           = {{{DelayAfter}}};  &amp;#xA;        $DelayBefore          = {{{DelayBefore}}};&amp;#xA;        $WaitTime             = {{{WaitTime}}}; &amp;#xA;        $OffsetX              = {{{OffsetX}}};&amp;#xA;        $OffsetY              = {{{OffsetY}}}; &amp;#xA;        $KeyModifier          = {{{KeyModifier}}};          &amp;#xA;        $DelayBeforeSelector2 = {{{DelayBeforeSelector2}}};&amp;#xA;        $WaitTimeSelector2    = {{{WaitTimeSelector2}}};&amp;#xA;        $AttemptsSelector2    = {{{AttemptsSelector2}}}; &amp;#xA;        $AppearTypeSelector2  = &amp;quot;{{{AppearTypeSelector2}}}&amp;quot;;&amp;#xA;        &amp;#xA;        Start-Sleep -Seconds $DelayBefore; &amp;#xA;               &amp;#xA;        $psresultstr = Read-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ClickUI&amp;lt;/InternalName&amp;gt;&amp;lt;InternalType&amp;gt;Internet&amp;lt;/InternalType&amp;gt;&amp;lt;Action&amp;gt;{{{Action}}}&amp;lt;/Action&amp;gt;&amp;lt;OffsetX&amp;gt;$OffsetX&amp;lt;/OffsetX&amp;gt;&amp;lt;OffsetY&amp;gt;$OffsetY&amp;lt;/OffsetY&amp;gt;&amp;lt;ProcessID&amp;gt;$ProcessID&amp;lt;/ProcessID&amp;gt;&amp;lt;KeyModifier&amp;gt;$KeyModifier&amp;lt;/KeyModifier&amp;gt;&amp;lt;AutoScroll&amp;gt;{{{AutoScroll}}}&amp;lt;/AutoScroll&amp;gt;&amp;lt;WaitTime&amp;gt;$WaitTime&amp;lt;/WaitTime&amp;gt;&amp;lt;SimulateMove&amp;gt;{{{SimulateMove}}}&amp;lt;/SimulateMove&amp;gt;&amp;lt;SimulateMessages&amp;gt;{{{SimulateMessages}}}&amp;lt;/SimulateMessages&amp;gt;&amp;lt;AbsolutePoint&amp;gt;{{{AbsolutePoint}}}&amp;lt;/AbsolutePoint&amp;gt;{{{Selector}}}&amp;lt;DelayBeforeSelector2&amp;gt;$DelayBeforeSelector2&amp;lt;/DelayBeforeSelector2&amp;gt;&amp;lt;WaitTimeSelector2&amp;gt;$WaitTimeSelector2&amp;lt;/WaitTimeSelector2&amp;gt;&amp;lt;AttemptsSelector2&amp;gt;$AttemptsSelector2&amp;lt;/AttemptsSelector2&amp;gt;&amp;lt;AppearTypeSelector2&amp;gt;$AppearTypeSelector2&amp;lt;/AppearTypeSelector2&amp;gt;{{{Selector2}}}&amp;lt;/block&amp;gt;&amp;quot;);                      &amp;#xA;        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);&amp;#xA;        if($__Error.CheckResult($psResult)) { return; }&amp;#xA;           &amp;#xA;        {{{NewProcessID}}} = $psResult.Result; &amp;#xA;        &amp;#xA;        Start-Sleep -Seconds $DelayAfter;&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                            &amp;#xA;    $__Error.Quit(); &amp;#xA;}                   &amp;#xA;                " TextColor="#FFFFFFFF" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="Selector" Tooltip="[Селектор] Идентификатор окна браузера и элемента веб-страницы. Если селектор будет пустым, то клик будет произведен используя заданные смещения от текущего положения курсора" CatalogName="Main properties" Type="Selector" Value="&amp;lt;Selector&amp;gt;&amp;lt;Process Name=&amp;quot;chrome&amp;quot; /&amp;gt;&amp;lt;CSSElement Text=&amp;quot;69 299 ₽&amp;quot; CSS=&amp;quot;DIV.product-buy__price&amp;quot; /&amp;gt;&amp;lt;/Selector&amp;gt;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Action" Tooltip="Выбор действия: левый клик, двойной клик, правый клик, навести курсор" CatalogName="Main properties" Type="Enum" Value="Click" Visible="True" DefaultValue="" ValueType="" EnumVariants="Click;DoubleClick;RightClick;Over" Caption="Действие" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="KeyModifier" Tooltip="[Текст] Указывается клавиша-можификатор, которая будет зажата при клике. Возможные значения: &amp;quot;CTRL&amp;quot;, &amp;quot;SHIFT&amp;quot;, &amp;quot;ALT&amp;quot;, &amp;quot;SPACE&amp;quot;. Есть возможность указать комбинацию клавиш, например: &amp;quot;CTRL+SHIFT&amp;quot;" CatalogName="Custom properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="" Caption="Клавиша-модификатор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="2bb9959c-d2bd-46dd-8530-f81b5c1ff107" Visible="False" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="{x:Null}" Caption="ThumbImage" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ProcessID" Tooltip="[Ссылка] Переменная, в которой хранится идентификатор процесса и вкладки браузера, используемые данным блоком. Если свойство оставить пустым, либо если переменная &amp;quot;ID процесса&amp;quot; не была ранее присвоена в момент открытия браузера, приложение и вкладка браузера будут определены из содержимого соответствующей строки селектора. ID процесса может быть получен, например, с помощью блоков Запустить IE, Запустить Chrome или Присоединиться к браузеру." CatalogName="Main properties" Type="Variable" Value="$ProcessID" Visible="True" DefaultValue="" ValueType="ProcessID" EnumVariants="" Caption="ID процесса" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBefore" Tooltip="[Число] Задержка в секундах перед выполнением блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка перед" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayAfter" Tooltip="[Число] Задержка в секундах после выполения блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка после" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTime" Tooltip="[Число] Предельное время ожидания появления элемента в секундах" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AutoScroll" Tooltip="Если выбрано, то будет произведен автоматический скроллинг до элемента, который находится за пределами видимой части страницы" CatalogName="Custom properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Автоскроллинг" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetX" Tooltip="[Число] Относительное смещение клика по координате X от левого верхнего угла элемента. Если не указано никакое значение (свойство пустое), то в качестве точки клика будет использоваться центр элемента" CatalogName="Main properties" Type="Expression" Value="35" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по X" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetY" Tooltip="[Число] Относительное смещение клика по координате Y от левого верхнего угла элемента. Если не указано никакое значение (свойство пустое), то в качестве точки клика будет использоваться центр элемента" CatalogName="Main properties" Type="Expression" Value="17" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по Y" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Selector2" Tooltip="[Селектор] Идентификатор элемента пользовательского интерфейса. Если селектор будет пустым, то блок не будет ожидать появление этого элемента" CatalogName="Main properties" Type="Selector" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AppearTypeSelector2" Tooltip="Выбор типа ожидания. Appear - появление, Disappear - исчезновение" CatalogName="Main properties" Type="Enum" Value="Appear" Visible="True" DefaultValue="" ValueType="" EnumVariants="Appear;Disappear" Caption="Тип ожидания селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBeforeSelector2" Tooltip="[Число] Задержка перед проверкой селектора ожидания" CatalogName="Main properties" Type="Expression" Value="2" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Задержка перед проверкой селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTimeSelector2" Tooltip="[Число] Предельное время ожидания элемента, заданного в селекторе ожидания в секундах" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания для селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AttemptsSelector2" Tooltip="[Число] Количество попыток для селектора ожидания. Если селектор ожидания не будет найден, то блок будет производить клик по основному селектору" CatalogName="Main properties" Type="Expression" Value="1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Количество попыток для селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SimulateMove" Tooltip="При включении будет симулироваться движение курсора мышки от текущей позиции до рассчитанной блоком точки" CatalogName="Custom properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Симуляция движения" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SimulateMessages" Tooltip="При включении клик будет выполнен средствами браузера" CatalogName="Custom properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Симуляция клика" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AbsolutePoint" Tooltip="Если включено, то свойства со &amp;quot;Смещение по X&amp;quot; и &amp;quot;Смещение по Y&amp;quot; будут использоваться как абсолютные координаты для клика. Если не задан селектор, то клик будет произведен в этих координатах" CatalogName="Custom properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Абсолютные координаты" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="NewProcessID" Tooltip="[Ссылка]  Если в результате работы блока открылась новая вкладка браузера, то ее идентификатор будет записан в указанную здесь переменную. В большинстве случаев это свойство и свойство &amp;quot;ID процесса&amp;quot; могут использовать одну и ту же переменную. Укажите другое имя переменной, если вы хотите продолжать работу со старой вкладкой в случае открытия новой вкладки или же разделить работу со старой и новой вкладками между разными блоками диаграммы" CatalogName="Output" Type="Variable" Value="$ProcessID" Visible="True" DefaultValue="" ValueType="NewProcessID" EnumVariants="" Caption="Новый ID процесса" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>3325</Left>
      <Top>2005</Top>
      <Width>150</Width>
      <Height>150</Height>
      <ID>41b21107-b8ae-40fd-aa4c-06ebd82def85</ID>
      <zIndex>1</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Цикл Для каждого (Таблица Данных)" InternalName="ForeachRows" FriendlyName="Циклично перебираются все строки Таблицы Данных, которые выводятся в отдельный коннектор. После перебора всех строк таблицы выполнение сценария продолжается в сторону нижнего выхода блока. Не забудьте соединить выход последнего блока в теле цикла со входом данного блока" Width="150" Height="150" PathToImage="ExternalToolboxes\Image\icotb_Foreach datatable simple.png" PathToToolboxImage="ExternalToolboxes\Image\icotb_Foreach datatable.png" ImageType="TopImageDock" NoDelete="False" Invisible="False" Proportional="True" Version="15" Code="&amp;#xA;function ForeachRows{{{block_id}}}&amp;#xA;{     &amp;#xA;    try&amp;#xA;    {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;    &amp;#xA;        if($script:__FuncIndex -gt $script:__LastFuncIndex) &amp;#xA;        { &amp;#xA;            $script:__Index{{{block_id}}} = 0; &amp;#xA;        }&amp;#xA;             &amp;#xA;        if ($script:__Index{{{block_id}}} -lt {{{Table}}}.Rows.Count)&amp;#xA;        {       &amp;#xA;            {{{Row}}} = {{{Table}}}.Rows[$script:__Index{{{block_id}}}];  &amp;#xA;            {{{RowIndex}}} = $script:__Index{{{block_id}}};&amp;#xA;                       &amp;#xA;            $script:__Index{{{block_id}}} = $script:__Index{{{block_id}}} + 1;&amp;#xA;                         &amp;#xA;            $__Error.Jump(&amp;quot;{{{connector-Row}}}&amp;quot;);&amp;#xA;            return;&amp;#xA;        }  &amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }&amp;#xA;    $script:__Index{{{block_id}}} = 0;&amp;#xA;    $__Error.Quit();&amp;#xA;}&amp;#xA;" TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="8"&gt;&lt;Property Name="Table" Tooltip="[Таблица Данных] Таблица данных, в которой перебираются строки" CatalogName="Required" Type="Variable" Value="$data" Visible="True" DefaultValue="" ValueType="DataTable" EnumVariants="" Caption="Таблица" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Row" Tooltip="[Ссылка] Возвращается ссылка на строку" CatalogName="Output" Type="Variable" Value="$data_row" Visible="True" DefaultValue="" ValueType="Reference" EnumVariants="" Caption="Строка" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="RowIndex" Tooltip="[Число] Порядковый номер строки. Нумерация начинается с нуля" CatalogName="Output" Type="Variable" Value="$RowIndex" Visible="True" DefaultValue="" ValueType="Number" EnumVariants="" Caption="Индекс строки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorDirection" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Right&amp;quot; - направо; &amp;quot;Bottom&amp;quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &amp;quot;Если ошибка&amp;quot; (например блок &amp;quot;Условие&amp;quot;). Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Right;Bottom" Caption="Направление выхода" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Row" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FF008000" Caption="Строка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1680</Left>
      <Top>1035</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>fd42ccf1-1f67-4e15-981c-7f9a32ecc94c</ID>
      <zIndex>70</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Парсинг товаров" InternalName="ToDoBlock" FriendlyName="Блок можно использовать как заглушку или напоминание для планируемых к реализации функций. В отличие от блока Комментарий данный блок является элементом сценария, но не выполняет никаких действий." Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_ToDo.png" PathToToolboxImage="ExternalToolboxes\Image\ico_ToDo.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="10" Code="&amp;#xA;function ToDoBlock{{{block_id}}}&amp;#xA;{   &amp;#xA;    $script:__LastBlockID = &amp;quot;{{{block_native_id}}}&amp;quot;;&amp;#xA;    $script:__NextBlockID = &amp;quot;{{{connector-Next}}}&amp;quot;;  &amp;#xA;}                   &amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="0" /&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>2675</Left>
      <Top>1030</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>40c880b3-3d97-4c19-8546-5974cde18389</ID>
      <zIndex>61</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Фильтрация результатов" InternalName="ToDoBlock" FriendlyName="Блок можно использовать как заглушку или напоминание для планируемых к реализации функций. В отличие от блока Комментарий данный блок является элементом сценария, но не выполняет никаких действий." Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_ToDo.png" PathToToolboxImage="ExternalToolboxes\Image\ico_ToDo.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="10" Code="&amp;#xA;function ToDoBlock{{{block_id}}}&amp;#xA;{   &amp;#xA;    $script:__LastBlockID = &amp;quot;{{{block_native_id}}}&amp;quot;;&amp;#xA;    $script:__NextBlockID = &amp;quot;{{{connector-Next}}}&amp;quot;;  &amp;#xA;}                   &amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="0" /&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1680</Left>
      <Top>1675</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>743147dc-4179-4599-9b47-b81dd30da2c5</ID>
      <zIndex>64</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Прервать контейнер" InternalName="AbortContainer" FriendlyName="Блок позволяет выйти в любом месте из контейнера (Try/Catch, Контейнер). По умолчанию для выхода из контейнера необходимо устанавливать блок &amp;quot;Конец&amp;quot;. После этого выход из контейнера будет произведен по коннектору &amp;quot;Выход&amp;quot;. Если возникает необходимость выйти из контейнера в любом месте, то необходимо установить данный блок и уже после него продолжить сценарий. Если далее в сценарии встретится блок &amp;quot;Конец&amp;quot;, то он завершит или предыдущий контейнер или всю диаграмму. Если блок &amp;quot;Прервать контейнер&amp;quot; стоит вне работы контейнера, то он не выполнит возврат из диаграммы" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Abort Container.png" PathToToolboxImage="ExternalToolboxes\Image\ico_Abort Container.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="14" Code="&amp;#xA;function AbortContainer{{{block_id}}}&amp;#xA;{       &amp;#xA;    try&amp;#xA;    {&amp;#xA;    $currentblockid = &amp;quot;{{{block_native_id}}}&amp;quot;;&amp;#xA;       &amp;#xA;        $Value        = {{{Value}}};&amp;#xA;        $SendOrkest   = ${{{SendOrkest}}};&amp;#xA;        $IsScreenshot = ${{{IsScreenshot}}};&amp;#xA;        &amp;#xA;        $ValueStr = VarToString($Value); &amp;#xA;             &amp;#xA;        $val = _shield $ValueStr;&amp;#xA;        if($SendOrkest -or $IsScreenshot)&amp;#xA;        {                      &amp;#xA;            if($val.Length -eq 0)&amp;#xA;            {&amp;#xA;                $val = &amp;quot;Screenshot &amp;quot;+[DateTime]::Now.ToString();&amp;#xA;            }&amp;#xA;            Write-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;SendLogOrkest&amp;lt;/InternalName&amp;gt;&amp;lt;UITextValue&amp;gt;$val&amp;lt;/UITextValue&amp;gt;&amp;lt;UITextType&amp;gt;Info&amp;lt;/UITextType&amp;gt;&amp;lt;IsScreenshot&amp;gt;{{{IsScreenshot}}}&amp;lt;/IsScreenshot&amp;gt;&amp;lt;/block&amp;gt;&amp;quot;); &amp;#xA;        }&amp;#xA;        if($val.Length -gt 0)&amp;#xA;        {&amp;#xA;            $xmlvar = &amp;quot;&amp;quot;;&amp;#xA;            try&amp;#xA;            {&amp;#xA;                $xmlvar = $script:__BinFormatter.vartoxmlraw($Value);&amp;#xA;            }&amp;#xA;            catch{} &amp;#xA;            Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;Log&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$val&amp;lt;/InternalValue&amp;gt;$xmlvar&amp;lt;/info&amp;gt;&amp;quot;);&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;    }&amp;#xA;    &amp;#xA;    try&amp;#xA;    {&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable1}}} = {{{Expression1}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable1: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable2}}} = {{{Expression2}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable2: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable3}}} = {{{Expression3}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable3: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable4}}} = {{{Expression4}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable4: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable5}}} = {{{Expression5}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable5: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression6}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression6: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression7}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression7: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression8}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression8: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression9}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression9: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression10}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression10: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA; &amp;#xA;    }&amp;#xA;    catch {}&amp;#xA;    &amp;#xA;    try&amp;#xA;    {    &amp;#xA;        if ($script:__callstack.Count -gt 0)&amp;#xA;        {&amp;#xA;            $stackitem = $script:__callstack.Peek();  &amp;#xA;            $containerName = $stackitem.ProcessContainer;&amp;#xA;            if($containerName.StartsWith(&amp;quot;TryCatchContainer&amp;quot;) -or $containerName.StartsWith(&amp;quot;CollapseContainer&amp;quot;))&amp;#xA;            {       &amp;#xA;                $__Error.Quit(); &amp;#xA;                $stackitem = $script:__callstack.Pop();&amp;#xA;            }&amp;#xA;        }                &amp;#xA;    }&amp;#xA;    catch{}                                        &amp;#xA;    $script:__NextBlockID = &amp;quot;{{{connector-Next}}}&amp;quot;; &amp;#xA;    $script:__LastBlockID = &amp;quot;{{{block_native_id}}}&amp;quot;;&amp;#xA;}               &amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="Value" Tooltip="[Любой тип данных] Числовая, текстовая константа (в кавычках), имя переменной (начинающееся с $) или любое выражение, значение которого будет выведено в лог в процессе работы сценария робота. Значение может в том числе иметь сложный тип данных, например Список, Таблица или Словарь." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Записать в лог" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable1" Tooltip="[Переменная] Имя первой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression1" Tooltip="[Любой тип данных] Новое значение первой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable2" Tooltip="[Переменная] Имя второй переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression2" Tooltip="[Любой тип данных] Новое значение второй переменной. Свойство игнорируется, если не задано имя второй переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable3" Tooltip="[Переменная] Имя третьей переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression3" Tooltip="[Любой тип данных] Новое значение третьей переменной. Свойство игнорируется, если не задано имя третьей переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable4" Tooltip="[Переменная] Имя четвертой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression4" Tooltip="[Любой тип данных] Новое значение четвертой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable5" Tooltip="[Переменная] Имя пятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression5" Tooltip="[Любой тип данных] Новое значение пятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression6" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression7" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression8" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression9" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression10" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SendOrkest" Tooltip="Если выбрано, то текст будет также логироваться в оркестратор, если подключение к нему активно" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Логировать в оркестратор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="IsScreenshot" Tooltip="Если выбрано, то будет создан скриншот экрана и отправлен в оркестратор, если подключение к нему активно" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Скриншот в оркестратор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>930</Left>
      <Top>1210</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>a49e3188-a50c-426c-99ae-6dcb32f959b3</ID>
      <zIndex>73</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Try/Catch" InternalName="TryCatchContainer" FriendlyName="Блок реализует конструкцию Try/Catch. Для правильной работы блоки этого контейнера должны заканчиваться блоком &amp;quot;Конец&amp;quot;. При возникновении ошибки в блоках будет реализован выход по коннектору &amp;quot;Если ошибка&amp;quot;. В противном случае по коннектору &amp;quot;Выход&amp;quot;. Для имитации конструкции Finally требуется ручное соединение блоков после обработки ошибки с блоками коннектора &amp;quot;Выход&amp;quot;. Если к коннектору &amp;quot;Если ошибка&amp;quot; не подключен блок, то ошибка будет игнорироваться, и выход будет произведен по коннектору &amp;quot;Выход&amp;quot;. Если коннектор &amp;quot;Выход&amp;quot; не подключен, то при отсутсвии ошибки, будет произведен возврат из текущей диаграммы" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Subprocess.png" PathToToolboxImage="ExternalToolboxes\Image\ico_Subprocess.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="85" Code="&amp;#xA;function TryCatchContainer{{{block_id}}}&amp;#xA;{   &amp;#xA;    try&amp;#xA;    {&amp;#xA;    $script:__LastBlockID = &amp;quot;{{{block_native_id}}}&amp;quot;;&amp;#xA;         &amp;#xA;    $currentblockid = &amp;quot;{{{block_native_id}}}&amp;quot;; &amp;#xA;    &amp;#xA;    $NumberAttemptsObj = {{{NumberAttempts}}};&amp;#xA;    &amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable1}}} = {{{Expression1}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable1: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable2}}} = {{{Expression2}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable2: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable3}}} = {{{Expression3}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable3: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable4}}} = {{{Expression4}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable4: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable5}}} = {{{Expression5}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable5: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression6}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression6: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression7}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression7: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression8}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression8: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression9}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression9: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression10}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression10: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        &amp;#xA;    }&amp;#xA;    catch {}&amp;#xA;        &amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;Default&amp;quot;,&amp;quot;Default&amp;quot;,&amp;quot;Default&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;); &amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connector-Out}}}&amp;quot;, &amp;quot;{{{connector-Out}}}&amp;quot;); &amp;#xA;            &amp;#xA;    $_NumberAttempts = 1; &amp;#xA;    &amp;#xA;    if($null -eq $NumberAttemptsObj) { $NumberAttemptsObj = &amp;quot;&amp;quot;; }&amp;#xA;    &amp;#xA;    $tempint = 0;&amp;#xA;    if([int]::TryParse($NumberAttemptsObj, [ref] $tempint)) { $_NumberAttempts = $tempint; }&amp;#xA;           &amp;#xA;    if($script:__FuncIndex -gt $script:__LastFuncIndex) &amp;#xA;    { &amp;#xA;        $script:__IndexAttempt{{{block_id}}} = 0; &amp;#xA;    } &amp;#xA;    &amp;#xA;    $script:__IndexAttempt{{{block_id}}} = $script:__IndexAttempt{{{block_id}}} + 1;&amp;#xA;    if($_NumberAttempts -gt 1)&amp;#xA;    {               &amp;#xA;        $val = &amp;quot;Попытка &amp;quot; + $script:__IndexAttempt{{{block_id}}}; &amp;#xA;        Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$val&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;);&amp;#xA;    }&amp;#xA;    &amp;#xA;    $interceptConnectorError = &amp;quot;&amp;quot;; &amp;#xA;    $interceptConnectorNext = &amp;quot;&amp;quot;;&amp;#xA;    if ($script:__callstack.Count -gt 0)&amp;#xA;    {&amp;#xA;        $tempitem                = $script:__callstack.Peek();&amp;#xA;        $interceptConnectorError = [string]$tempitem.ConnectorError;&amp;#xA;        $interceptConnectorNext  = [string]$tempitem.ConnectorNext;&amp;#xA;    }  &amp;#xA;    &amp;#xA;    $stackitem                  = [MainHelpers.StackItem]::new();&amp;#xA;    $stackitem.ProcessContainer = &amp;quot;TryCatchContainer{{{block_id}}}&amp;quot;;&amp;#xA;    $stackitem.ConnectorNext    = &amp;quot;{{{connector-Out}}}&amp;quot;; &amp;#xA;    $stackitem.ConnectorError   = &amp;quot;{{{connector-Error}}}&amp;quot;; &amp;#xA;    &amp;#xA;    if ($stackitem.ConnectorError.Length -eq 0) { $stackitem.ConnectorError = $stackitem.ConnectorNext; }&amp;#xA;    if ($stackitem.ConnectorError.Length -eq 0) { $stackitem.ConnectorError = $interceptConnectorError; }&amp;#xA;    if ($stackitem.ConnectorError.Length -eq 0) { $stackitem.ConnectorError = $interceptConnectorNext; } &amp;#xA;          &amp;#xA;    if($script:__IndexAttempt{{{block_id}}} -lt $_NumberAttempts)&amp;#xA;    {&amp;#xA;        $stackitem.ConnectorError = $stackitem.ProcessContainer;&amp;#xA;    }&amp;#xA;        &amp;#xA;    $script:__callstack.push($stackitem);  &amp;#xA;    &amp;#xA;    if($null -eq $script:__ProcessContainerErrorMessage)&amp;#xA;    {&amp;#xA;        $script:__ProcessContainerErrorMessage = New-Object 'System.Collections.Generic.Dictionary[[string],[string]]'&amp;#xA;    }&amp;#xA;&amp;#xA;    $script:__ProcessContainerErrorMessage[$stackitem.ProcessContainer] = &amp;quot;{{{ErrorMessage}}}&amp;quot;;&amp;#xA;    &amp;#xA;    $script:__NextBlockID = &amp;quot;{{{connector-Next}}}&amp;quot;;  &amp;#xA;}                   &amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="NumberAttempts" Tooltip="[Текст] Блок не выйдет по коннектору &amp;quot;Если ошибка&amp;quot; пока не закончится указанное число попыток" CatalogName="Main properties" Type="Expression" Value="1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="" Caption="Количество попыток" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable1" Tooltip="[Переменная] Имя первой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression1" Tooltip="[Любой тип данных] Новое значение первой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable2" Tooltip="[Переменная] Имя второй переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression2" Tooltip="[Любой тип данных] Новое значение второй переменной. Свойство игнорируется, если не задано имя второй переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable3" Tooltip="[Переменная] Имя третьей переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression3" Tooltip="[Любой тип данных] Новое значение третьей переменной. Свойство игнорируется, если не задано имя третьей переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable4" Tooltip="[Переменная] Имя четвертой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression4" Tooltip="[Любой тип данных] Новое значение четвертой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable5" Tooltip="[Переменная] Имя пятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression5" Tooltip="[Любой тип данных] Новое значение пятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression6" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression7" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression8" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression9" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression10" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="8"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.25" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Out" Orientation="Right" RelativePosition="1,0.75" MaxInConnections="0" MaxOutConnections="1" Color="#FF008000" Caption="Выход" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>2675</Left>
      <Top>1215</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>8d547972-d135-4fb4-be7b-2801e9c01e2c</ID>
      <zIndex>45</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Try/Catch" InternalName="TryCatchContainer" FriendlyName="Блок реализует конструкцию Try/Catch. Для правильной работы блоки этого контейнера должны заканчиваться блоком &amp;quot;Конец&amp;quot;. При возникновении ошибки в блоках будет реализован выход по коннектору &amp;quot;Если ошибка&amp;quot;. В противном случае по коннектору &amp;quot;Выход&amp;quot;. Для имитации конструкции Finally требуется ручное соединение блоков после обработки ошибки с блоками коннектора &amp;quot;Выход&amp;quot;. Если к коннектору &amp;quot;Если ошибка&amp;quot; не подключен блок, то ошибка будет игнорироваться, и выход будет произведен по коннектору &amp;quot;Выход&amp;quot;. Если коннектор &amp;quot;Выход&amp;quot; не подключен, то при отсутсвии ошибки, будет произведен возврат из текущей диаграммы" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Subprocess.png" PathToToolboxImage="ExternalToolboxes\Image\ico_Subprocess.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="85" Code="&amp;#xA;function TryCatchContainer{{{block_id}}}&amp;#xA;{   &amp;#xA;    try&amp;#xA;    {&amp;#xA;    $script:__LastBlockID = &amp;quot;{{{block_native_id}}}&amp;quot;;&amp;#xA;         &amp;#xA;    $currentblockid = &amp;quot;{{{block_native_id}}}&amp;quot;; &amp;#xA;    &amp;#xA;    $NumberAttemptsObj = {{{NumberAttempts}}};&amp;#xA;    &amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable1}}} = {{{Expression1}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable1: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable2}}} = {{{Expression2}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable2: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable3}}} = {{{Expression3}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable3: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable4}}} = {{{Expression4}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable4: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable5}}} = {{{Expression5}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable5: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression6}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression6: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression7}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression7: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression8}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression8: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression9}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression9: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression10}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression10: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        &amp;#xA;    }&amp;#xA;    catch {}&amp;#xA;        &amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;Default&amp;quot;,&amp;quot;Default&amp;quot;,&amp;quot;Default&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;); &amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connector-Out}}}&amp;quot;, &amp;quot;{{{connector-Out}}}&amp;quot;); &amp;#xA;            &amp;#xA;    $_NumberAttempts = 1; &amp;#xA;    &amp;#xA;    if($null -eq $NumberAttemptsObj) { $NumberAttemptsObj = &amp;quot;&amp;quot;; }&amp;#xA;    &amp;#xA;    $tempint = 0;&amp;#xA;    if([int]::TryParse($NumberAttemptsObj, [ref] $tempint)) { $_NumberAttempts = $tempint; }&amp;#xA;           &amp;#xA;    if($script:__FuncIndex -gt $script:__LastFuncIndex) &amp;#xA;    { &amp;#xA;        $script:__IndexAttempt{{{block_id}}} = 0; &amp;#xA;    } &amp;#xA;    &amp;#xA;    $script:__IndexAttempt{{{block_id}}} = $script:__IndexAttempt{{{block_id}}} + 1;&amp;#xA;    if($_NumberAttempts -gt 1)&amp;#xA;    {               &amp;#xA;        $val = &amp;quot;Попытка &amp;quot; + $script:__IndexAttempt{{{block_id}}}; &amp;#xA;        Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$val&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;);&amp;#xA;    }&amp;#xA;    &amp;#xA;    $interceptConnectorError = &amp;quot;&amp;quot;; &amp;#xA;    $interceptConnectorNext = &amp;quot;&amp;quot;;&amp;#xA;    if ($script:__callstack.Count -gt 0)&amp;#xA;    {&amp;#xA;        $tempitem                = $script:__callstack.Peek();&amp;#xA;        $interceptConnectorError = [string]$tempitem.ConnectorError;&amp;#xA;        $interceptConnectorNext  = [string]$tempitem.ConnectorNext;&amp;#xA;    }  &amp;#xA;    &amp;#xA;    $stackitem                  = [MainHelpers.StackItem]::new();&amp;#xA;    $stackitem.ProcessContainer = &amp;quot;TryCatchContainer{{{block_id}}}&amp;quot;;&amp;#xA;    $stackitem.ConnectorNext    = &amp;quot;{{{connector-Out}}}&amp;quot;; &amp;#xA;    $stackitem.ConnectorError   = &amp;quot;{{{connector-Error}}}&amp;quot;; &amp;#xA;    &amp;#xA;    if ($stackitem.ConnectorError.Length -eq 0) { $stackitem.ConnectorError = $stackitem.ConnectorNext; }&amp;#xA;    if ($stackitem.ConnectorError.Length -eq 0) { $stackitem.ConnectorError = $interceptConnectorError; }&amp;#xA;    if ($stackitem.ConnectorError.Length -eq 0) { $stackitem.ConnectorError = $interceptConnectorNext; } &amp;#xA;          &amp;#xA;    if($script:__IndexAttempt{{{block_id}}} -lt $_NumberAttempts)&amp;#xA;    {&amp;#xA;        $stackitem.ConnectorError = $stackitem.ProcessContainer;&amp;#xA;    }&amp;#xA;        &amp;#xA;    $script:__callstack.push($stackitem);  &amp;#xA;    &amp;#xA;    if($null -eq $script:__ProcessContainerErrorMessage)&amp;#xA;    {&amp;#xA;        $script:__ProcessContainerErrorMessage = New-Object 'System.Collections.Generic.Dictionary[[string],[string]]'&amp;#xA;    }&amp;#xA;&amp;#xA;    $script:__ProcessContainerErrorMessage[$stackitem.ProcessContainer] = &amp;quot;{{{ErrorMessage}}}&amp;quot;;&amp;#xA;    &amp;#xA;    $script:__NextBlockID = &amp;quot;{{{connector-Next}}}&amp;quot;;  &amp;#xA;}                   &amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="NumberAttempts" Tooltip="[Текст] Блок не выйдет по коннектору &amp;quot;Если ошибка&amp;quot; пока не закончится указанное число попыток" CatalogName="Main properties" Type="Expression" Value="1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="" Caption="Количество попыток" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable1" Tooltip="[Переменная] Имя первой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression1" Tooltip="[Любой тип данных] Новое значение первой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable2" Tooltip="[Переменная] Имя второй переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression2" Tooltip="[Любой тип данных] Новое значение второй переменной. Свойство игнорируется, если не задано имя второй переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable3" Tooltip="[Переменная] Имя третьей переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression3" Tooltip="[Любой тип данных] Новое значение третьей переменной. Свойство игнорируется, если не задано имя третьей переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable4" Tooltip="[Переменная] Имя четвертой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression4" Tooltip="[Любой тип данных] Новое значение четвертой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable5" Tooltip="[Переменная] Имя пятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression5" Tooltip="[Любой тип данных] Новое значение пятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression6" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression7" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression8" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression9" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression10" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="8"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.25" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Out" Orientation="Right" RelativePosition="1,0.75" MaxInConnections="0" MaxOutConnections="1" Color="#FF008000" Caption="Выход" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>3555</Left>
      <Top>2175</Top>
      <Width>100</Width>
      <Height>100</Height>
      <ID>f65a5a82-80dc-4a52-a38a-d041015d728d</ID>
      <zIndex>58</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Условие" InternalName="IfCondition" FriendlyName="Блок проверяет указанное условие на истинность и, в зависимости от результата, выполнение сценария продолжается в сторону выхода &amp;quot;Да&amp;quot; (условие выполнилось) или &amp;quot;Нет&amp;quot; (условие не выполнилось). Например, условие $a == &amp;quot;Привет&amp;quot; проверяет, равно ли значение переменной $a значению &amp;quot;Привет&amp;quot;, а условие $Result &amp;gt; 5 проверяет, превышает ли значение переменной $Result значение 5. Условие может содержать математические и логические операции, константы, функции, другие переменные и т.д. Примеры выражений, которые можно использовать в условиях, доступны по нажатию на кнопку ... рядом со свойством Условие." Width="100" Height="100" PathToImage="" PathToToolboxImage="ExternalToolboxes\Image\icotb_If condition.png" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="True" Version="46" Code="&amp;#xA;function IfCondition{{{block_id}}}&amp;#xA;{&amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;); &amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;   &amp;#xA;        if ({{{Condition}}}) &amp;#xA;        {&amp;#xA;            $__Error.Jump(&amp;quot;{{{connector-Yes}}}&amp;quot;);&amp;#xA;            return;&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {   &amp;#xA;            $__Error.Jump(&amp;quot;{{{connector-No}}}&amp;quot;);&amp;#xA;            return;&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_); &amp;#xA;        return;&amp;#xA;    } &amp;#xA;    $__Error.Quit();&amp;#xA;}&amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="8"&gt;&lt;Property Name="Condition" Tooltip="[Любое выражение] В зависимости от значения этого выражения выполнение сценария продолжится по выходу &amp;quot;Да&amp;quot; или &amp;quot;Нет&amp;quot;. Значение выражения, эквивалентное 0 (нулю) или $False приравнивается к &amp;quot;Нет&amp;quot;, все остальные значения - приравниваются к &amp;quot;Да&amp;quot;. Например, если в переменную $a было ранее записано значение 5, то условие $a&amp;gt;2 является истинным, а условие $a == 6 является ложным." CatalogName="Main properties" Type="Expression" Value="$data_row[1].GetType().Name == &amp;quot;DBNull&amp;quot;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Any Expression" EnumVariants="{x:Null}" Caption="Условие" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorDirection" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Right&amp;quot; - направо; &amp;quot;Bottom&amp;quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &amp;quot;Если ошибка&amp;quot; (например блок &amp;quot;Условие&amp;quot;). Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Right;Bottom" Caption="Направление выхода" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Нет" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF008000" Caption="Да" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>2725</Left>
      <Top>1400</Top>
      <Width>100</Width>
      <Height>100</Height>
      <ID>c7b46447-96f2-4ddd-bf5e-99a3aed987bb</ID>
      <zIndex>53</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Цикл" InternalName="For" FriendlyName="Цикл позволяет повторить цепочку действий (блоков) несколько раз и при этом посчитать количество итераций цикла, записывая текущее количество в специальную переменную (указанную в свойстве Цикл), которую можно затем использовать в других блоках. При первом входе в блок значение переменной из свойства Цикл приравнивается к Начальному значению, а затем выполнение сценария продолжается в сторону выхода Цикл данного блока (в так называемое &amp;quot;тело цикла&amp;quot;). Как только выполнение сценария вновь дойдет до данного блока, значение переменной Цикл увеличится на значение Шаг, и вновь произойдёт переход в сторону выхода Цикл. Как только значение переменной Цикл станет больше или равно Конечному значению, выполнение сценария продолжится в сторону нижнего выхода блока.&amp;#xA;Не забудьте соединить выход последнего блока в теле цикла со входом данного блока или какого-либо из предшествующих блоков." Width="100" Height="100" PathToImage="ExternalToolboxes\Image\icotb_While simple.png" PathToToolboxImage="ExternalToolboxes\Image\icotb_While.png" ImageType="TopImageDockSmall" NoDelete="False" Invisible="False" Proportional="True" Version="46" Code="&amp;#xA;function For{{{block_id}}}&amp;#xA;{     &amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;); &amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);  &amp;#xA;    &amp;#xA;    $StartIndex = {{{StartIndex}}};&amp;#xA;    $EndIndex   = {{{EndIndex}}};&amp;#xA;    $Step       = {{{Step}}}; &amp;#xA;        &amp;#xA;        if($script:__FuncIndex -gt $script:__LastFuncIndex) &amp;#xA;        { &amp;#xA;            $script:__Index{{{block_id}}} = $StartIndex;&amp;#xA;            $script:__End{{{block_id}}} = $EndIndex;&amp;#xA;        }&amp;#xA;             &amp;#xA;        {{{Index}}} = $script:__Index{{{block_id}}};&amp;#xA;                    &amp;#xA;        if($Step -gt 0)&amp;#xA;        {        &amp;#xA;            if ($script:__Index{{{block_id}}} -ge $script:__End{{{block_id}}})&amp;#xA;            {                 &amp;#xA;                $script:__Index{{{block_id}}} = $null;&amp;#xA;                $__Error.Jump(&amp;quot;{{{connector-Next}}}&amp;quot;);&amp;#xA;                return;&amp;#xA;            }&amp;#xA;            else&amp;#xA;            {       &amp;#xA;                $script:__Index{{{block_id}}} = $script:__Index{{{block_id}}} + $Step;&amp;#xA;                $__Error.Jump(&amp;quot;{{{connector-Index}}}&amp;quot;);&amp;#xA;                return;&amp;#xA;            } &amp;#xA;        } &amp;#xA;        else&amp;#xA;        {&amp;#xA;            if ($script:__Index{{{block_id}}} -lt $script:__End{{{block_id}}})&amp;#xA;            {                 &amp;#xA;                $script:__Index{{{block_id}}} = $null; &amp;#xA;                $__Error.Jump(&amp;quot;{{{connector-Next}}}&amp;quot;);&amp;#xA;                return;&amp;#xA;            }&amp;#xA;            else&amp;#xA;            {       &amp;#xA;                $script:__Index{{{block_id}}} = $script:__Index{{{block_id}}} + $Step;&amp;#xA;                $__Error.Jump(&amp;quot;{{{connector-Index}}}&amp;quot;);&amp;#xA;                return;&amp;#xA;            } &amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_); &amp;#xA;        return;&amp;#xA;    } &amp;#xA;            &amp;#xA;    $__Error.Quit();&amp;#xA;}&amp;#xA;" TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="8"&gt;&lt;Property Name="StartIndex" Tooltip="[Число] Начальное значение переменной из свойства Цикл, будет присвоено этой переменной в начале цикла" CatalogName="Required" Type="Expression" Value="$data.Rows.Count -1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Начальное значение" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="EndIndex" Tooltip="[Число] Конечное значение переменной из свойства Цикл. Итерации цикла будут выполняться пока значение переменной Цикл меньше заданного в этом свойстве" CatalogName="Required" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Конечное значение" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Step" Tooltip="[Число] Шаг приращения значения переменной из свойства Цикл в каждой итерации цикла. Шаг может иметь отрицательное значение, это полезно когда Начальное значение больше Конечного значения, и требуется считать в обратную сторону." CatalogName="Required" Type="Expression" Value="-1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Шаг" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Index" Tooltip="[Число] Переменная, в которую будет записано текущее значение цикла. Например: если Начальное значение = 0, Конечное значение = 7, а Шаг = 2, то значениями цикла будут последовательно числа 0,2,4,6." CatalogName="Output" Type="Variable" Value="$Index" Visible="True" DefaultValue="" ValueType="Number" EnumVariants="" Caption="Цикл" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorDirection" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Right&amp;quot; - направо; &amp;quot;Bottom&amp;quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &amp;quot;Если ошибка&amp;quot; (например блок &amp;quot;Условие&amp;quot;). Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Right;Bottom" Caption="Направление выхода" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Index" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FF008000" Caption="Цикл" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>2885</Left>
      <Top>1500</Top>
      <Width>100</Width>
      <Height>100</Height>
      <ID>b2780071-742d-434e-951a-39cf00e6c23c</ID>
      <zIndex>54</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Цена пустая?" InternalName="IfCondition" FriendlyName="Блок проверяет указанное условие на истинность и, в зависимости от результата, выполнение сценария продолжается в сторону выхода &amp;quot;Да&amp;quot; (условие выполнилось) или &amp;quot;Нет&amp;quot; (условие не выполнилось). Например, условие $a == &amp;quot;Привет&amp;quot; проверяет, равно ли значение переменной $a значению &amp;quot;Привет&amp;quot;, а условие $Result &amp;gt; 5 проверяет, превышает ли значение переменной $Result значение 5. Условие может содержать математические и логические операции, константы, функции, другие переменные и т.д. Примеры выражений, которые можно использовать в условиях, доступны по нажатию на кнопку ... рядом со свойством Условие." Width="100" Height="100" PathToImage="" PathToToolboxImage="ExternalToolboxes\Image\icotb_If condition.png" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="True" Version="46" Code="&amp;#xA;function IfCondition{{{block_id}}}&amp;#xA;{&amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;); &amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;   &amp;#xA;        if ({{{Condition}}}) &amp;#xA;        {&amp;#xA;            $__Error.Jump(&amp;quot;{{{connector-Yes}}}&amp;quot;);&amp;#xA;            return;&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {   &amp;#xA;            $__Error.Jump(&amp;quot;{{{connector-No}}}&amp;quot;);&amp;#xA;            return;&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_); &amp;#xA;        return;&amp;#xA;    } &amp;#xA;    $__Error.Quit();&amp;#xA;}&amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="8"&gt;&lt;Property Name="Condition" Tooltip="[Любое выражение] В зависимости от значения этого выражения выполнение сценария продолжится по выходу &amp;quot;Да&amp;quot; или &amp;quot;Нет&amp;quot;. Значение выражения, эквивалентное 0 (нулю) или $False приравнивается к &amp;quot;Нет&amp;quot;, все остальные значения - приравниваются к &amp;quot;Да&amp;quot;. Например, если в переменную $a было ранее записано значение 5, то условие $a&amp;gt;2 является истинным, а условие $a == 6 является ложным." CatalogName="Main properties" Type="Expression" Value="$data.Rows[$Index][1].GetType().Name == &amp;quot;DBNull&amp;quot;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Any Expression" EnumVariants="{x:Null}" Caption="Условие" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorDirection" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Right&amp;quot; - направо; &amp;quot;Bottom&amp;quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &amp;quot;Если ошибка&amp;quot; (например блок &amp;quot;Условие&amp;quot;). Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Right;Bottom" Caption="Направление выхода" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Нет" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF008000" Caption="Да" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>3075</Left>
      <Top>1500</Top>
      <Width>100</Width>
      <Height>100</Height>
      <ID>95a75ed7-ab99-49d2-a197-89f641f701d2</ID>
      <zIndex>47</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Название пустое?" InternalName="IfCondition" FriendlyName="Блок проверяет указанное условие на истинность и, в зависимости от результата, выполнение сценария продолжается в сторону выхода &amp;quot;Да&amp;quot; (условие выполнилось) или &amp;quot;Нет&amp;quot; (условие не выполнилось). Например, условие $a == &amp;quot;Привет&amp;quot; проверяет, равно ли значение переменной $a значению &amp;quot;Привет&amp;quot;, а условие $Result &amp;gt; 5 проверяет, превышает ли значение переменной $Result значение 5. Условие может содержать математические и логические операции, константы, функции, другие переменные и т.д. Примеры выражений, которые можно использовать в условиях, доступны по нажатию на кнопку ... рядом со свойством Условие." Width="100" Height="100" PathToImage="" PathToToolboxImage="ExternalToolboxes\Image\icotb_If condition.png" ImageType="NoImage" NoDelete="False" Invisible="False" Proportional="True" Version="46" Code="&amp;#xA;function IfCondition{{{block_id}}}&amp;#xA;{&amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;); &amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;   &amp;#xA;        if ({{{Condition}}}) &amp;#xA;        {&amp;#xA;            $__Error.Jump(&amp;quot;{{{connector-Yes}}}&amp;quot;);&amp;#xA;            return;&amp;#xA;        }&amp;#xA;        else&amp;#xA;        {   &amp;#xA;            $__Error.Jump(&amp;quot;{{{connector-No}}}&amp;quot;);&amp;#xA;            return;&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_); &amp;#xA;        return;&amp;#xA;    } &amp;#xA;    $__Error.Quit();&amp;#xA;}&amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,10L20,0 40,10 20,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="8"&gt;&lt;Property Name="Condition" Tooltip="[Любое выражение] В зависимости от значения этого выражения выполнение сценария продолжится по выходу &amp;quot;Да&amp;quot; или &amp;quot;Нет&amp;quot;. Значение выражения, эквивалентное 0 (нулю) или $False приравнивается к &amp;quot;Нет&amp;quot;, все остальные значения - приравниваются к &amp;quot;Да&amp;quot;. Например, если в переменную $a было ранее записано значение 5, то условие $a&amp;gt;2 является истинным, а условие $a == 6 является ложным." CatalogName="Main properties" Type="Expression" Value="$data.Rows[$Index][1].GetType().Name == &amp;quot;DBNull&amp;quot;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Any Expression" EnumVariants="{x:Null}" Caption="Условие" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorDirection" Tooltip="Выбор направления выхода из блока при возникновении ошибки. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Right&amp;quot; - направо; &amp;quot;Bottom&amp;quot; - вниз. Данное свойство позволяет определить направление выхода при возникновении ошибок для блоков не содержащих коннектора &amp;quot;Если ошибка&amp;quot; (например блок &amp;quot;Условие&amp;quot;). Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Right;Bottom" Caption="Направление выхода" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="No" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Нет" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Yes" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF008000" Caption="Да" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>2765</Left>
      <Top>1340</Top>
      <Width>20</Width>
      <Height>20</Height>
      <ID>e1bea70d-191a-4a90-b795-f99a001c5096</ID>
      <zIndex>5</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Коннектор" InternalName="PointConnector" FriendlyName="Коннектор" Width="20" Height="20" PathToImage="" PathToToolboxImage="" ImageType="NoImage" NoDelete="False" Invisible="True" Proportional="True" Version="12" Code="&amp;#xA;function PointConnector{{{block_id}}}&amp;#xA;{                &amp;#xA;    &amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="0" /&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="InOut" Orientation="None" RelativePosition="0.5,0.5" MaxInConnections="100" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>2835</Left>
      <Top>1695</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>6e8caf4a-844f-4915-b157-3741396db3bd</ID>
      <zIndex>51</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Удалить строку" InternalName="RemoveRow" FriendlyName="Удалить строку вместе с содержимым из Таблицы Данных" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Data table.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="18" Code="&amp;#xA;function RemoveRow{{{block_id}}}&amp;#xA;{    &amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;    &amp;#xA;    $Index = {{{Index}}};&amp;#xA;    &amp;#xA;        {{{Table}}}.Rows.RemoveAt($Index);&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }&amp;#xA;    $__Error.Quit();&amp;#xA;}&amp;#xA;" TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFDF4017&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFDF4017&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="8"&gt;&lt;Property Name="Table" Tooltip="[Таблица Данных] Таблица данных, из которой удаляется строка" CatalogName="Required" Type="Variable" Value="$data" Visible="True" DefaultValue="" ValueType="DataTable" EnumVariants="{x:Null}" Caption="Таблица" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Index" Tooltip="[Число] Номер удаляемой строки. Нумерация начинается с 0" CatalogName="Required" Type="Expression" Value="$Index" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Номер строки" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>2885</Left>
      <Top>1820</Top>
      <Width>100</Width>
      <Height>100</Height>
      <ID>43e17ac2-f3c9-45ce-a468-b29c453e4aca</ID>
      <zIndex>49</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="$index - 1" InternalName="Assign" FriendlyName="Блок устанавливает новые значения для одной или нескольких переменных. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки. Переменная может быть выбрана из числа объявленных в панели Переменные, также может быть вручную введено имя новой переменной или ранее использовавшейся в других блоках переменной, даже если эта переменная не была объявлена в панели Переменные. Примеры выражений, которые можно использовать в свойствах Значение, доступны по нажатию на кнопки ... рядом с соответствующими свойствами." Width="100" Height="100" PathToImage="ExternalToolboxes\Image\ico_Assign Variable.png" PathToToolboxImage="{x:Null}" ImageType="TopImage" NoDelete="False" Invisible="False" Proportional="True" Version="166" Code="&amp;#xA;function Assign{{{block_id}}}&amp;#xA;{        &amp;#xA;    try&amp;#xA;    {&amp;#xA;        $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;); &amp;#xA;        $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;          &amp;#xA;&amp;#xA;            try&amp;#xA;            {&amp;#xA;                {{{Variable1}}} = {{{Expression1}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable2}}} = {{{Expression2}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable3}}} = {{{Expression3}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable4}}} = {{{Expression4}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable5}}} = {{{Expression5}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable6}}} = {{{Expression6}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable7}}} = {{{Expression7}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable8}}} = {{{Expression8}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable9}}} = {{{Expression9}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable10}}} = {{{Expression10}}};&amp;#xA;            }&amp;#xA;            catch { if($__Error.CheckException($_.Exception.Message)) {return;} }&amp;#xA;    }&amp;#xA;    catch&amp;#xA;    {&amp;#xA;        $__Error.ExceptionCatch($_); &amp;#xA;        return;&amp;#xA;    }&amp;#xA;      &amp;#xA;    $__Error.Quit();&amp;#xA;}                                                  &amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="Variable1" Tooltip="[Переменная] Имя первой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="$Index" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression1" Tooltip="[Любой тип данных] Новое значение первой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="$Index - 1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable2" Tooltip="[Переменная] Имя второй переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression2" Tooltip="[Любой тип данных] Новое значение второй переменной. Свойство игнорируется, если не задано имя второй переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable3" Tooltip="[Переменная] Имя третьей переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression3" Tooltip="[Любой тип данных] Новое значение третьей переменной. Свойство игнорируется, если не задано имя третьей переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable4" Tooltip="[Переменная] Имя четвертой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression4" Tooltip="[Любой тип данных] Новое значение четвертой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable5" Tooltip="[Переменная] Имя пятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression5" Tooltip="[Любой тип данных] Новое значение пятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable6" Tooltip="[Переменная] Имя шестой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 6" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression6" Tooltip="[Любой тип данных] Новое значение шестой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 6" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable7" Tooltip="[Переменная] Имя седьмой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 7" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression7" Tooltip="[Любой тип данных] Новое значение седьмой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 7" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable8" Tooltip="[Переменная] Имя восьмой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 8" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression8" Tooltip="[Любой тип данных] Новое значение восьмой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 8" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable9" Tooltip="[Переменная] Имя девятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 9" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression9" Tooltip="[Любой тип данных] Новое значение девятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 9" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable10" Tooltip="[Переменная] Имя десятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 10" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression10" Tooltip="[Любой тип данных] Новое значение десятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 10" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>3255</Left>
      <Top>1340</Top>
      <Width>20</Width>
      <Height>20</Height>
      <ID>3092979e-30c5-4b95-a027-297fad901b4a</ID>
      <zIndex>7</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Коннектор" InternalName="PointConnector" FriendlyName="Коннектор" Width="20" Height="20" PathToImage="" PathToToolboxImage="" ImageType="NoImage" NoDelete="False" Invisible="True" Proportional="True" Version="12" Code="&amp;#xA;function PointConnector{{{block_id}}}&amp;#xA;{                &amp;#xA;    &amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="0" /&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="InOut" Orientation="None" RelativePosition="0.5,0.5" MaxInConnections="100" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>3255</Left>
      <Top>1540</Top>
      <Width>20</Width>
      <Height>20</Height>
      <ID>e04dc319-9926-4791-b67f-66bf3b6b628a</ID>
      <zIndex>10</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Коннектор" InternalName="PointConnector" FriendlyName="Коннектор" Width="20" Height="20" PathToImage="" PathToToolboxImage="" ImageType="NoImage" NoDelete="False" Invisible="True" Proportional="True" Version="12" Code="&amp;#xA;function PointConnector{{{block_id}}}&amp;#xA;{                &amp;#xA;    &amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="0" /&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="InOut" Orientation="None" RelativePosition="0.5,0.5" MaxInConnections="100" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>2925</Left>
      <Top>1640</Top>
      <Width>20</Width>
      <Height>20</Height>
      <ID>24fe62a5-560c-4b9d-b8d5-e1bb868f9794</ID>
      <zIndex>14</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Коннектор" InternalName="PointConnector" FriendlyName="Коннектор" Width="20" Height="20" PathToImage="" PathToToolboxImage="" ImageType="NoImage" NoDelete="False" Invisible="True" Proportional="True" Version="12" Code="&amp;#xA;function PointConnector{{{block_id}}}&amp;#xA;{                &amp;#xA;    &amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="0" /&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="InOut" Orientation="None" RelativePosition="0.5,0.5" MaxInConnections="100" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>2675</Left>
      <Top>2085</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>a76b6197-3f41-4a8a-9269-f8c4824ce878</ID>
      <zIndex>56</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Прервать контейнер" InternalName="AbortContainer" FriendlyName="Блок позволяет выйти в любом месте из контейнера (Try/Catch, Контейнер). По умолчанию для выхода из контейнера необходимо устанавливать блок &amp;quot;Конец&amp;quot;. После этого выход из контейнера будет произведен по коннектору &amp;quot;Выход&amp;quot;. Если возникает необходимость выйти из контейнера в любом месте, то необходимо установить данный блок и уже после него продолжить сценарий. Если далее в сценарии встретится блок &amp;quot;Конец&amp;quot;, то он завершит или предыдущий контейнер или всю диаграмму. Если блок &amp;quot;Прервать контейнер&amp;quot; стоит вне работы контейнера, то он не выполнит возврат из диаграммы" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Abort Container.png" PathToToolboxImage="ExternalToolboxes\Image\ico_Abort Container.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="14" Code="&amp;#xA;function AbortContainer{{{block_id}}}&amp;#xA;{       &amp;#xA;    try&amp;#xA;    {&amp;#xA;    $currentblockid = &amp;quot;{{{block_native_id}}}&amp;quot;;&amp;#xA;       &amp;#xA;        $Value        = {{{Value}}};&amp;#xA;        $SendOrkest   = ${{{SendOrkest}}};&amp;#xA;        $IsScreenshot = ${{{IsScreenshot}}};&amp;#xA;        &amp;#xA;        $ValueStr = VarToString($Value); &amp;#xA;             &amp;#xA;        $val = _shield $ValueStr;&amp;#xA;        if($SendOrkest -or $IsScreenshot)&amp;#xA;        {                      &amp;#xA;            if($val.Length -eq 0)&amp;#xA;            {&amp;#xA;                $val = &amp;quot;Screenshot &amp;quot;+[DateTime]::Now.ToString();&amp;#xA;            }&amp;#xA;            Write-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;SendLogOrkest&amp;lt;/InternalName&amp;gt;&amp;lt;UITextValue&amp;gt;$val&amp;lt;/UITextValue&amp;gt;&amp;lt;UITextType&amp;gt;Info&amp;lt;/UITextType&amp;gt;&amp;lt;IsScreenshot&amp;gt;{{{IsScreenshot}}}&amp;lt;/IsScreenshot&amp;gt;&amp;lt;/block&amp;gt;&amp;quot;); &amp;#xA;        }&amp;#xA;        if($val.Length -gt 0)&amp;#xA;        {&amp;#xA;            $xmlvar = &amp;quot;&amp;quot;;&amp;#xA;            try&amp;#xA;            {&amp;#xA;                $xmlvar = $script:__BinFormatter.vartoxmlraw($Value);&amp;#xA;            }&amp;#xA;            catch{} &amp;#xA;            Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;Log&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$val&amp;lt;/InternalValue&amp;gt;$xmlvar&amp;lt;/info&amp;gt;&amp;quot;);&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;    }&amp;#xA;    &amp;#xA;    try&amp;#xA;    {&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable1}}} = {{{Expression1}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable1: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable2}}} = {{{Expression2}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable2: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable3}}} = {{{Expression3}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable3: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable4}}} = {{{Expression4}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable4: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable5}}} = {{{Expression5}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable5: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression6}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression6: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression7}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression7: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression8}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression8: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression9}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression9: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression10}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression10: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA; &amp;#xA;    }&amp;#xA;    catch {}&amp;#xA;    &amp;#xA;    try&amp;#xA;    {    &amp;#xA;        if ($script:__callstack.Count -gt 0)&amp;#xA;        {&amp;#xA;            $stackitem = $script:__callstack.Peek();  &amp;#xA;            $containerName = $stackitem.ProcessContainer;&amp;#xA;            if($containerName.StartsWith(&amp;quot;TryCatchContainer&amp;quot;) -or $containerName.StartsWith(&amp;quot;CollapseContainer&amp;quot;))&amp;#xA;            {       &amp;#xA;                $__Error.Quit(); &amp;#xA;                $stackitem = $script:__callstack.Pop();&amp;#xA;            }&amp;#xA;        }                &amp;#xA;    }&amp;#xA;    catch{}                                        &amp;#xA;    $script:__NextBlockID = &amp;quot;{{{connector-Next}}}&amp;quot;; &amp;#xA;    $script:__LastBlockID = &amp;quot;{{{block_native_id}}}&amp;quot;;&amp;#xA;}               &amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="True" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="Value" Tooltip="[Любой тип данных] Числовая, текстовая константа (в кавычках), имя переменной (начинающееся с $) или любое выражение, значение которого будет выведено в лог в процессе работы сценария робота. Значение может в том числе иметь сложный тип данных, например Список, Таблица или Словарь." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Записать в лог" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable1" Tooltip="[Переменная] Имя первой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression1" Tooltip="[Любой тип данных] Новое значение первой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable2" Tooltip="[Переменная] Имя второй переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression2" Tooltip="[Любой тип данных] Новое значение второй переменной. Свойство игнорируется, если не задано имя второй переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable3" Tooltip="[Переменная] Имя третьей переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression3" Tooltip="[Любой тип данных] Новое значение третьей переменной. Свойство игнорируется, если не задано имя третьей переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable4" Tooltip="[Переменная] Имя четвертой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression4" Tooltip="[Любой тип данных] Новое значение четвертой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable5" Tooltip="[Переменная] Имя пятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression5" Tooltip="[Любой тип данных] Новое значение пятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression6" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression7" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression8" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression9" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression10" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SendOrkest" Tooltip="Если выбрано, то текст будет также логироваться в оркестратор, если подключение к нему активно" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Логировать в оркестратор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="IsScreenshot" Tooltip="Если выбрано, то будет создан скриншот экрана и отправлен в оркестратор, если подключение к нему активно" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Скриншот в оркестратор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>335</Left>
      <Top>1045</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>f64b1f64-4635-4383-87c0-ecd9a0817204</ID>
      <zIndex>39</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Обработка ошибок" InternalName="ToDoBlock" FriendlyName="Блок можно использовать как заглушку или напоминание для планируемых к реализации функций. В отличие от блока Комментарий данный блок является элементом сценария, но не выполняет никаких действий." Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_ToDo.png" PathToToolboxImage="ExternalToolboxes\Image\ico_ToDo.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="10" Code="&amp;#xA;function ToDoBlock{{{block_id}}}&amp;#xA;{   &amp;#xA;    $script:__LastBlockID = &amp;quot;{{{block_native_id}}}&amp;quot;;&amp;#xA;    $script:__NextBlockID = &amp;quot;{{{connector-Next}}}&amp;quot;;  &amp;#xA;}                   &amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="0" /&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>260</Left>
      <Top>2625</Top>
      <Width>20</Width>
      <Height>20</Height>
      <ID>7b7f3ea5-7439-4c46-b994-1996fe822d70</ID>
      <zIndex>18</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Коннектор" InternalName="PointConnector" FriendlyName="Коннектор" Width="20" Height="20" PathToImage="" PathToToolboxImage="" ImageType="NoImage" NoDelete="False" Invisible="True" Proportional="True" Version="12" Code="&amp;#xA;function PointConnector{{{block_id}}}&amp;#xA;{                &amp;#xA;    &amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="0" /&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="InOut" Orientation="None" RelativePosition="0.5,0.5" MaxInConnections="100" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>425</Left>
      <Top>2625</Top>
      <Width>20</Width>
      <Height>20</Height>
      <ID>e7cba3d6-ce7e-43fb-b8dc-c9093d866af1</ID>
      <zIndex>19</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Коннектор" InternalName="PointConnector" FriendlyName="Коннектор" Width="20" Height="20" PathToImage="" PathToToolboxImage="" ImageType="NoImage" NoDelete="False" Invisible="True" Proportional="True" Version="12" Code="&amp;#xA;function PointConnector{{{block_id}}}&amp;#xA;{                &amp;#xA;    &amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="0" /&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="InOut" Orientation="None" RelativePosition="0.5,0.5" MaxInConnections="100" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1020</Left>
      <Top>2625</Top>
      <Width>20</Width>
      <Height>20</Height>
      <ID>3983c6a6-edf7-4b7a-93d6-1765f54fbe0e</ID>
      <zIndex>21</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Коннектор" InternalName="PointConnector" FriendlyName="Коннектор" Width="20" Height="20" PathToImage="" PathToToolboxImage="" ImageType="NoImage" NoDelete="False" Invisible="True" Proportional="True" Version="12" Code="&amp;#xA;function PointConnector{{{block_id}}}&amp;#xA;{                &amp;#xA;    &amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="0" /&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="InOut" Orientation="None" RelativePosition="0.5,0.5" MaxInConnections="100" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1770</Left>
      <Top>2625</Top>
      <Width>20</Width>
      <Height>20</Height>
      <ID>0a8d234c-f4c9-42e2-ad69-a0eac6393acc</ID>
      <zIndex>24</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Коннектор" InternalName="PointConnector" FriendlyName="Коннектор" Width="20" Height="20" PathToImage="" PathToToolboxImage="" ImageType="NoImage" NoDelete="False" Invisible="True" Proportional="True" Version="12" Code="&amp;#xA;function PointConnector{{{block_id}}}&amp;#xA;{                &amp;#xA;    &amp;#xA;}                   &amp;#xA;                " TextColor="#FF000000" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M75,50C75,63.8071187457698 63.8071187457698,75 50,75 36.1928812542302,75 25,63.8071187457698 25,50 25,36.1928812542302 36.1928812542302,25 50,25 63.8071187457698,25 75,36.1928812542302 75,50z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="0" /&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="InOut" Orientation="None" RelativePosition="0.5,0.5" MaxInConnections="100" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1925</Left>
      <Top>1355</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>3e4e310f-7c69-41ad-83fa-e17e3935c3e0</ID>
      <zIndex>63</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors>&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement ColumnName="Колонка1" ColumnAttribute="InnerText" CSS="A.catalog-product__name.ui-link.ui-link_black"&gt;&lt;AlternateSelectors&gt;&lt;string&gt;DIV[id='search-results'] &amp;gt; DIV:nth-child(2) &amp;gt; DIV &amp;gt; DIV:nth-child(2) &amp;gt; DIV &amp;gt; A:nth-child(2)&lt;/string&gt;&lt;string&gt;DIV[id='search-results'] &amp;gt; DIV.products-list. &amp;gt; DIV.products-list__content &amp;gt; DIV.catalog-products.view-simple &amp;gt; DIV.catalog-product.ui-button-widget. &amp;gt; A.catalog-product__name.ui-link.ui-link_black&lt;/string&gt;&lt;string&gt;DIV[id='search-results'] &amp;gt; DIV.products-list &amp;gt; DIV.products-list__content &amp;gt; DIV.catalog-products &amp;gt; DIV.catalog-product &amp;gt; A.catalog-product__name&lt;/string&gt;&lt;/AlternateSelectors&gt;&lt;/CSSElement&gt;&lt;CSSElement ColumnName="Колонка2" ColumnAttribute="InnerText" ParentIndent="1" CSS=":scope &amp;gt; DIV:nth-child(5) &amp;gt; DIV &amp;gt; DIV" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;2ef7f337-3ca9-4cb0-88d3-030c85ddbc91&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10FAAAACQIAAAAHAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAQAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAAFBAfn////8////BggAAAALc291cmNlSW5kZXgGCQAAAAM3NjMB9v////z///8GCwAAAAVjbGFzcwYMAAAAK2NhdGFsb2ctcHJvZHVjdF9fbmFtZSB1aS1saW5rIHVpLWxpbmtfYmxhY2sB8/////z///8GDgAAAARocmVmBg8AAABcL3Byb2R1Y3QvODQ5MmY0YTJhNjZhMmZmMS92aWRlb2thcnRhLXBhbGl0LWdlZm9yY2UtcnR4LTMwODAtdGktZ2FtaW5ncHJvLW5lZDMwOHQwMTlrYi0xMzJhYS8L&lt;/Snapshot&gt;&lt;Created&gt;07.08.2023 19:00:38&lt;/Created&gt;&lt;/StorageSelector&gt;&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement CSS="A.pagination-widget__page-link.pagination-widget__page-link_next" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;c36a21b5-3fbe-4375-b030-38839babd7b7&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10FAAAACQIAAAAHAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAQAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAAFBAfn////8////BggAAAALc291cmNlSW5kZXgGCQAAAAQxNDQ5Afb////8////BgsAAAAEaHJlZgYMAAAAC2phdmFzY3JpcHQ6AfP////8////Bg4AAAAFY2xhc3MGDwAAAD9wYWdpbmF0aW9uLXdpZGdldF9fcGFnZS1saW5rIHBhZ2luYXRpb24td2lkZ2V0X19wYWdlLWxpbmtfbmV4dCAL&lt;/Snapshot&gt;&lt;Created&gt;07.08.2023 19:01:03&lt;/Created&gt;&lt;/StorageSelector&gt;</StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Извлечь данные 2" InternalName="CollectDataInternet" FriendlyName="Блок позволяет извлечь однотипные структурированные данные из веб-страниц (результаты поиска, элементы меню, списки, таблицы и т.д.) и поместить их в переменную в виде Таблицы Данных. Для указания необходимого источника данных и настроек извлечения воспользуйтесь кнопкой Извлечь данные на панели инструментов Дизайнера или кнопкой Запись в окне редактирования Селектора данного блока." Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Extract Data.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="67" Code="&amp;#xA;function CollectDataInternet{{{block_id}}}&amp;#xA;{    &amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;   &amp;#xA;    $ProcessID   = {{{ProcessID}}};&amp;#xA;    $DelayAfter  = {{{DelayAfter}}};  &amp;#xA;    $DelayBefore = {{{DelayBefore}}};&amp;#xA;    $WaitTime    = {{{WaitTime}}}; &amp;#xA;    $RowsCount   = {{{RowsCount}}};   &amp;#xA;    $PageCount   = {{{PageCount}}}; &amp;#xA;    $OffsetX2    = {{{OffsetX2}}};&amp;#xA;    $OffsetY2    = {{{OffsetY2}}};&amp;#xA;    $DelayPage   = {{{DelayPage}}};&amp;#xA;    &amp;#xA;        Start-Sleep -Seconds $DelayBefore; &amp;#xA;        &amp;#xA;        $psresultstr = Read-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;CollectDataInternet&amp;lt;/InternalName&amp;gt;&amp;lt;ProcessID&amp;gt;$ProcessID&amp;lt;/ProcessID&amp;gt;&amp;lt;RowsCount&amp;gt;$RowsCount&amp;lt;/RowsCount&amp;gt;&amp;lt;InternalType&amp;gt;Internet&amp;lt;/InternalType&amp;gt;{{{Selector}}}&amp;lt;WaitTime&amp;gt;$WaitTime&amp;lt;/WaitTime&amp;gt;&amp;lt;PageCount&amp;gt;$PageCount&amp;lt;/PageCount&amp;gt;&amp;lt;OffsetX2&amp;gt;$OffsetX2&amp;lt;/OffsetX2&amp;gt;&amp;lt;OffsetY2&amp;gt;$OffsetY2&amp;lt;/OffsetY2&amp;gt;&amp;lt;DelayPage&amp;gt;$DelayPage&amp;lt;/DelayPage&amp;gt;{{{Selector2}}}&amp;lt;/block&amp;gt;&amp;quot;);                       &amp;#xA;        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);&amp;#xA;        if($__Error.CheckResult($psResult)) { return; }               &amp;#xA;                    &amp;#xA;        {{{Result}}} = $__BinFormatter.frombin($psResult.Result); &amp;#xA;                                     &amp;#xA;        Start-Sleep -Seconds $DelayAfter;&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                            &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FFFFFFFF" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="16"&gt;&lt;Property Name="Selector" Tooltip="[Селектор] Идентификатор окна браузера и элемента веб-страницы, либо набора однотипных элементов (заголовков, ссылок, блоков текста и т.д.), которые необходимо извлечь" CatalogName="Main properties" Type="Selector" Value="&amp;lt;Selector&amp;gt;&amp;lt;Process Name=&amp;quot;chrome&amp;quot; /&amp;gt;&amp;lt;CSSElement ColumnName=&amp;quot;Колонка1&amp;quot; ColumnAttribute=&amp;quot;InnerText&amp;quot; CSS=&amp;quot;A.catalog-product__name.ui-link.ui-link_black&amp;quot;&amp;gt;&amp;lt;AlternateSelectors&amp;gt;&amp;lt;string&amp;gt;DIV[id='search-results'] &amp;amp;gt; DIV:nth-child(2) &amp;amp;gt; DIV &amp;amp;gt; DIV:nth-child(2) &amp;amp;gt; DIV &amp;amp;gt; A:nth-child(2)&amp;lt;/string&amp;gt;&amp;lt;string&amp;gt;DIV[id='search-results'] &amp;amp;gt; DIV.products-list. &amp;amp;gt; DIV.products-list__content &amp;amp;gt; DIV.catalog-products.view-simple &amp;amp;gt; DIV.catalog-product.ui-button-widget. &amp;amp;gt; A.catalog-product__name.ui-link.ui-link_black&amp;lt;/string&amp;gt;&amp;lt;string&amp;gt;DIV[id='search-results'] &amp;amp;gt; DIV.products-list &amp;amp;gt; DIV.products-list__content &amp;amp;gt; DIV.catalog-products &amp;amp;gt; DIV.catalog-product &amp;amp;gt; A.catalog-product__name&amp;lt;/string&amp;gt;&amp;lt;/AlternateSelectors&amp;gt;&amp;lt;/CSSElement&amp;gt;&amp;lt;CSSElement ColumnName=&amp;quot;Колонка2&amp;quot; ColumnAttribute=&amp;quot;InnerText&amp;quot; ParentIndent=&amp;quot;1&amp;quot; CSS=&amp;quot;:scope &amp;amp;gt; DIV:nth-child(5) &amp;amp;gt; DIV &amp;amp;gt; DIV&amp;quot; /&amp;gt;&amp;lt;/Selector&amp;gt;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Selector2" Tooltip="[Селектор] Селектор для перехода на следующую страницу. Если он задан, то будет произведен автоматический сбор данных со всех страниц" CatalogName="Main properties" Type="Selector" Value="&amp;lt;Selector&amp;gt;&amp;lt;Process Name=&amp;quot;chrome&amp;quot; /&amp;gt;&amp;lt;CSSElement Enabled=&amp;quot;True&amp;quot; PoorScore=&amp;quot;2&amp;quot; CSS=&amp;quot;DIV[id='products-list-pagination'] &amp;amp;gt; UL:nth-child(2) &amp;amp;gt; LI:nth-child(8)&amp;quot;&amp;gt;&amp;lt;/CSSElement&amp;gt;&amp;lt;/Selector&amp;gt;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="" Caption="Следующая страница" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetX2" Tooltip="[Число] Относительное смещение по координате X от левого верхнего угла целевого элемента следующей страницы" CatalogName="Main properties" Type="Expression" Value="36" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по X" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetY2" Tooltip="[Число] Относительное смещение по координате Y от левого верхнего угла целевого элемента следующей страницы" CatalogName="Main properties" Type="Expression" Value="28" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по Y" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayPage" Tooltip="[Число] Время паузы после нажатия на элемент следующей страницы в секундах. Может использоваться если данные на странице обновляются через AJAX" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Пауза следующей страницы" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="PageCount" Tooltip="[Число] Количество обрабатываемых страниц. Если значение не задано или равно нулю, то обрабатываются все возможные страницы пока доступен элемент следующая страница" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Количество страниц" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="RowsCount" Tooltip="[Число] Максимальное количество извлекаемых строк" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Количество строк" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ProcessID" Tooltip="[Ссылка] Переменная, в которой хранится идентификатор процесса и вкладки браузера, используемые данным блоком. Если свойство оставить пустым, либо если переменная &amp;quot;ID процесса&amp;quot; не была ранее присвоена в момент открытия браузера, приложение и вкладка браузера будут определены из содержимого соответствующей строки селектора. ID процесса может быть получен, например, с помощью блоков Запустить IE, Запустить Chrome или Присоединиться к браузеру." CatalogName="Main properties" Type="Variable" Value="$ProcessID" Visible="True" DefaultValue="" ValueType="ProcessID" EnumVariants="" Caption="ID процесса" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBefore" Tooltip="[Число] Задержка в секундах перед выполнением блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка перед" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayAfter" Tooltip="[Число] Задержка в секундах после выполения блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка после" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTime" Tooltip="[Число] Предельное время ожидания появления элемента в секундах" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Result" Tooltip="[Таблица Данных] Таблица, содержащая извлеченные данные" CatalogName="Output" Type="Variable" Value="$data" Visible="True" DefaultValue="" ValueType="Text" EnumVariants="{x:Null}" Caption="Результат" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>930</Left>
      <Top>2280</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>76b96e13-0e34-464f-b340-071f8b99b708</ID>
      <zIndex>67</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Прервать контейнер" InternalName="AbortContainer" FriendlyName="Блок позволяет выйти в любом месте из контейнера (Try/Catch, Контейнер). По умолчанию для выхода из контейнера необходимо устанавливать блок &amp;quot;Конец&amp;quot;. После этого выход из контейнера будет произведен по коннектору &amp;quot;Выход&amp;quot;. Если возникает необходимость выйти из контейнера в любом месте, то необходимо установить данный блок и уже после него продолжить сценарий. Если далее в сценарии встретится блок &amp;quot;Конец&amp;quot;, то он завершит или предыдущий контейнер или всю диаграмму. Если блок &amp;quot;Прервать контейнер&amp;quot; стоит вне работы контейнера, то он не выполнит возврат из диаграммы" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Abort Container.png" PathToToolboxImage="ExternalToolboxes\Image\ico_Abort Container.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="14" Code="&amp;#xA;function AbortContainer{{{block_id}}}&amp;#xA;{       &amp;#xA;    try&amp;#xA;    {&amp;#xA;    $currentblockid = &amp;quot;{{{block_native_id}}}&amp;quot;;&amp;#xA;       &amp;#xA;        $Value        = {{{Value}}};&amp;#xA;        $SendOrkest   = ${{{SendOrkest}}};&amp;#xA;        $IsScreenshot = ${{{IsScreenshot}}};&amp;#xA;        &amp;#xA;        $ValueStr = VarToString($Value); &amp;#xA;             &amp;#xA;        $val = _shield $ValueStr;&amp;#xA;        if($SendOrkest -or $IsScreenshot)&amp;#xA;        {                      &amp;#xA;            if($val.Length -eq 0)&amp;#xA;            {&amp;#xA;                $val = &amp;quot;Screenshot &amp;quot;+[DateTime]::Now.ToString();&amp;#xA;            }&amp;#xA;            Write-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;SendLogOrkest&amp;lt;/InternalName&amp;gt;&amp;lt;UITextValue&amp;gt;$val&amp;lt;/UITextValue&amp;gt;&amp;lt;UITextType&amp;gt;Info&amp;lt;/UITextType&amp;gt;&amp;lt;IsScreenshot&amp;gt;{{{IsScreenshot}}}&amp;lt;/IsScreenshot&amp;gt;&amp;lt;/block&amp;gt;&amp;quot;); &amp;#xA;        }&amp;#xA;        if($val.Length -gt 0)&amp;#xA;        {&amp;#xA;            $xmlvar = &amp;quot;&amp;quot;;&amp;#xA;            try&amp;#xA;            {&amp;#xA;                $xmlvar = $script:__BinFormatter.vartoxmlraw($Value);&amp;#xA;            }&amp;#xA;            catch{} &amp;#xA;            Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;Log&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$val&amp;lt;/InternalValue&amp;gt;$xmlvar&amp;lt;/info&amp;gt;&amp;quot;);&amp;#xA;        }&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;    }&amp;#xA;    &amp;#xA;    try&amp;#xA;    {&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable1}}} = {{{Expression1}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable1: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable2}}} = {{{Expression2}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable2: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable3}}} = {{{Expression3}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable3: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable4}}} = {{{Expression4}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable4: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable5}}} = {{{Expression5}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable5: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression6}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression6: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression7}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression7: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression8}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression8: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression9}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression9: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression10}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression10: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA; &amp;#xA;    }&amp;#xA;    catch {}&amp;#xA;    &amp;#xA;    try&amp;#xA;    {    &amp;#xA;        if ($script:__callstack.Count -gt 0)&amp;#xA;        {&amp;#xA;            $stackitem = $script:__callstack.Peek();  &amp;#xA;            $containerName = $stackitem.ProcessContainer;&amp;#xA;            if($containerName.StartsWith(&amp;quot;TryCatchContainer&amp;quot;) -or $containerName.StartsWith(&amp;quot;CollapseContainer&amp;quot;))&amp;#xA;            {       &amp;#xA;                $__Error.Quit(); &amp;#xA;                $stackitem = $script:__callstack.Pop();&amp;#xA;            }&amp;#xA;        }                &amp;#xA;    }&amp;#xA;    catch{}                                        &amp;#xA;    $script:__NextBlockID = &amp;quot;{{{connector-Next}}}&amp;quot;; &amp;#xA;    $script:__LastBlockID = &amp;quot;{{{block_native_id}}}&amp;quot;;&amp;#xA;}               &amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="Value" Tooltip="[Любой тип данных] Числовая, текстовая константа (в кавычках), имя переменной (начинающееся с $) или любое выражение, значение которого будет выведено в лог в процессе работы сценария робота. Значение может в том числе иметь сложный тип данных, например Список, Таблица или Словарь." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Записать в лог" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable1" Tooltip="[Переменная] Имя первой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression1" Tooltip="[Любой тип данных] Новое значение первой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable2" Tooltip="[Переменная] Имя второй переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression2" Tooltip="[Любой тип данных] Новое значение второй переменной. Свойство игнорируется, если не задано имя второй переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable3" Tooltip="[Переменная] Имя третьей переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression3" Tooltip="[Любой тип данных] Новое значение третьей переменной. Свойство игнорируется, если не задано имя третьей переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable4" Tooltip="[Переменная] Имя четвертой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression4" Tooltip="[Любой тип данных] Новое значение четвертой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable5" Tooltip="[Переменная] Имя пятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression5" Tooltip="[Любой тип данных] Новое значение пятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression6" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression7" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression8" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression9" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression10" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SendOrkest" Tooltip="Если выбрано, то текст будет также логироваться в оркестратор, если подключение к нему активно" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Логировать в оркестратор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="IsScreenshot" Tooltip="Если выбрано, то будет создан скриншот экрана и отправлен в оркестратор, если подключение к нему активно" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Скриншот в оркестратор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1680</Left>
      <Top>1190</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>6a506861-081e-4d13-83e5-77de586ca944</ID>
      <zIndex>77</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Try/Catch" InternalName="TryCatchContainer" FriendlyName="Блок реализует конструкцию Try/Catch. Для правильной работы блоки этого контейнера должны заканчиваться блоком &amp;quot;Конец&amp;quot;. При возникновении ошибки в блоках будет реализован выход по коннектору &amp;quot;Если ошибка&amp;quot;. В противном случае по коннектору &amp;quot;Выход&amp;quot;. Для имитации конструкции Finally требуется ручное соединение блоков после обработки ошибки с блоками коннектора &amp;quot;Выход&amp;quot;. Если к коннектору &amp;quot;Если ошибка&amp;quot; не подключен блок, то ошибка будет игнорироваться, и выход будет произведен по коннектору &amp;quot;Выход&amp;quot;. Если коннектор &amp;quot;Выход&amp;quot; не подключен, то при отсутсвии ошибки, будет произведен возврат из текущей диаграммы" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_Subprocess.png" PathToToolboxImage="ExternalToolboxes\Image\ico_Subprocess.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="85" Code="&amp;#xA;function TryCatchContainer{{{block_id}}}&amp;#xA;{   &amp;#xA;    try&amp;#xA;    {&amp;#xA;    $script:__LastBlockID = &amp;quot;{{{block_native_id}}}&amp;quot;;&amp;#xA;         &amp;#xA;    $currentblockid = &amp;quot;{{{block_native_id}}}&amp;quot;; &amp;#xA;    &amp;#xA;    $NumberAttemptsObj = {{{NumberAttempts}}};&amp;#xA;    &amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable1}}} = {{{Expression1}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable1: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable2}}} = {{{Expression2}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable2: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable3}}} = {{{Expression3}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable3: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable4}}} = {{{Expression4}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable4: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;            try&amp;#xA;            {         &amp;#xA;                {{{Variable5}}} = {{{Expression5}}};&amp;#xA;            }&amp;#xA;            catch { $errormessage = &amp;quot;Variable5: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression6}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression6: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression7}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression7: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression8}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression8: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression9}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression9: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        try&amp;#xA;        {         &amp;#xA;            {{{Expression10}}}&amp;#xA;        }&amp;#xA;        catch { $errormessage = &amp;quot;Expression10: &amp;quot; + $_.Exception.Message; Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;$currentblockid&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$errormessage&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;); }&amp;#xA;        &amp;#xA;    }&amp;#xA;    catch {}&amp;#xA;        &amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;Default&amp;quot;,&amp;quot;Default&amp;quot;,&amp;quot;Default&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;); &amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connector-Out}}}&amp;quot;, &amp;quot;{{{connector-Out}}}&amp;quot;); &amp;#xA;            &amp;#xA;    $_NumberAttempts = 1; &amp;#xA;    &amp;#xA;    if($null -eq $NumberAttemptsObj) { $NumberAttemptsObj = &amp;quot;&amp;quot;; }&amp;#xA;    &amp;#xA;    $tempint = 0;&amp;#xA;    if([int]::TryParse($NumberAttemptsObj, [ref] $tempint)) { $_NumberAttempts = $tempint; }&amp;#xA;           &amp;#xA;    if($script:__FuncIndex -gt $script:__LastFuncIndex) &amp;#xA;    { &amp;#xA;        $script:__IndexAttempt{{{block_id}}} = 0; &amp;#xA;    } &amp;#xA;    &amp;#xA;    $script:__IndexAttempt{{{block_id}}} = $script:__IndexAttempt{{{block_id}}} + 1;&amp;#xA;    if($_NumberAttempts -gt 1)&amp;#xA;    {               &amp;#xA;        $val = &amp;quot;Попытка &amp;quot; + $script:__IndexAttempt{{{block_id}}}; &amp;#xA;        Write-Host(&amp;quot;&amp;lt;info&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ErrorBlockLight&amp;lt;/InternalName&amp;gt;&amp;lt;InternalValue&amp;gt;$val&amp;lt;/InternalValue&amp;gt;&amp;lt;/info&amp;gt;&amp;quot;);&amp;#xA;    }&amp;#xA;    &amp;#xA;    $interceptConnectorError = &amp;quot;&amp;quot;; &amp;#xA;    $interceptConnectorNext = &amp;quot;&amp;quot;;&amp;#xA;    if ($script:__callstack.Count -gt 0)&amp;#xA;    {&amp;#xA;        $tempitem                = $script:__callstack.Peek();&amp;#xA;        $interceptConnectorError = [string]$tempitem.ConnectorError;&amp;#xA;        $interceptConnectorNext  = [string]$tempitem.ConnectorNext;&amp;#xA;    }  &amp;#xA;    &amp;#xA;    $stackitem                  = [MainHelpers.StackItem]::new();&amp;#xA;    $stackitem.ProcessContainer = &amp;quot;TryCatchContainer{{{block_id}}}&amp;quot;;&amp;#xA;    $stackitem.ConnectorNext    = &amp;quot;{{{connector-Out}}}&amp;quot;; &amp;#xA;    $stackitem.ConnectorError   = &amp;quot;{{{connector-Error}}}&amp;quot;; &amp;#xA;    &amp;#xA;    if ($stackitem.ConnectorError.Length -eq 0) { $stackitem.ConnectorError = $stackitem.ConnectorNext; }&amp;#xA;    if ($stackitem.ConnectorError.Length -eq 0) { $stackitem.ConnectorError = $interceptConnectorError; }&amp;#xA;    if ($stackitem.ConnectorError.Length -eq 0) { $stackitem.ConnectorError = $interceptConnectorNext; } &amp;#xA;          &amp;#xA;    if($script:__IndexAttempt{{{block_id}}} -lt $_NumberAttempts)&amp;#xA;    {&amp;#xA;        $stackitem.ConnectorError = $stackitem.ProcessContainer;&amp;#xA;    }&amp;#xA;        &amp;#xA;    $script:__callstack.push($stackitem);  &amp;#xA;    &amp;#xA;    if($null -eq $script:__ProcessContainerErrorMessage)&amp;#xA;    {&amp;#xA;        $script:__ProcessContainerErrorMessage = New-Object 'System.Collections.Generic.Dictionary[[string],[string]]'&amp;#xA;    }&amp;#xA;&amp;#xA;    $script:__ProcessContainerErrorMessage[$stackitem.ProcessContainer] = &amp;quot;{{{ErrorMessage}}}&amp;quot;;&amp;#xA;    &amp;#xA;    $script:__NextBlockID = &amp;quot;{{{connector-Next}}}&amp;quot;;  &amp;#xA;}                   &amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="NumberAttempts" Tooltip="[Текст] Блок не выйдет по коннектору &amp;quot;Если ошибка&amp;quot; пока не закончится указанное число попыток" CatalogName="Main properties" Type="Expression" Value="1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="" Caption="Количество попыток" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable1" Tooltip="[Переменная] Имя первой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression1" Tooltip="[Любой тип данных] Новое значение первой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable2" Tooltip="[Переменная] Имя второй переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression2" Tooltip="[Любой тип данных] Новое значение второй переменной. Свойство игнорируется, если не задано имя второй переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable3" Tooltip="[Переменная] Имя третьей переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression3" Tooltip="[Любой тип данных] Новое значение третьей переменной. Свойство игнорируется, если не задано имя третьей переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable4" Tooltip="[Переменная] Имя четвертой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression4" Tooltip="[Любой тип данных] Новое значение четвертой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Variable5" Tooltip="[Переменная] Имя пятой переменной, которой необходимо присвоить новое значение. Можно выбрать из выпадающего списка переменную, которая была ранее объявлена в панели Переменные, а также ввести имя новой или использовавшейся ранее в другом блоке переменной, даже если она не была объявлена в панели Переменные." CatalogName="Main properties" Type="Variable" Value="" Visible="True" DefaultValue="" ValueType="Variable" EnumVariants="{x:Null}" Caption="Переменная 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression5" Tooltip="[Любой тип данных] Новое значение пятой переменной. Свойство игнорируется, если не задано имя первой переменной. Новое значение переменной может быть как константой (числом, текстовой строкой), так и выражением с использованием других переменных и/или функций. В новом значении переменной разрешено использовать выражение с участием этой же переменной. Не забудьте, что здесь и в других блоках используемые в выражениях названия переменных должны начинаться с символа $, а строковые константы должны заключаться в кавычки." CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="AnyDataType" EnumVariants="{x:Null}" Caption="Значение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression6" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 1" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression7" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 2" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression8" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 3" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression9" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 4" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Expression10" Tooltip="[Выражение] Выражение, которое необходимо выполнить. Должно быть записано в формате языка PowerShell" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="" ValueType="Expression" EnumVariants="{x:Null}" Caption="Выражение 5" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="8"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.25" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Out" Orientation="Right" RelativePosition="1,0.75" MaxInConnections="0" MaxOutConnections="1" Color="#FF008000" Caption="Выход" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>930</Left>
      <Top>1030</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>c669ffe2-52f3-40be-a88f-1013f04c6b53</ID>
      <zIndex>75</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors></StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Открытие поиска" InternalName="ToDoBlock" FriendlyName="Блок можно использовать как заглушку или напоминание для планируемых к реализации функций. В отличие от блока Комментарий данный блок является элементом сценария, но не выполняет никаких действий." Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_ToDo.png" PathToToolboxImage="ExternalToolboxes\Image\ico_ToDo.png" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="10" Code="&amp;#xA;function ToDoBlock{{{block_id}}}&amp;#xA;{   &amp;#xA;    $script:__LastBlockID = &amp;quot;{{{block_native_id}}}&amp;quot;;&amp;#xA;    $script:__NextBlockID = &amp;quot;{{{connector-Next}}}&amp;quot;;  &amp;#xA;}                   &amp;#xA;                " TextColor="#FFDADADA" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF252525&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FFFFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="0" /&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>930</Left>
      <Top>1505</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>d19c9b09-73c6-4117-9d18-30fa56e0682a</ID>
      <zIndex>84</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors>&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement CSS="SPAN.city-select__text_90n" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;dbb102cc-9b1a-4ff9-b15b-e2f0f977a455&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10EAAAACQIAAAADAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAMAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAARTUEFOAfn////8////BggAAAALc291cmNlSW5kZXgGCQAAAAI3OQH2/////P///wYLAAAABWNsYXNzBgwAAAAVY2l0eS1zZWxlY3RfX3RleHRfOTBuCw==&lt;/Snapshot&gt;&lt;Created&gt;08.08.2023 13:25:48&lt;/Created&gt;&lt;/StorageSelector&gt;&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement CSS="DIV[id='select-city']" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;4fe7c305-638d-48d1-91bc-82639a0000bb&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10FAAAACQIAAAAHAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAQAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAANESVYB+f////z///8GCAAAAAtzb3VyY2VJbmRleAYJAAAAAzcxMgH2/////P///wYLAAAABWNsYXNzBgwAAAAkY2l0eS1zZWxlY3QtbW9kYWxfc2VsZWN0LWxpc3RzX09GQ2NzAfP////8////Bg4AAAACaWQGDwAAAAtzZWxlY3QtY2l0eQs=&lt;/Snapshot&gt;&lt;Created&gt;08.08.2023 13:27:35&lt;/Created&gt;&lt;/StorageSelector&gt;</StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Клик Выбор города" InternalName="MouseClickInternet" FriendlyName="Клик мышкой по элементу веб-страницы (ссылке, кнопке, полю редактирования, переключателю, галочке, картинке и т.д.). Клик может быть произведен даже в том случае, если элемент находится за пределами экрана (требуется прокрутка страницы). Если после клика была открыта новая вкладка браузера или новое окно браузера, вы можете продолжить работу как со старой, так и с новой вкладками." Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Mouse Click.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="130" Code="&amp;#xA;function MouseClickInternet{{{block_id}}}&amp;#xA;{          &amp;#xA;    try&amp;#xA;    {&amp;#xA;        $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;        $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;        &amp;#xA;        $ProcessID            = {{{ProcessID}}};  &amp;#xA;        $DelayAfter           = {{{DelayAfter}}};  &amp;#xA;        $DelayBefore          = {{{DelayBefore}}};&amp;#xA;        $WaitTime             = {{{WaitTime}}}; &amp;#xA;        $OffsetX              = {{{OffsetX}}};&amp;#xA;        $OffsetY              = {{{OffsetY}}}; &amp;#xA;        $KeyModifier          = {{{KeyModifier}}};          &amp;#xA;        $DelayBeforeSelector2 = {{{DelayBeforeSelector2}}};&amp;#xA;        $WaitTimeSelector2    = {{{WaitTimeSelector2}}};&amp;#xA;        $AttemptsSelector2    = {{{AttemptsSelector2}}}; &amp;#xA;        $AppearTypeSelector2  = &amp;quot;{{{AppearTypeSelector2}}}&amp;quot;;&amp;#xA;        &amp;#xA;        Start-Sleep -Seconds $DelayBefore; &amp;#xA;               &amp;#xA;        $psresultstr = Read-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ClickUI&amp;lt;/InternalName&amp;gt;&amp;lt;InternalType&amp;gt;Internet&amp;lt;/InternalType&amp;gt;&amp;lt;Action&amp;gt;{{{Action}}}&amp;lt;/Action&amp;gt;&amp;lt;OffsetX&amp;gt;$OffsetX&amp;lt;/OffsetX&amp;gt;&amp;lt;OffsetY&amp;gt;$OffsetY&amp;lt;/OffsetY&amp;gt;&amp;lt;ProcessID&amp;gt;$ProcessID&amp;lt;/ProcessID&amp;gt;&amp;lt;KeyModifier&amp;gt;$KeyModifier&amp;lt;/KeyModifier&amp;gt;&amp;lt;AutoScroll&amp;gt;{{{AutoScroll}}}&amp;lt;/AutoScroll&amp;gt;&amp;lt;WaitTime&amp;gt;$WaitTime&amp;lt;/WaitTime&amp;gt;&amp;lt;SimulateMove&amp;gt;{{{SimulateMove}}}&amp;lt;/SimulateMove&amp;gt;&amp;lt;SimulateMessages&amp;gt;{{{SimulateMessages}}}&amp;lt;/SimulateMessages&amp;gt;&amp;lt;AbsolutePoint&amp;gt;{{{AbsolutePoint}}}&amp;lt;/AbsolutePoint&amp;gt;{{{Selector}}}&amp;lt;DelayBeforeSelector2&amp;gt;$DelayBeforeSelector2&amp;lt;/DelayBeforeSelector2&amp;gt;&amp;lt;WaitTimeSelector2&amp;gt;$WaitTimeSelector2&amp;lt;/WaitTimeSelector2&amp;gt;&amp;lt;AttemptsSelector2&amp;gt;$AttemptsSelector2&amp;lt;/AttemptsSelector2&amp;gt;&amp;lt;AppearTypeSelector2&amp;gt;$AppearTypeSelector2&amp;lt;/AppearTypeSelector2&amp;gt;{{{Selector2}}}&amp;lt;/block&amp;gt;&amp;quot;);                      &amp;#xA;        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);&amp;#xA;        if($__Error.CheckResult($psResult)) { return; }&amp;#xA;           &amp;#xA;        {{{NewProcessID}}} = $psResult.Result; &amp;#xA;        &amp;#xA;        Start-Sleep -Seconds $DelayAfter;&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                            &amp;#xA;    $__Error.Quit(); &amp;#xA;}                   &amp;#xA;                " TextColor="#FFFFFFFF" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="True" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="Selector" Tooltip="[Селектор] Идентификатор окна браузера и элемента веб-страницы. Если селектор будет пустым, то клик будет произведен используя заданные смещения от текущего положения курсора" CatalogName="Main properties" Type="Selector" Value="&amp;lt;Selector&amp;gt;&amp;lt;Process Name=&amp;quot;chrome&amp;quot; /&amp;gt;&amp;lt;CSSElement CSS=&amp;quot;SPAN.city-select__text_90n&amp;quot; /&amp;gt;&amp;lt;/Selector&amp;gt;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Action" Tooltip="Выбор действия: левый клик, двойной клик, правый клик, навести курсор" CatalogName="Main properties" Type="Enum" Value="Click" Visible="True" DefaultValue="" ValueType="" EnumVariants="Click;DoubleClick;RightClick;Over" Caption="Действие" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="KeyModifier" Tooltip="[Текст] Указывается клавиша-можификатор, которая будет зажата при клике. Возможные значения: &amp;quot;CTRL&amp;quot;, &amp;quot;SHIFT&amp;quot;, &amp;quot;ALT&amp;quot;, &amp;quot;SPACE&amp;quot;. Есть возможность указать комбинацию клавиш, например: &amp;quot;CTRL+SHIFT&amp;quot;" CatalogName="Custom properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="" Caption="Клавиша-модификатор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="4fe7c305-638d-48d1-91bc-82639a0000bb" Visible="False" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="{x:Null}" Caption="ThumbImage" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ProcessID" Tooltip="[Ссылка] Переменная, в которой хранится идентификатор процесса и вкладки браузера, используемые данным блоком. Если свойство оставить пустым, либо если переменная &amp;quot;ID процесса&amp;quot; не была ранее присвоена в момент открытия браузера, приложение и вкладка браузера будут определены из содержимого соответствующей строки селектора. ID процесса может быть получен, например, с помощью блоков Запустить IE, Запустить Chrome или Присоединиться к браузеру." CatalogName="Main properties" Type="Variable" Value="$ProcessID" Visible="True" DefaultValue="" ValueType="ProcessID" EnumVariants="" Caption="ID процесса" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBefore" Tooltip="[Число] Задержка в секундах перед выполнением блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка перед" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayAfter" Tooltip="[Число] Задержка в секундах после выполения блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка после" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTime" Tooltip="[Число] Предельное время ожидания появления элемента в секундах" CatalogName="Main properties" Type="Expression" Value="30" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AutoScroll" Tooltip="Если выбрано, то будет произведен автоматический скроллинг до элемента, который находится за пределами видимой части страницы" CatalogName="Custom properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Автоскроллинг" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetX" Tooltip="[Число] Относительное смещение клика по координате X от левого верхнего угла элемента. Если не указано никакое значение (свойство пустое), то в качестве точки клика будет использоваться центр элемента" CatalogName="Main properties" Type="Expression" Value="27" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по X" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetY" Tooltip="[Число] Относительное смещение клика по координате Y от левого верхнего угла элемента. Если не указано никакое значение (свойство пустое), то в качестве точки клика будет использоваться центр элемента" CatalogName="Main properties" Type="Expression" Value="13" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по Y" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Selector2" Tooltip="[Селектор] Идентификатор элемента пользовательского интерфейса. Если селектор будет пустым, то блок не будет ожидать появление этого элемента" CatalogName="Main properties" Type="Selector" Value="&amp;lt;Selector&amp;gt;&amp;lt;Process Name=&amp;quot;chrome&amp;quot; /&amp;gt;&amp;lt;CSSElement CSS=&amp;quot;DIV[id='select-city']&amp;quot; /&amp;gt;&amp;lt;/Selector&amp;gt;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AppearTypeSelector2" Tooltip="Выбор типа ожидания. Appear - появление, Disappear - исчезновение" CatalogName="Main properties" Type="Enum" Value="Appear" Visible="True" DefaultValue="" ValueType="" EnumVariants="Appear;Disappear" Caption="Тип ожидания селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBeforeSelector2" Tooltip="[Число] Задержка перед проверкой селектора ожидания" CatalogName="Main properties" Type="Expression" Value="2" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Задержка перед проверкой селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTimeSelector2" Tooltip="[Число] Предельное время ожидания элемента, заданного в селекторе ожидания в секундах" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания для селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AttemptsSelector2" Tooltip="[Число] Количество попыток для селектора ожидания. Если селектор ожидания не будет найден, то блок будет производить клик по основному селектору" CatalogName="Main properties" Type="Expression" Value="1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Количество попыток для селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SimulateMove" Tooltip="При включении будет симулироваться движение курсора мышки от текущей позиции до рассчитанной блоком точки" CatalogName="Custom properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Симуляция движения" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SimulateMessages" Tooltip="При включении клик будет выполнен средствами браузера" CatalogName="Custom properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Симуляция клика" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AbsolutePoint" Tooltip="Если включено, то свойства со &amp;quot;Смещение по X&amp;quot; и &amp;quot;Смещение по Y&amp;quot; будут использоваться как абсолютные координаты для клика. Если не задан селектор, то клик будет произведен в этих координатах" CatalogName="Custom properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Абсолютные координаты" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="NewProcessID" Tooltip="[Ссылка]  Если в результате работы блока открылась новая вкладка браузера, то ее идентификатор будет записан в указанную здесь переменную. В большинстве случаев это свойство и свойство &amp;quot;ID процесса&amp;quot; могут использовать одну и ту же переменную. Укажите другое имя переменной, если вы хотите продолжать работу со старой вкладкой в случае открытия новой вкладки или же разделить работу со старой и новой вкладками между разными блоками диаграммы" CatalogName="Output" Type="Variable" Value="$ProcessID" Visible="True" DefaultValue="" ValueType="NewProcessID" EnumVariants="" Caption="Новый ID процесса" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>930</Left>
      <Top>1655</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>bc9fcb30-d11f-4604-869f-b89257f1fca4</ID>
      <zIndex>82</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors>&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement CSS="INPUT.base-ui-input-search_base-ui-input-search__input_ZW4RL" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;cd19cca1-fb20-4512-b5e9-674513bf8a1b&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10IAAAACQIAAAAHAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAcAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAAVJTlBVVAH5/////P///wYIAAAAC3NvdXJjZUluZGV4BgkAAAADNzIwAfb////8////BgsAAAAQZGF0YS1jaXR5LXNlbGVjdAYMAAAAFWNpdHktbW9kYWwtaW5wdXQtYXR0cgHz/////P///wYOAAAABWNsYXNzBg8AAAA2YmFzZS11aS1pbnB1dC1zZWFyY2hfYmFzZS11aS1pbnB1dC1zZWFyY2hfX2lucHV0X1pXNFJMAfD////8////BhEAAAAEdHlwZQYSAAAABHRleHQB7f////z///8GFAAAAAtwbGFjZWhvbGRlcgYVAAAAFdCd0LDQudGC0Lgg0LPQvtGA0L7QtAHq/////P///wYXAAAAF2RhdGEtY2l0eS1tb2RhbC1tZXRyaWNzBhgAAAATc2VhcmNoLWZpZWxkX19pbnB1dAs=&lt;/Snapshot&gt;&lt;Created&gt;08.08.2023 13:28:54&lt;/Created&gt;&lt;/StorageSelector&gt;</StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Задать Город" InternalName="SetUITextInternet" FriendlyName="Задать текст элементу веб-страницы (например, полю редактирования) или присвоить значение атрибуту элемента. В задачах эмуляции пользовательского ввода данный блок работает быстрее, чем блок Нажать клавиши, но в зависимости от типа веб-страницы и элемента управления может не приводить к желаемому результату. В таком случае используйте блок Нажать клавиши." Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Set Control Text.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="61" Code="&amp;#xA;function SetUITextInternet{{{block_id}}}&amp;#xA;{&amp;#xA; try&amp;#xA; {&amp;#xA;    $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;    $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);  &amp;#xA;    &amp;#xA;    $UITextValueObj = {{{UITextValue}}};  &amp;#xA;    $UITextType  = &amp;quot;{{{UITextType}}}&amp;quot;;      &amp;#xA;    $ProcessID   = {{{ProcessID}}}; &amp;#xA;    $DelayAfter  = {{{DelayAfter}}}; &amp;#xA;    $DelayBefore = {{{DelayBefore}}}; &amp;#xA;    $WaitTime    = {{{WaitTime}}}; &amp;#xA;    $AttributeName = {{{AttributeName}}};&amp;#xA;    &amp;#xA;        Start-Sleep -Seconds $DelayBefore; &amp;#xA;                          &amp;#xA;        $UITextValue = _checkpassword($UITextValueObj);&amp;#xA;        &amp;#xA;        $val = _shield $UITextValue;&amp;#xA;        &amp;#xA;        $psresultstr = Read-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;SetUIText&amp;lt;/InternalName&amp;gt;&amp;lt;ProcessID&amp;gt;$ProcessID&amp;lt;/ProcessID&amp;gt;&amp;lt;InternalType&amp;gt;Internet&amp;lt;/InternalType&amp;gt;&amp;lt;UITextType&amp;gt;$UITextType&amp;lt;/UITextType&amp;gt;&amp;lt;UITextValue&amp;gt;$val&amp;lt;/UITextValue&amp;gt;&amp;lt;WaitTime&amp;gt;$WaitTime&amp;lt;/WaitTime&amp;gt;&amp;lt;AutoScroll&amp;gt;{{{AutoScroll}}}&amp;lt;/AutoScroll&amp;gt;&amp;lt;AttributeName&amp;gt;$AttributeName&amp;lt;/AttributeName&amp;gt;{{{Selector}}}&amp;lt;/block&amp;gt;&amp;quot;);                     &amp;#xA;        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);&amp;#xA;        if($__Error.CheckResult($psResult)) { return; } &amp;#xA;        &amp;#xA;        Start-Sleep -Seconds $DelayAfter; &amp;#xA;    &amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                            &amp;#xA;    $__Error.Quit();&amp;#xA;}                   &amp;#xA;                " TextColor="#FFFFFFFF" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="16"&gt;&lt;Property Name="Selector" Tooltip="[Селектор] Идентификатор окна браузера и элемента веб-страницы" CatalogName="Main properties" Type="Selector" Value="&amp;lt;Selector&amp;gt;&amp;lt;Process Name=&amp;quot;chrome&amp;quot; /&amp;gt;&amp;lt;CSSElement CSS=&amp;quot;INPUT.base-ui-input-search_base-ui-input-search__input_ZW4RL&amp;quot; /&amp;gt;&amp;lt;/Selector&amp;gt;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="UITextValue" Tooltip="[Текст] Текст или значение, которое необходимо задать элементу или его атрибуту" CatalogName="Required" Type="Expression" Value="$settings.city" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="{x:Null}" Caption="Значение" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="UITextType" Tooltip="Выбор типа задаваемого значения" CatalogName="Main properties" Type="Enum" Value="Text" Visible="True" DefaultValue="" ValueType="" EnumVariants="Text;Class;InnerHtml;InnerText;Href;Attribute" Caption="Тип значения" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AttributeName" Tooltip="[Текст] Имя атрибута. Данное свойство используется при выборе типа значения &amp;quot;Attribute&amp;quot;" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="" Caption="Имя атрибута" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ProcessID" Tooltip="[Ссылка] Переменная, в которой хранится идентификатор процесса и вкладки браузера, используемые данным блоком. Если свойство оставить пустым, либо если переменная &amp;quot;ID процесса&amp;quot; не была ранее присвоена в момент открытия браузера, приложение и вкладка браузера будут определены из содержимого соответствующей строки селектора. ID процесса может быть получен, например, с помощью блоков Запустить IE, Запустить Chrome или Присоединиться к браузеру." CatalogName="Main properties" Type="Variable" Value="$ProcessID" Visible="True" DefaultValue="" ValueType="ProcessID" EnumVariants="" Caption="ID процесса" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="cd19cca1-fb20-4512-b5e9-674513bf8a1b" Visible="False" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="{x:Null}" Caption="ThumbImage" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBefore" Tooltip="[Число] Задержка в секундах перед выполением блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка перед" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayAfter" Tooltip="[Число] Задержка в секундах после выполения блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка после" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTime" Tooltip="[Число] Предельное время ожидания заданного элемента в секундах" CatalogName="Main properties" Type="Expression" Value="20" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AutoScroll" Tooltip="Если выбрано, то будет произведен автоматический скроллинг до элемента на странице" CatalogName="Main properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Автоскроллинг" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>930</Left>
      <Top>1795</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>8f02855a-a1f8-4030-af4f-4ff8d45ed2fd</ID>
      <zIndex>88</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors>&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement CSS="SPAN.city-select__text_90n" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;dbb102cc-9b1a-4ff9-b15b-e2f0f977a455&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10EAAAACQIAAAADAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAMAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAARTUEFOAfn////8////BggAAAALc291cmNlSW5kZXgGCQAAAAI3OQH2/////P///wYLAAAABWNsYXNzBgwAAAAVY2l0eS1zZWxlY3RfX3RleHRfOTBuCw==&lt;/Snapshot&gt;&lt;Created&gt;08.08.2023 13:25:48&lt;/Created&gt;&lt;/StorageSelector&gt;&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement CSS="DIV[id='select-city']" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;4fe7c305-638d-48d1-91bc-82639a0000bb&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10FAAAACQIAAAAHAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAQAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAANESVYB+f////z///8GCAAAAAtzb3VyY2VJbmRleAYJAAAAAzcxMgH2/////P///wYLAAAABWNsYXNzBgwAAAAkY2l0eS1zZWxlY3QtbW9kYWxfc2VsZWN0LWxpc3RzX09GQ2NzAfP////8////Bg4AAAACaWQGDwAAAAtzZWxlY3QtY2l0eQs=&lt;/Snapshot&gt;&lt;Created&gt;08.08.2023 13:27:35&lt;/Created&gt;&lt;/StorageSelector&gt;</StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Клик Выбор города" InternalName="MouseClickInternet" FriendlyName="Клик мышкой по элементу веб-страницы (ссылке, кнопке, полю редактирования, переключателю, галочке, картинке и т.д.). Клик может быть произведен даже в том случае, если элемент находится за пределами экрана (требуется прокрутка страницы). Если после клика была открыта новая вкладка браузера или новое окно браузера, вы можете продолжить работу как со старой, так и с новой вкладками." Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Mouse Click.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="130" Code="&amp;#xA;function MouseClickInternet{{{block_id}}}&amp;#xA;{          &amp;#xA;    try&amp;#xA;    {&amp;#xA;        $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;        $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;        &amp;#xA;        $ProcessID            = {{{ProcessID}}};  &amp;#xA;        $DelayAfter           = {{{DelayAfter}}};  &amp;#xA;        $DelayBefore          = {{{DelayBefore}}};&amp;#xA;        $WaitTime             = {{{WaitTime}}}; &amp;#xA;        $OffsetX              = {{{OffsetX}}};&amp;#xA;        $OffsetY              = {{{OffsetY}}}; &amp;#xA;        $KeyModifier          = {{{KeyModifier}}};          &amp;#xA;        $DelayBeforeSelector2 = {{{DelayBeforeSelector2}}};&amp;#xA;        $WaitTimeSelector2    = {{{WaitTimeSelector2}}};&amp;#xA;        $AttemptsSelector2    = {{{AttemptsSelector2}}}; &amp;#xA;        $AppearTypeSelector2  = &amp;quot;{{{AppearTypeSelector2}}}&amp;quot;;&amp;#xA;        &amp;#xA;        Start-Sleep -Seconds $DelayBefore; &amp;#xA;               &amp;#xA;        $psresultstr = Read-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;ClickUI&amp;lt;/InternalName&amp;gt;&amp;lt;InternalType&amp;gt;Internet&amp;lt;/InternalType&amp;gt;&amp;lt;Action&amp;gt;{{{Action}}}&amp;lt;/Action&amp;gt;&amp;lt;OffsetX&amp;gt;$OffsetX&amp;lt;/OffsetX&amp;gt;&amp;lt;OffsetY&amp;gt;$OffsetY&amp;lt;/OffsetY&amp;gt;&amp;lt;ProcessID&amp;gt;$ProcessID&amp;lt;/ProcessID&amp;gt;&amp;lt;KeyModifier&amp;gt;$KeyModifier&amp;lt;/KeyModifier&amp;gt;&amp;lt;AutoScroll&amp;gt;{{{AutoScroll}}}&amp;lt;/AutoScroll&amp;gt;&amp;lt;WaitTime&amp;gt;$WaitTime&amp;lt;/WaitTime&amp;gt;&amp;lt;SimulateMove&amp;gt;{{{SimulateMove}}}&amp;lt;/SimulateMove&amp;gt;&amp;lt;SimulateMessages&amp;gt;{{{SimulateMessages}}}&amp;lt;/SimulateMessages&amp;gt;&amp;lt;AbsolutePoint&amp;gt;{{{AbsolutePoint}}}&amp;lt;/AbsolutePoint&amp;gt;{{{Selector}}}&amp;lt;DelayBeforeSelector2&amp;gt;$DelayBeforeSelector2&amp;lt;/DelayBeforeSelector2&amp;gt;&amp;lt;WaitTimeSelector2&amp;gt;$WaitTimeSelector2&amp;lt;/WaitTimeSelector2&amp;gt;&amp;lt;AttemptsSelector2&amp;gt;$AttemptsSelector2&amp;lt;/AttemptsSelector2&amp;gt;&amp;lt;AppearTypeSelector2&amp;gt;$AppearTypeSelector2&amp;lt;/AppearTypeSelector2&amp;gt;{{{Selector2}}}&amp;lt;/block&amp;gt;&amp;quot;);                      &amp;#xA;        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);&amp;#xA;        if($__Error.CheckResult($psResult)) { return; }&amp;#xA;           &amp;#xA;        {{{NewProcessID}}} = $psResult.Result; &amp;#xA;        &amp;#xA;        Start-Sleep -Seconds $DelayAfter;&amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }                                            &amp;#xA;    $__Error.Quit(); &amp;#xA;}                   &amp;#xA;                " TextColor="#FFFFFFFF" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="Selector" Tooltip="[Селектор] Идентификатор окна браузера и элемента веб-страницы. Если селектор будет пустым, то клик будет произведен используя заданные смещения от текущего положения курсора" CatalogName="Main properties" Type="Selector" Value="&amp;lt;Selector&amp;gt;&amp;lt;Process Name=&amp;quot;chrome&amp;quot; /&amp;gt;&amp;lt;CSSElement CSS=&amp;quot;SPAN.city-select__text_90n&amp;quot; /&amp;gt;&amp;lt;/Selector&amp;gt;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Action" Tooltip="Выбор действия: левый клик, двойной клик, правый клик, навести курсор" CatalogName="Main properties" Type="Enum" Value="Click" Visible="True" DefaultValue="" ValueType="" EnumVariants="Click;DoubleClick;RightClick;Over" Caption="Действие" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="KeyModifier" Tooltip="[Текст] Указывается клавиша-можификатор, которая будет зажата при клике. Возможные значения: &amp;quot;CTRL&amp;quot;, &amp;quot;SHIFT&amp;quot;, &amp;quot;ALT&amp;quot;, &amp;quot;SPACE&amp;quot;. Есть возможность указать комбинацию клавиш, например: &amp;quot;CTRL+SHIFT&amp;quot;" CatalogName="Custom properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="" Caption="Клавиша-модификатор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="4fe7c305-638d-48d1-91bc-82639a0000bb" Visible="False" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="{x:Null}" Caption="ThumbImage" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ProcessID" Tooltip="[Ссылка] Переменная, в которой хранится идентификатор процесса и вкладки браузера, используемые данным блоком. Если свойство оставить пустым, либо если переменная &amp;quot;ID процесса&amp;quot; не была ранее присвоена в момент открытия браузера, приложение и вкладка браузера будут определены из содержимого соответствующей строки селектора. ID процесса может быть получен, например, с помощью блоков Запустить IE, Запустить Chrome или Присоединиться к браузеру." CatalogName="Main properties" Type="Variable" Value="$ProcessID" Visible="True" DefaultValue="" ValueType="ProcessID" EnumVariants="" Caption="ID процесса" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBefore" Tooltip="[Число] Задержка в секундах перед выполнением блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка перед" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayAfter" Tooltip="[Число] Задержка в секундах после выполения блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка после" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTime" Tooltip="[Число] Предельное время ожидания появления элемента в секундах" CatalogName="Main properties" Type="Expression" Value="30" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AutoScroll" Tooltip="Если выбрано, то будет произведен автоматический скроллинг до элемента, который находится за пределами видимой части страницы" CatalogName="Custom properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Автоскроллинг" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetX" Tooltip="[Число] Относительное смещение клика по координате X от левого верхнего угла элемента. Если не указано никакое значение (свойство пустое), то в качестве точки клика будет использоваться центр элемента" CatalogName="Main properties" Type="Expression" Value="27" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по X" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetY" Tooltip="[Число] Относительное смещение клика по координате Y от левого верхнего угла элемента. Если не указано никакое значение (свойство пустое), то в качестве точки клика будет использоваться центр элемента" CatalogName="Main properties" Type="Expression" Value="13" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по Y" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Selector2" Tooltip="[Селектор] Идентификатор элемента пользовательского интерфейса. Если селектор будет пустым, то блок не будет ожидать появление этого элемента" CatalogName="Main properties" Type="Selector" Value="&amp;lt;Selector&amp;gt;&amp;lt;Process Name=&amp;quot;chrome&amp;quot; /&amp;gt;&amp;lt;CSSElement CSS=&amp;quot;DIV[id='select-city']&amp;quot; /&amp;gt;&amp;lt;/Selector&amp;gt;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AppearTypeSelector2" Tooltip="Выбор типа ожидания. Appear - появление, Disappear - исчезновение" CatalogName="Main properties" Type="Enum" Value="Appear" Visible="True" DefaultValue="" ValueType="" EnumVariants="Appear;Disappear" Caption="Тип ожидания селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBeforeSelector2" Tooltip="[Число] Задержка перед проверкой селектора ожидания" CatalogName="Main properties" Type="Expression" Value="2" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Задержка перед проверкой селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTimeSelector2" Tooltip="[Число] Предельное время ожидания элемента, заданного в селекторе ожидания в секундах" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания для селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AttemptsSelector2" Tooltip="[Число] Количество попыток для селектора ожидания. Если селектор ожидания не будет найден, то блок будет производить клик по основному селектору" CatalogName="Main properties" Type="Expression" Value="1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Количество попыток для селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SimulateMove" Tooltip="При включении будет симулироваться движение курсора мышки от текущей позиции до рассчитанной блоком точки" CatalogName="Custom properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Симуляция движения" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SimulateMessages" Tooltip="При включении клик будет выполнен средствами браузера" CatalogName="Custom properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Симуляция клика" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AbsolutePoint" Tooltip="Если включено, то свойства со &amp;quot;Смещение по X&amp;quot; и &amp;quot;Смещение по Y&amp;quot; будут использоваться как абсолютные координаты для клика. Если не задан селектор, то клик будет произведен в этих координатах" CatalogName="Custom properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Абсолютные координаты" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="NewProcessID" Tooltip="[Ссылка]  Если в результате работы блока открылась новая вкладка браузера, то ее идентификатор будет записан в указанную здесь переменную. В большинстве случаев это свойство и свойство &amp;quot;ID процесса&amp;quot; могут использовать одну и ту же переменную. Укажите другое имя переменной, если вы хотите продолжать работу со старой вкладкой в случае открытия новой вкладки или же разделить работу со старой и новой вкладками между разными блоками диаграммы" CatalogName="Output" Type="Variable" Value="$ProcessID" Visible="True" DefaultValue="" ValueType="NewProcessID" EnumVariants="" Caption="Новый ID процесса" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
    <DesignerItem>
      <Left>1195</Left>
      <Top>1650</Top>
      <Width>200</Width>
      <Height>75</Height>
      <ID>16ba7416-00b8-4bbf-a5dc-8e8542438e7c</ID>
      <zIndex>86</zIndex>
      <IsGroup>false</IsGroup>
      <IsEnabled>true</IsEnabled>
      <Description></Description>
      <IsPSVerified>true</IsPSVerified>
      <ParentID>00000000-0000-0000-0000-000000000000</ParentID>
      <StorageSelectors>&lt;StorageSelector&gt;&lt;Selector&gt;&lt;Process Name="chrome" /&gt;&lt;CSSElement CSS="NAV[id='header-search']" /&gt;&lt;/Selector&gt;&lt;ThumbImageID&gt;0c7a3266-ac6c-4165-a3cf-462641d4a86e&lt;/ThumbImageID&gt;&lt;Snapshot&gt;AAEAAAD/////AQAAAAAAAAAEAQAAAOIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQQAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQ1LZXlWYWx1ZVBhaXJzAAMAAwiSAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCOYBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dW10GAAAACQIAAAAHAAAACQMAAAAEAgAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAABwMAAAAAAQAAAAUAAAAD5AFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5LZXlWYWx1ZVBhaXJgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0E/P///+QBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dAgAAAANrZXkFdmFsdWUBAQYFAAAAB3RhZ05hbWUGBgAAAANOQVYB+f////z///8GCAAAAAtzb3VyY2VJbmRleAYJAAAAAjk3Afb////8////BgsAAAACaWQGDAAAAA1oZWFkZXItc2VhcmNoAfP////8////Bg4AAAAFY2xhc3MGDwAAAA1oZWFkZXItYm90dG9tAfD////8////BhEAAAAGc2hhZG93BhIAAAAFZmFsc2UL&lt;/Snapshot&gt;&lt;Created&gt;08.08.2023 13:32:34&lt;/Created&gt;&lt;/StorageSelector&gt;</StorageSelectors>
      <Content>&lt;ToolboxItemSettings DisplayName="Нажать клавиши" InternalName="PressKeysInternet" FriendlyName="Эмуляция нажатия клавиш на клавиатуре. Может эмулировать как непрерывный ввод текста, так и нажатия комбинаций клавиш, а также любые сочетания специальных клавиш и текста. В составе комбинаций могут использоваться не только клавиши клавиатуры, но и мыши. Для записи комбинаций клавиш зайдите в окно селектора и нажмите кнопку &amp;quot;Запись&amp;quot;" Width="200" Height="75" PathToImage="ExternalToolboxes\Image\ico_browser Press Keys.png" PathToToolboxImage="{x:Null}" ImageType="LeftImage" NoDelete="False" Invisible="False" Proportional="True" Version="47" Code="&amp;#xA;function PressKeysInternet{{{block_id}}}&amp;#xA;{&amp;#xA;    try&amp;#xA;    {&amp;#xA;        $__Error.Enter(&amp;quot;{{{block_native_id}}}&amp;quot;, &amp;quot;{{{ErrorLevel}}}&amp;quot;,&amp;quot;{{{ErrorDirection}}}&amp;quot;,&amp;quot;{{{ReportLevel}}}&amp;quot;,&amp;quot;{{{ErrorMessage}}}&amp;quot;);&amp;#xA;        $__Error.AddConnectors(&amp;quot;{{{connector-Error}}}&amp;quot;, &amp;quot;{{{connectorRight}}}&amp;quot;, &amp;quot;{{{connectorBottom}}}&amp;quot;);&amp;#xA;           &amp;#xA;        $KeysValueObj     = {{{KeysValue}}};&amp;#xA;        $ProcessID        = {{{ProcessID}}};  &amp;#xA;        $InteractiveDelay = {{{InteractiveDelay}}}; &amp;#xA;        $DelayAfter       = {{{DelayAfter}}}; &amp;#xA;        $DelayBefore      = {{{DelayBefore}}}; &amp;#xA;        $WaitTime         = {{{WaitTime}}}; &amp;#xA;        $OnlyText         = ${{{OnlyText}}};  &amp;#xA;        $OffsetX          = {{{OffsetX}}};&amp;#xA;        $OffsetY          = {{{OffsetY}}};  &amp;#xA;        $DelayBeforeSelector2 = {{{DelayBeforeSelector2}}};&amp;#xA;        $WaitTimeSelector2    = {{{WaitTimeSelector2}}};&amp;#xA;        $AttemptsSelector2    = {{{AttemptsSelector2}}}; &amp;#xA;        $AppearTypeSelector2  = &amp;quot;{{{AppearTypeSelector2}}}&amp;quot;;&amp;#xA;        &amp;#xA;        Start-Sleep -Seconds $DelayBefore; &amp;#xA;                  &amp;#xA;        $KeysValue = _checkpassword($KeysValueObj);&amp;#xA;        &amp;#xA;        if($OnlyText)&amp;#xA;        {&amp;#xA;            $KeysValue = &amp;quot;[TEXT]&amp;quot; + $KeysValue;&amp;#xA;        }&amp;#xA;        &amp;#xA;        $val = _shield $KeysValue;&amp;#xA;        &amp;#xA;        $psresultstr = Read-Host(&amp;quot;&amp;lt;block&amp;gt;&amp;lt;ID&amp;gt;{{{block_native_id}}}&amp;lt;/ID&amp;gt;&amp;lt;InternalName&amp;gt;SendKeys&amp;lt;/InternalName&amp;gt;&amp;lt;ProcessID&amp;gt;$ProcessID&amp;lt;/ProcessID&amp;gt;&amp;lt;InternalType&amp;gt;Internet&amp;lt;/InternalType&amp;gt;&amp;lt;InteractiveType&amp;gt;{{{InteractiveType}}}&amp;lt;/InteractiveType&amp;gt;&amp;lt;InteractiveDelay&amp;gt;$InteractiveDelay&amp;lt;/InteractiveDelay&amp;gt;&amp;lt;OffsetX&amp;gt;$OffsetX&amp;lt;/OffsetX&amp;gt;&amp;lt;OffsetY&amp;gt;$OffsetY&amp;lt;/OffsetY&amp;gt;&amp;lt;KeysValue&amp;gt;$val&amp;lt;/KeysValue&amp;gt;&amp;lt;SelectAll&amp;gt;{{{SelectAll}}}&amp;lt;/SelectAll&amp;gt;&amp;lt;WaitTime&amp;gt;$WaitTime&amp;lt;/WaitTime&amp;gt;&amp;lt;SimulateMessages&amp;gt;{{{SimulateMessages}}}&amp;lt;/SimulateMessages&amp;gt;&amp;lt;SimulateMove&amp;gt;{{{SimulateMove}}}&amp;lt;/SimulateMove&amp;gt;&amp;lt;AutoScroll&amp;gt;{{{AutoScroll}}}&amp;lt;/AutoScroll&amp;gt;&amp;lt;AutoDepressing&amp;gt;{{{AutoDepressing}}}&amp;lt;/AutoDepressing&amp;gt;{{{Selector}}}&amp;lt;DelayBeforeSelector2&amp;gt;$DelayBeforeSelector2&amp;lt;/DelayBeforeSelector2&amp;gt;&amp;lt;WaitTimeSelector2&amp;gt;$WaitTimeSelector2&amp;lt;/WaitTimeSelector2&amp;gt;&amp;lt;AttemptsSelector2&amp;gt;$AttemptsSelector2&amp;lt;/AttemptsSelector2&amp;gt;&amp;lt;AppearTypeSelector2&amp;gt;$AppearTypeSelector2&amp;lt;/AppearTypeSelector2&amp;gt;{{{Selector2}}}&amp;lt;/block&amp;gt;&amp;quot;);                        &amp;#xA;        $psResult    = [MainHelpers.PSResult]::Deserialize($psresultstr);&amp;#xA;        if($__Error.CheckResult($psResult)) { return; } &amp;#xA;        &amp;#xA;        Start-Sleep -Seconds $DelayAfter; &amp;#xA;    }&amp;#xA;    catch &amp;#xA;    { &amp;#xA;        $__Error.ExceptionCatch($_);&amp;#xA;        return;&amp;#xA;    }&amp;#xA;    $__Error.Quit();  &amp;#xA;}                   &amp;#xA;                " TextColor="#FFFFFFFF" ProtoName="" UrlVideo="{x:Null}" DerivedFrom="" NoResize="False" Container="False" MouseOverColor="Gray" MouseOverFill="Transparent" IsExpressionOnPause="False" ExpressionOnPause="" IsCollapsedBlock="False" Breakpoint="False" DirivedFrom="" xmlns="clr-namespace:ToolboxDesigner.Core;assembly=DiagramDesigner" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;ToolboxItemSettings.PathStyle&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle&gt;&lt;ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.BasedOn&gt;&lt;av:Style TargetType="av:Path"&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#FF41B1E1&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeThickness"&gt;&lt;av:Setter.Value&gt;&lt;s:Double&gt;2&lt;/s:Double&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.StrokeLineJoin"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:PenLineJoin.Round" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stretch"&gt;&lt;av:Setter.Value&gt;&lt;x:Static Member="av:Stretch.Fill" /&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;False&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:UIElement.SnapsToDevicePixels"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:Path.Data"&gt;&lt;av:Setter.Value&gt;&lt;av:StreamGeometry&gt;M0,0L80,0 80,20 0,20z&lt;/av:StreamGeometry&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/av:Style.BasedOn&gt;&lt;av:Style.Resources&gt;&lt;av:ResourceDictionary /&gt;&lt;/av:Style.Resources&gt;&lt;av:Setter Property="av:UIElement.IsHitTestVisible"&gt;&lt;av:Setter.Value&gt;&lt;s:Boolean&gt;True&lt;/s:Boolean&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Fill"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;av:Setter Property="av:Shape.Stroke"&gt;&lt;av:Setter.Value&gt;&lt;av:SolidColorBrush&gt;#00FFFFFF&lt;/av:SolidColorBrush&gt;&lt;/av:Setter.Value&gt;&lt;/av:Setter&gt;&lt;/av:Style&gt;&lt;/ToolboxItemSettings.PathStyle_DragThumb&gt;&lt;ToolboxItemSettings.Properties&gt;&lt;PropertiesCollection Capacity="32"&gt;&lt;Property Name="KeysValue" Tooltip="[Текст] Текст или клавиши, которые необходимо эмулировать. Например: &amp;quot;Test text&amp;quot; - будут эмулироваться клавиши для ввода этой строки; &amp;quot;[ENTER]&amp;quot; - будет нажата клавиша Enter. В рамках одного блока можно сочетать непрерывный ввод текста и нажатия клавиш. Для записи комбинаций клавиш зайдите в окно селектора и нажмите кнопку &amp;quot;Запись&amp;quot;" CatalogName="Required" Type="Expression" Value="$settings.city + &amp;quot;[ENTER]&amp;quot;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Text" EnumVariants="{x:Null}" Caption="Клавиши" ProtoName="" ReadOnly="False" IsRequired="True" IsPSVerified="True" /&gt;&lt;Property Name="Selector" Tooltip="[Селектор] Идентификатор окна браузера и элемента веб-страницы. Если задано данное свойство, то фокус будет установлен на заданный элемент веб-страницы перед началом ввода текста." CatalogName="Main properties" Type="Selector" Value="&amp;lt;Selector&amp;gt;&amp;lt;Process Name=&amp;quot;chrome&amp;quot; /&amp;gt;&amp;lt;CSSElement CSS=&amp;quot;INPUT.base-ui-input-search_base-ui-input-search__input_ZW4RL&amp;quot; /&amp;gt;&amp;lt;/Selector&amp;gt;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ThumbImage" Tooltip="Thumb Image" CatalogName="Main properties" Type="Image" Value="0c7a3266-ac6c-4165-a3cf-462641d4a86e" Visible="False" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="{x:Null}" Caption="ThumbImage" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ProcessID" Tooltip="[Ссылка] Переменная, в которой хранится идентификатор процесса и вкладки браузера, используемые данным блоком. Если свойство оставить пустым, либо если переменная &amp;quot;ID процесса&amp;quot; не была ранее присвоена в момент открытия браузера, приложение и вкладка браузера будут определены из содержимого соответствующей строки селектора. ID процесса может быть получен, например, с помощью блоков Запустить IE, Запустить Chrome или Присоединиться к браузеру." CatalogName="Main properties" Type="Variable" Value="$ProcessID" Visible="True" DefaultValue="" ValueType="ProcessID" EnumVariants="" Caption="ID процесса" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="InteractiveType" Tooltip="Если задано, то между нажатиями клавиш будут вставляться паузы. Рекомендуем включить это свойство, если из-за особенностей приложения или веб-страницы в процессе эмуляции ввода текста теряются отдельные буквы." CatalogName="Main properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Интерактивно" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="InteractiveDelay" Tooltip="[Число] Если задано свойство Интерактивно, то между нажатиями клавиш будет вставляться указанная здесь в миллисекундах пауза" CatalogName="Main properties" Type="Expression" Value="100" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Время паузы" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SelectAll" Tooltip="Перед началом ввода посылать сочетание клавиш &amp;quot;выбрать все&amp;quot; (Ctrl+A)." CatalogName="Main properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Выбрать все" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OnlyText" Tooltip="Если включено, то весь текст считается символами и не будет разбиваться на управляющие клавиши" CatalogName="Main properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Только текст" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBefore" Tooltip="[Число] Задержка в секундах перед выполением блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка перед" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayAfter" Tooltip="[Число] Задержка в секундах после выполения блока" CatalogName="Main properties" Type="Expression" Value="0" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Задержка после" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTime" Tooltip="[Число] Предельное время ожидания заданного элемента в секундах" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetX" Tooltip="[Число] Относительное смещение клика по координате X от левого верхнего угла элемента. Если не указано никакое значение (свойство пустое), то в качестве точки клика будет использоваться центр элемента" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по X" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="OffsetY" Tooltip="[Число] Относительное смещение клика по координате Y от левого верхнего угла элемента. Если не указано никакое значение (свойство пустое), то в качестве точки клика будет использоваться центр элемента" CatalogName="Main properties" Type="Expression" Value="" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="" Caption="Смещение по Y" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="Selector2" Tooltip="[Селектор] Идентификатор элемента пользовательского интерфейса. Если селектор будет пустым, то блок не будет ожидать появление этого элемента" CatalogName="Main properties" Type="Selector" Value="&amp;lt;Selector&amp;gt;&amp;lt;Process Name=&amp;quot;chrome&amp;quot; /&amp;gt;&amp;lt;CSSElement CSS=&amp;quot;NAV[id='header-search']&amp;quot; /&amp;gt;&amp;lt;/Selector&amp;gt;" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Selector" EnumVariants="{x:Null}" Caption="Селектор ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AppearTypeSelector2" Tooltip="Выбор типа ожидания. AppearAfter - появление после ввода текста, DisappearAfter - исчезновение после ввода текста; AppearBefore - появление перед вводом текста; DisappearBefore -исчезновение перед вводом текста. При выборе After - сначала будет сделан клик мышкой, потом ввод текста, потом проверка селектора ожидания. При выборе Before - сначала будет сделан клик мышкой, потом проверка селектора ожидания, потом ввод текста" CatalogName="Main properties" Type="Enum" Value="AppearAfter" Visible="True" DefaultValue="" ValueType="" EnumVariants="AppearAfter;DisappearAfter;AppearBefore;DisappearBefore" Caption="Тип ожидания селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="DelayBeforeSelector2" Tooltip="[Число] Задержка перед проверкой селектора ожидания" CatalogName="Main properties" Type="Expression" Value="2" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Задержка перед проверкой селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="WaitTimeSelector2" Tooltip="[Число] Предельное время ожидания элемента, заданного в селекторе ожидания в секундах" CatalogName="Main properties" Type="Expression" Value="10" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="Number" EnumVariants="{x:Null}" Caption="Время ожидания для селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AttemptsSelector2" Tooltip="[Число] Количество попыток для селектора ожидания. Если селектор ожидания не будет найден, то блок будет производить клик по основному селектору" CatalogName="Main properties" Type="Expression" Value="1" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Количество попыток для селектора ожидания" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AutoScroll" Tooltip="Если выбрано, будет автоматически произведена прокрутка списка до элемента, находящегося вне видимой области" CatalogName="Custom properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Автоскроллинг" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SimulateMove" Tooltip="При включении будет симулироваться движение курсора мышки от текущей позиции до рассчитанной блоком точки" CatalogName="Custom properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Симуляция движения" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="SimulateMessages" Tooltip="(Только для IE) При включении будет выполнена симуляция ввода средствами браузера" CatalogName="Custom properties" Type="Bool" Value="False" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Симуляция ввода" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="AutoDepressing" Tooltip="При включении зажатые клавиши (с модификатором +, например [+CTRL]) будут автоматически отжаты после выполнения блока. Если свойство выключено, то необходимо вручную отжать ранее зажатую клавишу (с модификатором -, например [-CTRL])" CatalogName="Custom properties" Type="Bool" Value="True" Visible="True" DefaultValue="&amp;quot;&amp;quot;" ValueType="" EnumVariants="" Caption="Автоматическое отжатие" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorLevel" Tooltip="Выбор уровня обработки ошибок. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Ignore&amp;quot; - ошибки игнорируются; &amp;quot;Handle&amp;quot; - ошибки обрабатываются. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Ignore;Handle" Caption="Уровень обработки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ReportLevel" Tooltip="Выбор уровня сообщений, которые будут выводить блоки при работе. Возможные значения: &amp;quot;Default&amp;quot; - по умолчанию; &amp;quot;Release&amp;quot; - вывод отключен; &amp;quot;Debug&amp;quot; - вывод основной информации; &amp;quot;Detailed&amp;quot; - вывод подробной информации. Если выбрано значение &amp;quot;Default&amp;quot;, то будет использоваться значение блока &amp;quot;Старт&amp;quot; данной диаграммы" CatalogName="Error processing" Type="Enum" Value="Default" Visible="True" DefaultValue="" ValueType="" EnumVariants="Default;Release;Debug;Detailed;Output" Caption="Уровень сообщений" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;Property Name="ErrorMessage" Tooltip="[Текст] Возвращает подробную информацию об ошибке в случае некорректного выполнения работы блока" CatalogName="Error processing" Type="Variable" Value="$ErrorMessage" Visible="True" DefaultValue="" ValueType="" EnumVariants="" Caption="Текст ошибки" ProtoName="" ReadOnly="False" IsRequired="False" IsPSVerified="True" /&gt;&lt;/PropertiesCollection&gt;&lt;/ToolboxItemSettings.Properties&gt;&lt;ToolboxItemSettings.ConnectorsSettings&gt;&lt;ConnectorsSettingsCollection Capacity="4"&gt;&lt;ConnectorSettings Name="Input" Orientation="Top" RelativePosition="0.5,0" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Error" Orientation="Right" RelativePosition="1,0.5" MaxInConnections="0" MaxOutConnections="1" Color="#FFFF0000" Caption="Если ошибка" /&gt;&lt;ConnectorSettings Name="InputLeft" Orientation="Left" RelativePosition="0,0.5" MaxInConnections="100" MaxOutConnections="0" Color="#FF000000" Caption="" /&gt;&lt;ConnectorSettings Name="Next" Orientation="Bottom" RelativePosition="0.5,1" MaxInConnections="0" MaxOutConnections="1" Color="#FF000000" Caption="" /&gt;&lt;/ConnectorsSettingsCollection&gt;&lt;/ToolboxItemSettings.ConnectorsSettings&gt;&lt;/ToolboxItemSettings&gt;</Content>
    </DesignerItem>
  </DesignerItems>
  <Connections>
    <Connection>
      <SourceID>84f26c8d-ba23-42db-a3c3-4c1791c6bf7c</SourceID>
      <SinkID>6cd76787-1d6a-4d2a-bb34-6874a036d351</SinkID>
      <SourceConnectorName>No</SourceConnectorName>
      <SinkConnectorName>InputLeft</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>38</zIndex>
    </Connection>
    <Connection>
      <SourceID>6cd76787-1d6a-4d2a-bb34-6874a036d351</SourceID>
      <SinkID>fee617fd-117a-43aa-bedc-0aa88a7e23f9</SinkID>
      <SourceConnectorName>No</SourceConnectorName>
      <SinkConnectorName>InputLeft</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>42</zIndex>
    </Connection>
    <Connection>
      <SourceID>fee617fd-117a-43aa-bedc-0aa88a7e23f9</SourceID>
      <SinkID>9fc4e7c7-59db-41e3-8d2c-90aca2f43aa0</SinkID>
      <SourceConnectorName>No</SourceConnectorName>
      <SinkConnectorName>InputLeft</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>44</zIndex>
    </Connection>
    <Connection>
      <SourceID>ed79fd7e-efb4-4e2b-8580-e5c107620046</SourceID>
      <SinkID>c593cd47-d84d-43c8-8f7a-bf074181591d</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>28</zIndex>
    </Connection>
    <Connection>
      <SourceID>c593cd47-d84d-43c8-8f7a-bf074181591d</SourceID>
      <SinkID>fec257f7-d817-4983-8c4a-b8bd16cb1069</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>30</zIndex>
    </Connection>
    <Connection>
      <SourceID>fec257f7-d817-4983-8c4a-b8bd16cb1069</SourceID>
      <SinkID>6cd76787-1d6a-4d2a-bb34-6874a036d351</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>31</zIndex>
    </Connection>
    <Connection>
      <SourceID>1e1e395e-b0c9-44ab-99b8-7f2fcdf45cef</SourceID>
      <SinkID>a8805cae-ffc5-425d-a311-520f0bf313be</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>80</zIndex>
    </Connection>
    <Connection>
      <SourceID>40c880b3-3d97-4c19-8546-5974cde18389</SourceID>
      <SinkID>8d547972-d135-4fb4-be7b-2801e9c01e2c</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>46</zIndex>
    </Connection>
    <Connection>
      <SourceID>a49e3188-a50c-426c-99ae-6dcb32f959b3</SourceID>
      <SinkID>d4e0b0f9-1840-4f0b-9153-a84a40ecd072</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>69</zIndex>
    </Connection>
    <Connection>
      <SourceID>a8805cae-ffc5-425d-a311-520f0bf313be</SourceID>
      <SinkID>743147dc-4179-4599-9b47-b81dd30da2c5</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>26</zIndex>
    </Connection>
    <Connection>
      <SourceID>41b21107-b8ae-40fd-aa4c-06ebd82def85</SourceID>
      <SinkID>f65a5a82-80dc-4a52-a38a-d041015d728d</SinkID>
      <SourceConnectorName>Row</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>59</zIndex>
    </Connection>
    <Connection>
      <SourceID>c7b46447-96f2-4ddd-bf5e-99a3aed987bb</SourceID>
      <SinkID>b2780071-742d-434e-951a-39cf00e6c23c</SinkID>
      <SourceConnectorName>Index</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>55</zIndex>
    </Connection>
    <Connection>
      <SourceID>b2780071-742d-434e-951a-39cf00e6c23c</SourceID>
      <SinkID>95a75ed7-ab99-49d2-a197-89f641f701d2</SinkID>
      <SourceConnectorName>No</SourceConnectorName>
      <SinkConnectorName>InputLeft</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>48</zIndex>
    </Connection>
    <Connection>
      <SourceID>8d547972-d135-4fb4-be7b-2801e9c01e2c</SourceID>
      <SinkID>e1bea70d-191a-4a90-b795-f99a001c5096</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>InOut</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>2</zIndex>
    </Connection>
    <Connection>
      <SourceID>e1bea70d-191a-4a90-b795-f99a001c5096</SourceID>
      <SinkID>c7b46447-96f2-4ddd-bf5e-99a3aed987bb</SinkID>
      <SourceConnectorName>InOut</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>3</zIndex>
    </Connection>
    <Connection>
      <SourceID>6e8caf4a-844f-4915-b157-3741396db3bd</SourceID>
      <SinkID>43e17ac2-f3c9-45ce-a468-b29c453e4aca</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>50</zIndex>
    </Connection>
    <Connection>
      <SourceID>3092979e-30c5-4b95-a027-297fad901b4a</SourceID>
      <SinkID>e1bea70d-191a-4a90-b795-f99a001c5096</SinkID>
      <SourceConnectorName>InOut</SourceConnectorName>
      <SinkConnectorName>InOut</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>4</zIndex>
    </Connection>
    <Connection>
      <SourceID>95a75ed7-ab99-49d2-a197-89f641f701d2</SourceID>
      <SinkID>e04dc319-9926-4791-b67f-66bf3b6b628a</SinkID>
      <SourceConnectorName>No</SourceConnectorName>
      <SinkConnectorName>InOut</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>8</zIndex>
    </Connection>
    <Connection>
      <SourceID>e04dc319-9926-4791-b67f-66bf3b6b628a</SourceID>
      <SinkID>3092979e-30c5-4b95-a027-297fad901b4a</SinkID>
      <SourceConnectorName>InOut</SourceConnectorName>
      <SinkConnectorName>InOut</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>6</zIndex>
    </Connection>
    <Connection>
      <SourceID>43e17ac2-f3c9-45ce-a468-b29c453e4aca</SourceID>
      <SinkID>e04dc319-9926-4791-b67f-66bf3b6b628a</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>InOut</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>9</zIndex>
    </Connection>
    <Connection>
      <SourceID>b2780071-742d-434e-951a-39cf00e6c23c</SourceID>
      <SinkID>24fe62a5-560c-4b9d-b8d5-e1bb868f9794</SinkID>
      <SourceConnectorName>Yes</SourceConnectorName>
      <SinkConnectorName>InOut</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>11</zIndex>
    </Connection>
    <Connection>
      <SourceID>24fe62a5-560c-4b9d-b8d5-e1bb868f9794</SourceID>
      <SinkID>6e8caf4a-844f-4915-b157-3741396db3bd</SinkID>
      <SourceConnectorName>InOut</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>12</zIndex>
    </Connection>
    <Connection>
      <SourceID>95a75ed7-ab99-49d2-a197-89f641f701d2</SourceID>
      <SinkID>24fe62a5-560c-4b9d-b8d5-e1bb868f9794</SinkID>
      <SourceConnectorName>Yes</SourceConnectorName>
      <SinkConnectorName>InOut</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>13</zIndex>
    </Connection>
    <Connection>
      <SourceID>c7b46447-96f2-4ddd-bf5e-99a3aed987bb</SourceID>
      <SinkID>a76b6197-3f41-4a8a-9269-f8c4824ce878</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>57</zIndex>
    </Connection>
    <Connection>
      <SourceID>84f26c8d-ba23-42db-a3c3-4c1791c6bf7c</SourceID>
      <SinkID>f64b1f64-4635-4383-87c0-ecd9a0817204</SinkID>
      <SourceConnectorName>Yes</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>40</zIndex>
    </Connection>
    <Connection>
      <SourceID>f64b1f64-4635-4383-87c0-ecd9a0817204</SourceID>
      <SinkID>cf70f599-db28-4a13-a5c5-0220a03b625a</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>15</zIndex>
    </Connection>
    <Connection>
      <SourceID>7b7f3ea5-7439-4c46-b994-1996fe822d70</SourceID>
      <SinkID>84f26c8d-ba23-42db-a3c3-4c1791c6bf7c</SinkID>
      <SourceConnectorName>InOut</SourceConnectorName>
      <SinkConnectorName>InputLeft</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>36</zIndex>
    </Connection>
    <Connection>
      <SourceID>cf70f599-db28-4a13-a5c5-0220a03b625a</SourceID>
      <SinkID>e7cba3d6-ce7e-43fb-b8dc-c9093d866af1</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>InOut</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>16</zIndex>
    </Connection>
    <Connection>
      <SourceID>e7cba3d6-ce7e-43fb-b8dc-c9093d866af1</SourceID>
      <SinkID>7b7f3ea5-7439-4c46-b994-1996fe822d70</SinkID>
      <SourceConnectorName>InOut</SourceConnectorName>
      <SinkConnectorName>InOut</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>35</zIndex>
    </Connection>
    <Connection>
      <SourceID>d2c7eade-9d40-422d-9946-dbb6946edf48</SourceID>
      <SinkID>3983c6a6-edf7-4b7a-93d6-1765f54fbe0e</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>InOut</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>33</zIndex>
    </Connection>
    <Connection>
      <SourceID>3983c6a6-edf7-4b7a-93d6-1765f54fbe0e</SourceID>
      <SinkID>e7cba3d6-ce7e-43fb-b8dc-c9093d866af1</SinkID>
      <SourceConnectorName>InOut</SourceConnectorName>
      <SinkConnectorName>InOut</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>34</zIndex>
    </Connection>
    <Connection>
      <SourceID>f4783d77-abe7-49fb-b5d4-f2afcc6b5693</SourceID>
      <SinkID>0a8d234c-f4c9-42e2-ad69-a0eac6393acc</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>InOut</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>22</zIndex>
    </Connection>
    <Connection>
      <SourceID>0a8d234c-f4c9-42e2-ad69-a0eac6393acc</SourceID>
      <SinkID>3983c6a6-edf7-4b7a-93d6-1765f54fbe0e</SinkID>
      <SourceConnectorName>InOut</SourceConnectorName>
      <SinkConnectorName>InOut</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>20</zIndex>
    </Connection>
    <Connection>
      <SourceID>6c7d9ad7-d70e-478f-8001-99d675925e14</SourceID>
      <SinkID>0a8d234c-f4c9-42e2-ad69-a0eac6393acc</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>InOut</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>23</zIndex>
    </Connection>
    <Connection>
      <SourceID>3e4e310f-7c69-41ad-83fa-e17e3935c3e0</SourceID>
      <SinkID>a8805cae-ffc5-425d-a311-520f0bf313be</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>62</zIndex>
    </Connection>
    <Connection>
      <SourceID>76b96e13-0e34-464f-b340-071f8b99b708</SourceID>
      <SinkID>d2c7eade-9d40-422d-9946-dbb6946edf48</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>66</zIndex>
    </Connection>
    <Connection>
      <SourceID>c669ffe2-52f3-40be-a88f-1013f04c6b53</SourceID>
      <SinkID>a49e3188-a50c-426c-99ae-6dcb32f959b3</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>74</zIndex>
    </Connection>
    <Connection>
      <SourceID>fd42ccf1-1f67-4e15-981c-7f9a32ecc94c</SourceID>
      <SinkID>6a506861-081e-4d13-83e5-77de586ca944</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>71</zIndex>
    </Connection>
    <Connection>
      <SourceID>fee617fd-117a-43aa-bedc-0aa88a7e23f9</SourceID>
      <SinkID>fd42ccf1-1f67-4e15-981c-7f9a32ecc94c</SinkID>
      <SourceConnectorName>Yes</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>72</zIndex>
    </Connection>
    <Connection>
      <SourceID>6cd76787-1d6a-4d2a-bb34-6874a036d351</SourceID>
      <SinkID>c669ffe2-52f3-40be-a88f-1013f04c6b53</SinkID>
      <SourceConnectorName>Yes</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>76</zIndex>
    </Connection>
    <Connection>
      <SourceID>6a506861-081e-4d13-83e5-77de586ca944</SourceID>
      <SinkID>1e1e395e-b0c9-44ab-99b8-7f2fcdf45cef</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>78</zIndex>
    </Connection>
    <Connection>
      <SourceID>d4e0b0f9-1840-4f0b-9153-a84a40ecd072</SourceID>
      <SinkID>d19c9b09-73c6-4117-9d18-30fa56e0682a</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>85</zIndex>
    </Connection>
    <Connection>
      <SourceID>d19c9b09-73c6-4117-9d18-30fa56e0682a</SourceID>
      <SinkID>16ba7416-00b8-4bbf-a5dc-8e8542438e7c</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>87</zIndex>
    </Connection>
    <Connection>
      <SourceID>bc9fcb30-d11f-4604-869f-b89257f1fca4</SourceID>
      <SinkID>8f02855a-a1f8-4030-af4f-4ff8d45ed2fd</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>81</zIndex>
    </Connection>
    <Connection>
      <SourceID>16ba7416-00b8-4bbf-a5dc-8e8542438e7c</SourceID>
      <SinkID>8f02855a-a1f8-4030-af4f-4ff8d45ed2fd</SinkID>
      <SourceConnectorName>Next</SourceConnectorName>
      <SinkConnectorName>Input</SinkConnectorName>
      <SourceArrowSymbol>None</SourceArrowSymbol>
      <SinkArrowSymbol>Arrow</SinkArrowSymbol>
      <zIndex>89</zIndex>
    </Connection>
  </Connections>
  <Properties>
    <DiagramProperty Name="data" Type="DataTable" IsGlobal="False" DefaultValue="AAEAAAD/////AQAAAAAAAAAMAgAAAE5TeXN0ZW0uRGF0YSwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAABVTeXN0ZW0uRGF0YS5EYXRhVGFibGUDAAAAGURhdGFUYWJsZS5SZW1vdGluZ1ZlcnNpb24JWG1sU2NoZW1hC1htbERpZmZHcmFtAwEBDlN5c3RlbS5WZXJzaW9uAgAAAAkDAAAABgQAAAD1Azw/eG1sIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9InV0Zi0xNiI/Pg0KPHhzOnNjaGVtYSB4bWxucz0iIiB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOm1zZGF0YT0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTp4bWwtbXNkYXRhIj4NCiAgPHhzOmVsZW1lbnQgbmFtZT0iVGFibGUxIj4NCiAgICA8eHM6Y29tcGxleFR5cGU+DQogICAgPC94czpjb21wbGV4VHlwZT4NCiAgPC94czplbGVtZW50Pg0KICA8eHM6ZWxlbWVudCBuYW1lPSJ0bXBEYXRhU2V0IiBtc2RhdGE6SXNEYXRhU2V0PSJ0cnVlIiBtc2RhdGE6TWFpbkRhdGFUYWJsZT0iVGFibGUxIiBtc2RhdGE6VXNlQ3VycmVudExvY2FsZT0idHJ1ZSI+DQogICAgPHhzOmNvbXBsZXhUeXBlPg0KICAgICAgPHhzOmNob2ljZSBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIiAvPg0KICAgIDwveHM6Y29tcGxleFR5cGU+DQogIDwveHM6ZWxlbWVudD4NCjwveHM6c2NoZW1hPgYFAAAAgAE8ZGlmZmdyOmRpZmZncmFtIHhtbG5zOm1zZGF0YT0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTp4bWwtbXNkYXRhIiB4bWxuczpkaWZmZ3I9InVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206eG1sLWRpZmZncmFtLXYxIiAvPgQDAAAADlN5c3RlbS5WZXJzaW9uBAAAAAZfTWFqb3IGX01pbm9yBl9CdWlsZAlfUmV2aXNpb24AAAAACAgICAIAAAAAAAAA//////////8L" Value="AAEAAAD/////AQAAAAAAAAAMAgAAAE5TeXN0ZW0uRGF0YSwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAABVTeXN0ZW0uRGF0YS5EYXRhVGFibGUDAAAAGURhdGFUYWJsZS5SZW1vdGluZ1ZlcnNpb24JWG1sU2NoZW1hC1htbERpZmZHcmFtAwEBDlN5c3RlbS5WZXJzaW9uAgAAAAkDAAAABgQAAAD1Azw/eG1sIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9InV0Zi0xNiI/Pg0KPHhzOnNjaGVtYSB4bWxucz0iIiB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOm1zZGF0YT0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTp4bWwtbXNkYXRhIj4NCiAgPHhzOmVsZW1lbnQgbmFtZT0iVGFibGUxIj4NCiAgICA8eHM6Y29tcGxleFR5cGU+DQogICAgPC94czpjb21wbGV4VHlwZT4NCiAgPC94czplbGVtZW50Pg0KICA8eHM6ZWxlbWVudCBuYW1lPSJ0bXBEYXRhU2V0IiBtc2RhdGE6SXNEYXRhU2V0PSJ0cnVlIiBtc2RhdGE6TWFpbkRhdGFUYWJsZT0iVGFibGUxIiBtc2RhdGE6VXNlQ3VycmVudExvY2FsZT0idHJ1ZSI+DQogICAgPHhzOmNvbXBsZXhUeXBlPg0KICAgICAgPHhzOmNob2ljZSBtaW5PY2N1cnM9IjAiIG1heE9jY3Vycz0idW5ib3VuZGVkIiAvPg0KICAgIDwveHM6Y29tcGxleFR5cGU+DQogIDwveHM6ZWxlbWVudD4NCjwveHM6c2NoZW1hPgYFAAAAgAE8ZGlmZmdyOmRpZmZncmFtIHhtbG5zOm1zZGF0YT0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTp4bWwtbXNkYXRhIiB4bWxuczpkaWZmZ3I9InVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206eG1sLWRpZmZncmFtLXYxIiAvPgQDAAAADlN5c3RlbS5WZXJzaW9uBAAAAAZfTWFqb3IGX01pbm9yBl9CdWlsZAlfUmV2aXNpb24AAAAACAgICAIAAAAAAAAA//////////8L" />
    <DiagramProperty Name="settings" Type="Object" IsGlobal="False" DefaultValue="" Value="AAEAAAD/////AQAAAAAAAAAQAQAAAAEAAAAJAgAAAAwDAAAAX1N5c3RlbS5NYW5hZ2VtZW50LkF1dG9tYXRpb24sIFZlcnNpb249My4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj0zMWJmMzg1NmFkMzY0ZTM1BQIAAAAlU3lzdGVtLk1hbmFnZW1lbnQuQXV0b21hdGlvbi5QU09iamVjdAEAAAAGQ2xpWG1sAQMAAAAGBAAAAJ4GPE9ianMgVmVyc2lvbj0iMS4xLjAuMSIgeG1sbnM9Imh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vcG93ZXJzaGVsbC8yMDA0LzA0Ij4NCiAgPE9iaiBSZWZJZD0iMCI+DQogICAgPFROIFJlZklkPSIwIj4NCiAgICAgIDxUPlN5c3RlbS5NYW5hZ2VtZW50LkF1dG9tYXRpb24uUFNDdXN0b21PYmplY3Q8L1Q+DQogICAgICA8VD5TeXN0ZW0uT2JqZWN0PC9UPg0KICAgIDwvVE4+DQogICAgPFRvU3RyaW5nPkB7d2Vic2l0ZT13d3cuZG5zLXNob3AucnU7IHJlcXVlc3Q9UlRYIDMwODA7IGNpdHk90J3QuNC20L3QuNC5INCd0L7QstCz0L7RgNC+0LQ7IG1heENvc3Q9MTUwMDAwfTwvVG9TdHJpbmc+DQogICAgPE9iaiBSZWZJZD0iMSI+DQogICAgICA8VE5SZWYgUmVmSWQ9IjAiIC8+DQogICAgICA8TVM+DQogICAgICAgIDxTIE49IndlYnNpdGUiPnd3dy5kbnMtc2hvcC5ydTwvUz4NCiAgICAgICAgPFMgTj0icmVxdWVzdCI+UlRYIDMwODA8L1M+DQogICAgICAgIDxTIE49ImNpdHkiPtCd0LjQttC90LjQuSDQndC+0LLQs9C+0YDQvtC0PC9TPg0KICAgICAgICA8UyBOPSJtYXhDb3N0Ij4xNTAwMDA8L1M+DQogICAgICA8L01TPg0KICAgIDwvT2JqPg0KICAgIDxNUz4NCiAgICAgIDxTIE49IndlYnNpdGUiPnd3dy5kbnMtc2hvcC5ydTwvUz4NCiAgICAgIDxTIE49InJlcXVlc3QiPlJUWCAzMDgwPC9TPg0KICAgICAgPFMgTj0iY2l0eSI+0J3QuNC20L3QuNC5INCd0L7QstCz0L7RgNC+0LQ8L1M+DQogICAgICA8UyBOPSJtYXhDb3N0Ij4xNTAwMDA8L1M+DQogICAgPC9NUz4NCiAgPC9PYmo+DQo8L09ianM+Cw==" />
    <DiagramProperty Name="E10" Type="Logical" IsGlobal="False" DefaultValue="False" Value="False" />
    <DiagramProperty Name="S10" Type="Logical" IsGlobal="False" DefaultValue="True" Value="True" />
    <DiagramProperty Name="S20" Type="Logical" IsGlobal="False" DefaultValue="False" Value="False" />
    <DiagramProperty Name="S30" Type="Logical" IsGlobal="False" DefaultValue="False" Value="False" />
    <DiagramProperty Name="S40" Type="Logical" IsGlobal="False" DefaultValue="False" Value="False" />
  </Properties>
</Root>